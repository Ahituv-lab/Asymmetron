theme_bw() +
geom_hline( yintercept = 0.5, colour="red", linetype="dashed" ) +
geom_text(data =  top.hits.downstream,   aes( TF , 0.7 , label =  paste0(N.signf, "/", N.total )), position = position_dodge(0.9)) +
xlab("") +
ylab("")
fig4.h <- ggdraw() + draw_image("./Fig4.H.png")
fig4.h
Unibind_outputs_bins_genes_CTCF <- fread("./Fig4/Unibind_outputs_bins_genes_CTCF.txt")
colnames(Unibind_outputs_bins_genes_CTCF) <- c("bin", "feature", "same", "oposite", "ratio", "adj.p.value")
Unibind_outputs_bins_genes_CTCF[ , pos:=str_remove(bin, "gencode.v33.basic.annotation.bed.genes_protein_coding.formatted_bin_")]
Unibind_outputs_bins_genes_CTCF[ , pos:=as.numeric(str_remove(pos, ".txt")) ]
Unibind_outputs_bins_genes_CTCF[ like(bin,"upstream"), pos:=-1 ]
Unibind_outputs_bins_genes_CTCF[ like(bin,"downstream"), pos:=12 ]
Unibind_outputs_bins_genes_CTCF.stats <- Unibind_outputs_bins_genes_CTCF[ , .(median=median(ratio)), by="pos"   ]
fig4.g1 <- ggplot() +
geom_jitter(data=Unibind_outputs_bins_genes_CTCF, aes( as.factor(pos) , ratio), alpha=0.3) +
geom_point(data=Unibind_outputs_bins_genes_CTCF.stats, aes(as.factor(pos), median ) , color="skyblue", size=15, shape="-" ) +
geom_hline( yintercept = 0.5, colour="red", linetype="dashed" ) +
ylim(c(0.35, 0.65)) +
ylab("Strand asymmetry") +
scale_x_discrete(labels=c("Upstream 1kB", "0-10%", "10-20%","20-30%","30-40%","40-50%","50-60%","60-70%","70-80%","80-90%","90-100%","Downstream 1kB")) +
xlab("Relative gene position") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#fig4.h, fig4.g1
#View(Unibind_outputs_bins_genes_CTCF)
binned_asym[ grepl(bin, "downstream", fixed = TRUE),  ]
binned_asym[ like(bin,"upstream"), pos:=-1 ]
binned_asym[ like(bin,"downstream"), pos:=12 ]
binned_asym[, feature:=str_remove(feature, "_hg38.txt")]
fig4.ab <- plot_grid(fig4.a, fig4.b, nrow=1, labels = c("A", "B"), rel_widths = c(1, 2) )
fig4.efg <- plot_grid(fig4.e, fig4.f, fig4.g, nrow=1, rel_widths = c( 11, 3, 2 ), labels = c("D", "E", "F") )
fig4.bottom <- plot_grid(fig4.g1, fig4.h, nrow=1, rel_widths = c(2,1), labels = c("G", "H"))
plot_grid(fig4.ab, fig4.d, fig4.efg, fig4.bottom, ncol=1, labels = c("", "C", "", ""))
TOTAL.bacground
Fig3.A <- ggplot(TOTAL.bacground) +
#ylim(c(0.35, 0.65)) +
geom_segment( aes(x=Feature, xend=Feature, y=0.5, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Strand asymmetry") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
Fig3.A
Fig3.C <-ggplot(TOTAL.structural) +
#ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
Fig3.C
Fig3.A <- ggplot(TOTAL.bacground) +
ylim(c(0.3, 0.7)) +
geom_segment( aes(x=Feature, xend=Feature, y=0.5, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Strand asymmetry") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
Fig3.A
Fig3.C <-ggplot(TOTAL.structural) +
ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
Fig3.C
Fig3.C <-ggplot(TOTAL.structural) +
#ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
Fig3.C
TOTAL.structural
Fig3.C
TOTAL.structural
TOTAL.structural <- rbind(L1_L2_structural_asymmetries, Alu_MIR_structural_asymmetries, Asymmetries_structural_output.txt)
TOTAL.structural
Asymmetries_structural_output.txt
Alu_MIR_structural_asymmetries
L1_L2_structural_asymmetries
Alu_MIR_structural_asymmetries
Asymmetries_structural_output.txt
Asymmetries_structural_output.txt
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
Asymmetries_structural_output.txt
L1_L2_background_asymmetries <- fread("./L1_L2_background_asymmetries")
L1_L2_structural_asymmetries <- fread("./L1_L2_structural_asymmetries")
Alu_MIR_background_asymmetries <- fread("./Alu_MIR_background_asymmetries")
Alu_MIR_structural_asymmetries <- fread("./Alu_MIR_structural_asymmetries")
Asymmetries_output.txt <- fread("./Asymmetries_output.txt")
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
colnames(L1_L2_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(L1_L2_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_structural_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
Asymmetries_structural_output.txt
library(data.table)
library(ggplot2)
library(stringr)
library(cowplot)
library(ggsignif)
library(scales)
library(plyr)
library(ggrepel)
L1_L2_background_asymmetries <- fread("./L1_L2_background_asymmetries")
L1_L2_structural_asymmetries <- fread("./L1_L2_structural_asymmetries")
Alu_MIR_background_asymmetries <- fread("./Alu_MIR_background_asymmetries")
Alu_MIR_structural_asymmetries <- fread("./Alu_MIR_structural_asymmetries")
Asymmetries_output.txt <- fread("./Asymmetries_output.txt")
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
colnames(L1_L2_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(L1_L2_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_structural_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
TOTAL.bacground <- rbind(L1_L2_background_asymmetries, Alu_MIR_background_asymmetries, Asymmetries_output.txt)
TOTAL.bacground$Feature <- factor(TOTAL.bacground$Feature, levels = c(  "LINE", "L1", "L2", "SINE", "Alu", "MIR", "LTR"))
TOTAL.bacground[ , Type:=str_to_title(Type)]
Fig3.A <- ggplot(TOTAL.bacground) +
ylim(c(0.3, 0.7)) +
geom_segment( aes(x=Feature, xend=Feature, y=0.5, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Strand asymmetry") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
TOTAL.structural <- rbind(L1_L2_structural_asymmetries, Alu_MIR_structural_asymmetries, Asymmetries_structural_output.txt)
TOTAL.structural$Feature <- factor(TOTAL.structural$Feature, levels = c(  "LINE", "L1", "L2", "SINE", "Alu", "MIR", "LTR"))
TOTAL.structural[ , Type:=str_to_title(Type)]
Fig3.C <-ggplot(TOTAL.structural) +
#ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
binned_asym <- fread("Unibind_outputs_bins_genes.txt")
colnames(binned_asym) <- c("bin", "feature", "same", "oposite", "ratio", "p.value")
binned_asym[ , pos:=str_remove(bin, "gencode.v33.basic.annotation.bed.genes_protein_coding.formatted_bin_")]
binned_asym[ , pos:=as.numeric(str_remove(pos, ".txt")) ]
#binned_asym[ grepl(bin, "downstream", fixed = TRUE),  ]
binned_asym[ like(bin,"upstream"), pos:=-1 ]
binned_asym[ like(bin,"downstream"), pos:=12 ]
binned_asym[, feature:=str_remove(feature, "_hg38.txt")]
#binned_asym$pos <- mapvalues( as.factor(binned_asym$pos), from=levels(as.factor(binned_asym$pos)),  to=  c("Upstream 1kB", "0-10%", "10-20%","20-30%","30-40%","40-50%","50-60%","60-70%","70-80%","80-90%","90-100%","Downstream 1kB") )
binned_asym$feature <- factor(binned_asym$feature, levels = c('LTR', 'MIR', 'Alu', 'SINE', 'L2', 'L1', 'LINE'))
binned_asym.stats <-  binned_asym[pos %in% 1:10, .(  cor = cor(ratio, pos, method="pearson") ,
adj.p.val = cor.test(ratio, pos, method="pearson")$p.value * length(levels(binned_asym$feature)) ) , by="feature"]
binned_asym.stats[ , signif:="" ]
binned_asym.stats[adj.p.val<0.05, signif:="*" ]
binned_asym.stats[adj.p.val<0.01, signif:="**" ]
binned_asym.stats[adj.p.val<0.001, signif:="***" ]
binned_asym.stats[ , cor:=round(cor, 2)]
Fig3.B <- ggplot(binned_asym) +
geom_tile(aes(pos, feature, fill=ratio )) +
scale_fill_gradient2( midpoint = 0.5, limits=c(0.2,0.8)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Relative gene position") +
ylab("") +
scale_x_continuous(breaks=c(-1, 1:10, 12),
labels=c("Upstream 1kB", "0-10%", "10-20%","20-30%","30-40%","40-50%","50-60%","60-70%","70-80%","80-90%","90-100%","Downstream 1kB")) +
labs(fill="Strand asymmetry") +
geom_text(data =  binned_asym.stats,   aes( 5.5 , feature , label =  paste0(cor, " ", signif )), size=3)
plot_grid(Fig3.A, Fig3.B, Fig3.C, ncol = 1, labels = c("A", "B", "C"), rel_heights = c(2,  1.5, 2))
set.seed(123)
Unibind <- fread("./Unibind_outputs2.txt")
colnames(Unibind) <- c("Cell", "TF", "same", "opposite", "ratio", "adj.p.val")
Unibind.filter <- Unibind[ Cell %in% Unibind[ , .N, by="Cell"][N >= 10, Cell ], ]
Unibind.filter$Cell <-  factor(Unibind.filter$Cell, levels = Unibind[ , .N, by="Cell"][N >= 10,  ][order(-N)][, Cell] )
ggplot(  ) +
geom_jitter(data=Unibind.filter, aes( Cell, ratio) ) +
geom_jitter(data= Unibind.filter[  adj.p.val < 0.05, ], aes( Cell, ratio ), colour="red") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
upstream_downstream_asymmetries <- fread("./Fig4/upstream_downstream_asymmetries")
colnames(upstream_downstream_asymmetries) <- c("TF", "ratio.up",  "ratio.down", "adj.p.val.up",  "adj.p.val.down")
upstream_downstream_asymmetries.melted <- rbind(
upstream_downstream_asymmetries[ , .( TF, ratio=ratio.up, adj.p.val=adj.p.val.up, pos="Upstream", type="Motif")],
upstream_downstream_asymmetries[ , .( TF, ratio=ratio.down, adj.p.val=adj.p.val.down, pos="Downstream", type="Motif")]
)
upstream_downstream_asymmetries.melted
unibin.promoter.up <- fread("./Unibind_outputs_upstream.txt")
unibin.promoter.down <- fread("./Unibind_outputs_downstream.txt")
colnames(unibin.promoter.up) <- c("Cell", "TF", "times.nt",  "times.t", "ratio",  "adj.p.val")
colnames(unibin.promoter.down) <- c("Cell", "TF", "times.nt",  "times.t", "ratio",  "adj.p.val")
top_cells <- Unibind[ , .N, by="Cell"][N >= 10,  ][order(-N)][, Cell][1:5]
total.promoter <- rbind( upstream_downstream_asymmetries.melted,
unibin.promoter.up[ Cell %in% top_cells, .(  TF,   ratio,    adj.p.val,        pos="Upstream",  type=Cell ) ],
unibin.promoter.down[ Cell %in% top_cells , .(  TF,   ratio,    adj.p.val,        pos="Downstream",  type=Cell ) ])
total.promoter$type <- factor(total.promoter$type, levels = c( "Motif", top_cells ))
total.promoter[ ratio <=0.5  , strand:="Template"  ]
total.promoter[ ratio >0.5  , strand:="Non-Template"  ]
ggplot(total.promoter) +
geom_boxplot( aes( pos,  abs(ratio -0.5)  ) ) +
ylim(c(0, 0.15)) +
facet_grid( strand  ~ type  ) +
ylab("Absolute strand asymmetry from baseline") +
xlab("") +
theme_bw() +
geom_signif( aes( pos,  abs(ratio -0.5)), test = "wilcox.test", comparisons =  list(c("Upstream", "Downstream")), y_position=0.12,  map_signif_level=TRUE ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top")
upstream_downstream_asymmetries.melted$pos <- factor(upstream_downstream_asymmetries.melted$pos, levels=c("Upstream", "Downstream"))
upstream_downstream_asymmetries.melted[ , rank:=frank(log10(adj.p.val)), by=pos ]
upstream_downstream_asymmetries.melted[ rank %in% 1:10 , ]
fig4.b <- ggplot( ) +
geom_point(data = upstream_downstream_asymmetries.melted[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color="grey") +
geom_point(data = upstream_downstream_asymmetries.melted[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color="red") +
geom_text_repel(data=upstream_downstream_asymmetries.melted[ rank %in% 1:15, ],
aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 5 ) +
xlab("Strand asymmetry") +
ylab("-log10(Adj. p-values)") +
xlim(c(0.2, 0.8)) +
facet_grid( .  ~ pos  ) +
theme_bw()
motifs <-  fread("./scores.txt.old")
colnames(motifs) <- c("TF", "path",  "ratio", "adj.p.val")
motifs[ , y:=-log10(adj.p.val) ]
motifs[y>100, y:=100 ]
fig4.a <- ggplot( ) +
geom_point(data = motifs[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color="grey") +
geom_point(data = motifs[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color="red") +
geom_text_repel(data=motifs[-log10(adj.p.val) > 75, ],
aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 10 ) +
xlab("Strand asymmetry") +
ylab("-log10(Adj. p-values)") +
xlim(c(0.35, 0.65)) +
theme_bw()
motifs
motifs[TF=="FOXA1",]
Unibind.filter[ , y:=-log10(adj.p.val) ]
Unibind.filter[y>100, y:=100 ]
fig4.d <- ggplot( ) +
geom_point(data = Unibind.filter[Cell %in% top_cells, ] , aes(ratio, y), alpha=0.3, color="grey") +
geom_point(data = Unibind.filter[Cell %in% top_cells & adj.p.val < 0.05 & abs(0.5-ratio)>0.05 , ] , aes(ratio, y), color="red") +
facet_grid(. ~ Cell ) +
geom_text_repel(data=Unibind.filter[Cell %in% top_cells & adj.p.val < 0.05 & abs(0.5-ratio)>0.05 , ],
aes(ratio, y, label=TF), size=3, point.padding = NA, nudge_y = 3 ) +
xlab("Strand asymmetry") +
ylab("-log10(Adj. p-values)") +
theme_bw()
Unibind.filter
Unibind[ , signf:=FALSE]
Unibind[ adj.p.val < 0.05  , signf:=TRUE]
Unibind[ signf==TRUE ,  N.signf:=.N  , by="TF"]
Unibind[  ,  N.total:=.N  , by="TF"]
Unibind[ is.na(N.signf) , N.signf:=0 ]
Unibind[ , signf.ratio:= (N.signf/ N.total) ]
top.hits <-  Unibind[ , .N , by=c("TF",  "N.signf", "N.total" , "signf.ratio")  ][order(-signf.ratio, -N.total)][N>=4 & signf.ratio>=0.75,  ]
Unibind.top_TF <- Unibind[ TF %in% top.hits[ , TF],  ]
Unibind.top_TF$TF <- factor(Unibind.top_TF$TF, levels= Unibind.top_TF[ , .(median=median(ratio)) , by="TF"][order(-median)]$TF)
Unibind.top_TF[ , text:=paste0(N.signf, "/", N.total )]
fig4.e <- ggplot( Unibind.top_TF  ) +
geom_boxplot( aes( TF, ratio )) +
ylim( c(0.3, 0.7 )) +
theme_bw() +
geom_hline( yintercept = 0.5, colour="red", linetype="dashed" ) +
geom_text(data =  top.hits,   aes( TF , 0.7 , label =  paste0(N.signf, "/", N.total )), position = position_dodge(0.9)) +
xlab("") +
ylab("Strand asymmetry")
Unibind.upstream <- fread("./Unibind_outputs_upstream.txt")
Unibind.downstream <- fread("./Unibind_outputs_downstream.txt")
colnames(Unibind.upstream) <- c("Cell", "TF", "same", "opposite", "ratio", "adj.p.val")
colnames(Unibind.downstream) <- c("Cell", "TF", "same", "opposite", "ratio", "adj.p.val")
Unibind.upstream[ , signf:=FALSE]
Unibind.upstream[ adj.p.val < 0.05  , signf:=TRUE]
Unibind.upstream[ signf==TRUE ,  N.signf:=.N  , by="TF"]
Unibind.upstream[  ,  N.total:=.N  , by="TF"]
Unibind.upstream[ is.na(N.signf) , N.signf:=0 ]
Unibind.upstream[ , signf.ratio:= (N.signf/ N.total) ]
Unibind.downstream[ , signf:=FALSE]
Unibind.downstream[ adj.p.val < 0.05  , signf:=TRUE]
Unibind.downstream[ signf==TRUE ,  N.signf:=.N  , by="TF"]
Unibind.downstream[  ,  N.total:=.N  , by="TF"]
Unibind.downstream[ is.na(N.signf) , N.signf:=0 ]
Unibind.downstream[ , signf.ratio:= (N.signf/ N.total) ]
top.hits.upstream <-  Unibind.upstream[ , .N , by=c("TF",  "N.signf", "N.total" , "signf.ratio")  ][order(-signf.ratio, -N.total)][N>=4 & signf.ratio>=0.75,  ]
Unibind.top_TF.upstream <- Unibind.upstream[ TF %in% top.hits.upstream[ , TF],  ]
Unibind.top_TF.upstream$TF <- factor(Unibind.top_TF.upstream$TF, levels= Unibind.top_TF.upstream[ , .(median=median(ratio)) , by="TF"][order(-median)]$TF)
Unibind.top_TF.upstream[ , text:=paste0(N.signf, "/", N.total )]
top.hits.downstream <-  Unibind.downstream[ , .N , by=c("TF",  "N.signf", "N.total" , "signf.ratio")  ][order(-signf.ratio, -N.total)][N>=4 & signf.ratio>=0.75,  ]
Unibind.top_TF.downstream <- Unibind.downstream[ TF %in% top.hits.downstream[ , TF],  ]
Unibind.top_TF.downstream$TF <- factor(Unibind.top_TF.downstream$TF, levels= Unibind.top_TF.downstream[ , .(median=median(ratio)) , by="TF"][order(-median)]$TF)
Unibind.top_TF.downstream[ , text:=paste0(N.signf, "/", N.total )]
fig4.f <- ggplot( Unibind.top_TF.upstream  ) +
geom_boxplot( aes( TF, ratio )) +
ylim( c(0.3, 0.7 )) +
theme_bw() +
geom_hline( yintercept = 0.5, colour="red", linetype="dashed" ) +
geom_text(data =  top.hits.upstream,   aes( TF , 0.7 , label =  paste0(N.signf, "/", N.total )), position = position_dodge(0.9)) +
xlab("") +
ylab("")
fig4.g <- ggplot( Unibind.top_TF.downstream  ) +
geom_boxplot( aes( TF, ratio )) +
ylim( c(0.3, 0.7 )) +
theme_bw() +
geom_hline( yintercept = 0.5, colour="red", linetype="dashed" ) +
geom_text(data =  top.hits.downstream,   aes( TF , 0.7 , label =  paste0(N.signf, "/", N.total )), position = position_dodge(0.9)) +
xlab("") +
ylab("")
fig4.h <- ggdraw() + draw_image("./Fig4.H.png")
fig4.h
Unibind_outputs_bins_genes_CTCF <- fread("./Fig4/Unibind_outputs_bins_genes_CTCF.txt")
colnames(Unibind_outputs_bins_genes_CTCF) <- c("bin", "feature", "same", "oposite", "ratio", "adj.p.value")
Unibind_outputs_bins_genes_CTCF[ , pos:=str_remove(bin, "gencode.v33.basic.annotation.bed.genes_protein_coding.formatted_bin_")]
Unibind_outputs_bins_genes_CTCF[ , pos:=as.numeric(str_remove(pos, ".txt")) ]
Unibind_outputs_bins_genes_CTCF[ like(bin,"upstream"), pos:=-1 ]
Unibind_outputs_bins_genes_CTCF[ like(bin,"downstream"), pos:=12 ]
Unibind_outputs_bins_genes_CTCF.stats <- Unibind_outputs_bins_genes_CTCF[ , .(median=median(ratio)), by="pos"   ]
fig4.g1 <- ggplot() +
geom_jitter(data=Unibind_outputs_bins_genes_CTCF, aes( as.factor(pos) , ratio), alpha=0.3) +
geom_point(data=Unibind_outputs_bins_genes_CTCF.stats, aes(as.factor(pos), median ) , color="skyblue", size=15, shape="-" ) +
geom_hline( yintercept = 0.5, colour="red", linetype="dashed" ) +
ylim(c(0.35, 0.65)) +
ylab("Strand asymmetry") +
scale_x_discrete(labels=c("Upstream 1kB", "0-10%", "10-20%","20-30%","30-40%","40-50%","50-60%","60-70%","70-80%","80-90%","90-100%","Downstream 1kB")) +
xlab("Relative gene position") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#fig4.h, fig4.g1
#View(Unibind_outputs_bins_genes_CTCF)
binned_asym[ grepl(bin, "downstream", fixed = TRUE),  ]
binned_asym[ like(bin,"upstream"), pos:=-1 ]
binned_asym[ like(bin,"downstream"), pos:=12 ]
binned_asym[, feature:=str_remove(feature, "_hg38.txt")]
fig4.ab <- plot_grid(fig4.a, fig4.b, nrow=1, labels = c("A", "B"), rel_widths = c(1, 2) )
fig4.efg <- plot_grid(fig4.e, fig4.f, fig4.g, nrow=1, rel_widths = c( 11, 3, 2 ), labels = c("D", "E", "F") )
fig4.bottom <- plot_grid(fig4.g1, fig4.h, nrow=1, rel_widths = c(2,1), labels = c("G", "H"))
plot_grid(fig4.ab, fig4.d, fig4.efg, fig4.bottom, ncol=1, labels = c("", "C", "", ""))
Asymmetries_structural_output.txt
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
Asymmetries_structural_output.txt
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
Asymmetries_structural_output.txt
L1_L2_background_asymmetries <- fread("./L1_L2_background_asymmetries")
L1_L2_structural_asymmetries <- fread("./L1_L2_structural_asymmetries")
Alu_MIR_background_asymmetries <- fread("./Alu_MIR_background_asymmetries")
Alu_MIR_structural_asymmetries <- fread("./Alu_MIR_structural_asymmetries")
Asymmetries_output.txt <- fread("./Asymmetries_output.txt")
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
colnames(L1_L2_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(L1_L2_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_structural_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
TOTAL.bacground <- rbind(L1_L2_background_asymmetries, Alu_MIR_background_asymmetries, Asymmetries_output.txt)
TOTAL.bacground$Feature <- factor(TOTAL.bacground$Feature, levels = c(  "LINE", "L1", "L2", "SINE", "Alu", "MIR", "LTR"))
TOTAL.bacground[ , Type:=str_to_title(Type)]
library(data.table)
library(ggplot2)
library(stringr)
library(cowplot)
library(ggsignif)
library(scales)
library(plyr)
library(ggrepel)
L1_L2_background_asymmetries <- fread("./L1_L2_background_asymmetries")
L1_L2_structural_asymmetries <- fread("./L1_L2_structural_asymmetries")
Alu_MIR_background_asymmetries <- fread("./Alu_MIR_background_asymmetries")
Alu_MIR_structural_asymmetries <- fread("./Alu_MIR_structural_asymmetries")
Asymmetries_output.txt <- fread("./Asymmetries_output.txt")
Asymmetries_structural_output.txt <-  fread("./Asymmetries_structural_output.txt")
colnames(L1_L2_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(L1_L2_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_background_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Alu_MIR_structural_asymmetries) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
colnames(Asymmetries_structural_output.txt) <- c("Type", "Feature", "Strand_asymetry", "adj.p.val")
TOTAL.bacground <- rbind(L1_L2_background_asymmetries, Alu_MIR_background_asymmetries, Asymmetries_output.txt)
TOTAL.bacground$Feature <- factor(TOTAL.bacground$Feature, levels = c(  "LINE", "L1", "L2", "SINE", "Alu", "MIR", "LTR"))
TOTAL.bacground[ , Type:=str_to_title(Type)]
Fig3.A <- ggplot(TOTAL.bacground) +
ylim(c(0.3, 0.7)) +
geom_segment( aes(x=Feature, xend=Feature, y=0.5, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Strand asymmetry") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
TOTAL.structural <- rbind(L1_L2_structural_asymmetries, Alu_MIR_structural_asymmetries, Asymmetries_structural_output.txt)
TOTAL.structural$Feature <- factor(TOTAL.structural$Feature, levels = c(  "LINE", "L1", "L2", "SINE", "Alu", "MIR", "LTR"))
TOTAL.structural[ , Type:=str_to_title(Type)]
Fig3.C <-ggplot(TOTAL.structural) +
#ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
binned_asym <- fread("Unibind_outputs_bins_genes.txt")
colnames(binned_asym) <- c("bin", "feature", "same", "oposite", "ratio", "p.value")
binned_asym[ , pos:=str_remove(bin, "gencode.v33.basic.annotation.bed.genes_protein_coding.formatted_bin_")]
binned_asym[ , pos:=as.numeric(str_remove(pos, ".txt")) ]
#binned_asym[ grepl(bin, "downstream", fixed = TRUE),  ]
binned_asym[ like(bin,"upstream"), pos:=-1 ]
binned_asym[ like(bin,"downstream"), pos:=12 ]
binned_asym[, feature:=str_remove(feature, "_hg38.txt")]
#binned_asym$pos <- mapvalues( as.factor(binned_asym$pos), from=levels(as.factor(binned_asym$pos)),  to=  c("Upstream 1kB", "0-10%", "10-20%","20-30%","30-40%","40-50%","50-60%","60-70%","70-80%","80-90%","90-100%","Downstream 1kB") )
binned_asym$feature <- factor(binned_asym$feature, levels = c('LTR', 'MIR', 'Alu', 'SINE', 'L2', 'L1', 'LINE'))
binned_asym.stats <-  binned_asym[pos %in% 1:10, .(  cor = cor(ratio, pos, method="pearson") ,
adj.p.val = cor.test(ratio, pos, method="pearson")$p.value * length(levels(binned_asym$feature)) ) , by="feature"]
binned_asym.stats[ , signif:="" ]
binned_asym.stats[adj.p.val<0.05, signif:="*" ]
binned_asym.stats[adj.p.val<0.01, signif:="**" ]
binned_asym.stats[adj.p.val<0.001, signif:="***" ]
binned_asym.stats[ , cor:=round(cor, 2)]
Fig3.B <- ggplot(binned_asym) +
geom_tile(aes(pos, feature, fill=ratio )) +
scale_fill_gradient2( midpoint = 0.5, limits=c(0.2,0.8)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
xlab("Relative gene position") +
ylab("") +
scale_x_continuous(breaks=c(-1, 1:10, 12),
labels=c("Upstream 1kB", "0-10%", "10-20%","20-30%","30-40%","40-50%","50-60%","60-70%","70-80%","80-90%","90-100%","Downstream 1kB")) +
labs(fill="Strand asymmetry") +
geom_text(data =  binned_asym.stats,   aes( 5.5 , feature , label =  paste0(cor, " ", signif )), size=3)
plot_grid(Fig3.A, Fig3.B, Fig3.C, ncol = 1, labels = c("A", "B", "C"), rel_heights = c(2,  1.5, 2))
Fig3.C <-ggplot(TOTAL.structural) +
ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
Fig3.C
TOTAL.structural
Fig3.C <-ggplot(TOTAL.structural) +
ylim(c(-0.1, 0.1)) +
geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = "dashed") +
geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +
ylab("Log2(OR)") +
xlab("Repetitive element class / sub-class") +
facet_grid( . ~ Type ) +
theme_bw() +
theme(legend.position="top") +
labs(size="-log10(Adj. p-values)", col="Strand Asymmetry type")
plot_grid(Fig3.A, Fig3.B, Fig3.C, ncol = 1, labels = c("A", "B", "C"), rel_heights = c(2,  1.5, 2))
fig4.a
motifs <-  fread("./scores.txt")
colnames(motifs) <- c("TF", "path",  "ratio", "adj.p.val")
motifs[ , y:=-log10(adj.p.val) ]
motifs[y>100, y:=100 ]
fig4.a <- ggplot( ) +
geom_point(data = motifs[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color="grey") +
geom_point(data = motifs[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color="red") +
#geom_text_repel(data=motifs[-log10(adj.p.val) > 75, ],
aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 10 ) +
motifs <-  fread("./scores.txt")
colnames(motifs) <- c("TF", "path",  "ratio", "adj.p.val")
motifs <-  fread("./scores.txt")
colnames(motifs) <- c("TF", "path",  "ratio", "adj.p.val")
motifs[ , y:=-log10(adj.p.val) ]
motifs[y>100, y:=100 ]
fig4.a <- ggplot( ) +
geom_point(data = motifs[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color="grey") +
geom_point(data = motifs[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color="red") +
#geom_text_repel(data=motifs[-log10(adj.p.val) > 75, ],
#                aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 10 ) +
xlab("Strand asymmetry") +
ylab("-log10(Adj. p-values)") +
xlim(c(0.35, 0.65)) +
theme_bw()
motifs
fig4.a
motifs
fig4.a <- ggplot( ) +
geom_point(data = motifs[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color="grey") +
geom_point(data = motifs[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color="red") +
#geom_text_repel(data=motifs[-log10(adj.p.val) > 75, ],
#                aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 10 ) +
xlab("Strand asymmetry") +
ylab("-log10(Adj. p-values)") +
xlim(c(0.35, 0.65)) +
theme_bw()
fig4.a
motifs
