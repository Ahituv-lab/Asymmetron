{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput: html_notebook\n---\n\n\n\n\n```{r}\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(stringr)\nlibrary(cowplot)\nlibrary(ggsignif)\nlibrary(scales)\nlibrary(plyr)\nlibrary(ggrepel)\n\n\nset.seed(123)\n```\n\n\n```{r}\n\nL1_L2_background_asymmetries <- fread(\"./L1_L2_background_asymmetries\")\nL1_L2_structural_asymmetries <- fread(\"./L1_L2_structural_asymmetries\")\n\nAlu_MIR_background_asymmetries <- fread(\"./Alu_MIR_background_asymmetries\")\nAlu_MIR_structural_asymmetries <- fread(\"./Alu_MIR_structural_asymmetries\")\n\n\nAsymmetries_output.txt <- fread(\"./Asymmetries_output.txt\")\nAsymmetries_structural_output.txt <-  fread(\"./Asymmetries_structural_output.txt\")\n\ncolnames(L1_L2_background_asymmetries) <- c(\"Type\", \"Feature\", \"Strand_asymetry\", \"adj.p.val\")\ncolnames(L1_L2_structural_asymmetries) <- c(\"Type\", \"Feature\", \"Strand_asymetry\", \"adj.p.val\")\ncolnames(Alu_MIR_background_asymmetries) <- c(\"Type\", \"Feature\", \"Strand_asymetry\", \"adj.p.val\")\ncolnames(Alu_MIR_structural_asymmetries) <- c(\"Type\", \"Feature\", \"Strand_asymetry\", \"adj.p.val\")\n\ncolnames(Asymmetries_output.txt) <- c(\"Type\", \"Feature\", \"Strand_asymetry\", \"adj.p.val\")\ncolnames(Asymmetries_structural_output.txt) <- c(\"Type\", \"Feature\", \"Strand_asymetry\", \"adj.p.val\")\n\n```\n\n\n```{r}\nTOTAL.bacground <- rbind(L1_L2_background_asymmetries, Alu_MIR_background_asymmetries, Asymmetries_output.txt)\nTOTAL.bacground$Feature <- factor(TOTAL.bacground$Feature, levels = c(  \"LINE\", \"L1\", \"L2\", \"SINE\", \"Alu\", \"MIR\", \"LTR\"))\nTOTAL.bacground[ , Type:=str_to_title(Type)]\n```\n\n\n\n```{r, fig.height= 5, fig.width=9}\n\nFig3.A <- ggplot(TOTAL.bacground) +\n  ylim(c(0.3, 0.7)) +\n  geom_segment( aes(x=Feature, xend=Feature, y=0.5, yend=Strand_asymetry, colour=Type), linetype = \"dashed\") +\n  geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +\n  ylab(\"Strand asymmetry\") +\n  xlab(\"Repetitive element class / sub-class\") +\n  facet_grid( . ~ Type ) +\n  theme_bw() +\n  theme(legend.position=\"top\") +\n  labs(size=\"-log10(Adj. p-values)\", col=\"Strand Asymmetry type\")\n\n\n```\n\n\n\n\n```{r}\n\nTOTAL.structural <- rbind(L1_L2_structural_asymmetries, Alu_MIR_structural_asymmetries, Asymmetries_structural_output.txt)\nTOTAL.structural$Feature <- factor(TOTAL.structural$Feature, levels = c(  \"LINE\", \"L1\", \"L2\", \"SINE\", \"Alu\", \"MIR\", \"LTR\"))\nTOTAL.structural[ , Type:=str_to_title(Type)]\n\n```\n\n\n\n```{r, fig.height= 5, fig.width=9}\n\n\nFig3.C <-ggplot(TOTAL.structural) +\n  ylim(c(-0.13, 0.13)) +\n  geom_segment( aes(x=Feature, xend=Feature, y=0, yend=Strand_asymetry, colour=Type), linetype = \"dashed\") +\n  geom_point( aes(Feature, Strand_asymetry, size=-log10(adj.p.val), colour=Type) ) +\n  ylab(\"Log2(OR)\") +\n  xlab(\"Repetitive element class / sub-class\") +\n  facet_grid( . ~ Type ) +\n  theme_bw() +\n  theme(legend.position=\"top\") +\n  labs(size=\"-log10(Adj. p-values)\", col=\"Strand Asymmetry type\")\n\n\n\n```\n\n\n\n\n```{r}\n\n\nbinned_asym <- fread(\"Unibind_outputs_bins_genes.txt\")\n\ncolnames(binned_asym) <- c(\"bin\", \"feature\", \"same\", \"oposite\", \"ratio\", \"p.value\")\n\nbinned_asym[ , pos:=str_remove(bin, \"gencode.v33.basic.annotation.bed.genes_protein_coding.formatted_bin_\")]\n\nbinned_asym[ , pos:=as.numeric(str_remove(pos, \".txt\")) ]\n\nbinned_asym[ like(bin,\"upstream\"), pos:=-1 ]\n\nbinned_asym[ like(bin,\"downstream\"), pos:=12 ]\n\nbinned_asym[, feature:=str_remove(feature, \"_hg38.txt\")]\n\n\nbinned_asym$feature <- factor(binned_asym$feature, levels = c('LTR', 'MIR', 'Alu', 'SINE', 'L2', 'L1', 'LINE'))\n\n\n\nbinned_asym.stats <-  binned_asym[pos %in% 1:10, .(  cor = cor(ratio, pos, method=\"pearson\") ,\n                              adj.p.val = cor.test(ratio, pos, method=\"pearson\")$p.value * length(levels(binned_asym$feature)) ) , by=\"feature\"]\n\nbinned_asym.stats[ , signif:=\"\" ]\nbinned_asym.stats[adj.p.val<0.05, signif:=\"*\" ]\nbinned_asym.stats[adj.p.val<0.01, signif:=\"**\" ]\nbinned_asym.stats[adj.p.val<0.001, signif:=\"***\" ]\n\n\nbinned_asym.stats[ , cor:=round(cor, 2)]\n\n\nFig3.B <- ggplot(binned_asym) +\n  geom_tile(aes(pos, feature, fill=ratio )) +\n  scale_fill_gradient2( midpoint = 0.5, limits=c(0.2,0.8)) +\n  theme_bw() +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  xlab(\"Relative gene position\") +\n  ylab(\"\") +\n  scale_x_continuous(breaks=c(-1, 1:10, 12),\n                     labels=c(\"Upstream 1kB\", \"0-10%\", \"10-20%\",\"20-30%\",\"30-40%\",\"40-50%\",\"50-60%\",\"60-70%\",\"70-80%\",\"80-90%\",\"90-100%\",\"Downstream 1kB\")) +\n  labs(fill=\"Strand asymmetry\") +\n  geom_text(data =  binned_asym.stats,   aes( 5.5 , feature , label =  paste0(cor, \" \", signif )), size=3) \n\n\n\n```\n\n\n\n\n\n```{r, fig.height= 11, fig.width=9}\nFig3 <- plot_grid(Fig3.A, Fig3.B, Fig3.C, ncol = 1, labels = c(\"A\", \"B\", \"C\"), rel_heights = c(2,  1.5, 2))\nFig3\n```\n\n\n#### TFs ###\n\n\n\n```{r}\nUnibind <- fread(\"./Unibind_outputs2.txt\")\n\ncolnames(Unibind) <- c(\"Cell\", \"TF\", \"same\", \"opposite\", \"ratio\", \"adj.p.val\")\n\nUnibind.filter <- Unibind[ Cell %in% Unibind[ , .N, by=\"Cell\"][N >= 10, Cell ], ]\n\nUnibind.filter$Cell <-  factor(Unibind.filter$Cell, levels = Unibind[ , .N, by=\"Cell\"][N >= 10,  ][order(-N)][, Cell] )\n\n```\n\n\n\n```{r}\nupstream_downstream_asymmetries <- fread(\"./Fig4/upstream_downstream_asymmetries_outs4\")\n\n\ncolnames(upstream_downstream_asymmetries) <- c(\"TF\", \"ratio.up\",  \"ratio.down\", \"adj.p.val.up\",  \"adj.p.val.down\")\n\nupstream_downstream_asymmetries.melted <- rbind(upstream_downstream_asymmetries[ , .( TF, ratio=ratio.up, adj.p.val=adj.p.val.up, pos=\"Upstream\", type=\"Motif\")], \n                                                upstream_downstream_asymmetries[ , .( TF, ratio=ratio.down, adj.p.val=adj.p.val.down, pos=\"Downstream\", type=\"Motif\")])\n\nunibin.promoter.up <- fread(\"./Unibind_outputs_upstream.txt\")\nunibin.promoter.down <- fread(\"./Unibind_outputs_downstream.txt\")\n\ncolnames(unibin.promoter.up) <- c(\"Cell\", \"TF\", \"times.nt\",  \"times.t\", \"ratio\",  \"adj.p.val\")\ncolnames(unibin.promoter.down) <- c(\"Cell\", \"TF\", \"times.nt\",  \"times.t\", \"ratio\",  \"adj.p.val\")\n\ntop_cells <- Unibind[ , .N, by=\"Cell\"][N >= 10,  ][order(-N)][, Cell][1:5]\n```\n\n\n\n```{r, eval=FALSE}\n\n\ntotal.promoter <- rbind( upstream_downstream_asymmetries.melted, \n                         unibin.promoter.up[ Cell %in% top_cells, .(  TF,   ratio,    adj.p.val,        pos=\"Upstream\",  type=Cell ) ],\n                         unibin.promoter.down[ Cell %in% top_cells , .(  TF,   ratio,    adj.p.val,        pos=\"Downstream\",  type=Cell ) ])\n\n\ntotal.promoter$type <- factor(total.promoter$type, levels = c( \"Motif\", top_cells ))\n\ntotal.promoter[ ratio <=0.5  , strand:=\"Template\"  ]\ntotal.promoter[ ratio >0.5  , strand:=\"Non-Template\"  ]\n\nggplot(total.promoter) +\n  geom_boxplot( aes( pos,  abs(ratio -0.5)  ) ) +\n  ylim(c(0, 0.15)) +\n  facet_grid( .  ~ type  ) +\n  ylab(\"Absolute strand asymmetry from baseline\") +\n  xlab(\"\") +\n  theme_bw() +\n  geom_signif( aes( pos,  abs(ratio -0.5)), test = \"wilcox.test\", comparisons =  list(c(\"Upstream\", \"Downstream\")), y_position=0.12,  map_signif_level=TRUE ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position=\"top\")\n  \n\n```\n\n\n\n\n```{r}\nupstream_downstream_asymmetries.melted$pos <- factor(upstream_downstream_asymmetries.melted$pos, levels=c(\"Upstream\", \"Downstream\"))\n\n\nupstream_downstream_asymmetries.melted[ , rank:=frank(log10(adj.p.val)), by=pos ]\n\n\n\n\nfig4.b <- ggplot( ) +\n  geom_point(data = upstream_downstream_asymmetries.melted[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color=\"grey\") +\n  geom_point(data = upstream_downstream_asymmetries.melted[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color=\"red\") +\n  geom_text_repel(data=upstream_downstream_asymmetries.melted[ rank %in% 1:15, ],\n                  aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 5 ) +\n  xlab(\"Strand asymmetry\") +\n  ylab(\"-log10(Adj. p-values)\") +\n  xlim(c(0.2, 0.8)) +\n  facet_grid( .  ~ pos  ) +\n  theme_bw()\n\n\n\n```\n\n\n\n```{r}\n#motifs <-  fread(\"./scores.txt\")\nmotifs <-  fread(\"./scores_outs4.txt\")\n\ncolnames(motifs) <- c(\"TF\", \"path\",  \"ratio\", \"adj.p.val\", \"non_template\", \"template\")\n\n#motifs[ , y:=-log10(adj.p.val) ]\n#motifs[y>100, y:=100 ]\n\n\nfig4.a <- ggplot( ) +\n  geom_point(data = motifs[adj.p.val > 0.05, ] , aes(ratio, -log10(adj.p.val) ), alpha=0.3, color=\"grey\") +\n  geom_point(data = motifs[adj.p.val < 0.05, ] , aes(ratio,  -log10(adj.p.val)), alpha=0.5, color=\"red\") +\n  geom_text_repel(data=motifs[-log10(adj.p.val) > 60, ],\n                  aes(ratio,  -log10(adj.p.val), label=TF), size=3, point.padding = NA, nudge_y = 10 ) +\n  xlab(\"Strand asymmetry\") +\n  ylab(\"-log10(Adj. p-values)\") +\n  #xlim(c(0.35, 0.65)) +\n  theme_bw()\n\n\n\n```\n\n\n\n```{r, fig.width=17, fig.height=4}\n\n\n\nUnibind.filter[ , y:=-log10(adj.p.val) ]\n\nUnibind.filter[y>100, y:=100 ]\n\nfig4.d <- ggplot( ) +\n  geom_point(data = Unibind.filter[Cell %in% top_cells, ] , aes(ratio, y), alpha=0.3, color=\"grey\") +\n  geom_point(data = Unibind.filter[Cell %in% top_cells & adj.p.val < 0.05 & abs(0.5-ratio)>0.05 , ] , aes(ratio, y), color=\"red\") +\n  facet_grid(. ~ Cell ) +\n  geom_text_repel(data=Unibind.filter[Cell %in% top_cells & adj.p.val < 0.05 & abs(0.5-ratio)>0.05 , ],\n                  aes(ratio, y, label=TF), size=3, point.padding = NA, nudge_y = 3 ) +\n  xlab(\"Strand asymmetry\") +\n  ylab(\"-log10(Adj. p-values)\") +\n  theme_bw()\n\n\n\n```\n\n\n\n\n\n```{r}\n\nUnibind[ , signf:=FALSE]\nUnibind[ adj.p.val < 0.05  , signf:=TRUE]\n\n\nUnibind[ signf==TRUE ,  N.signf:=.N  , by=\"TF\"]\nUnibind[  ,  N.total:=.N  , by=\"TF\"]\n\nUnibind[ is.na(N.signf) , N.signf:=0 ]\nUnibind[ , signf.ratio:= (N.signf/ N.total) ]\n\n\n\ntop.hits <-  Unibind[ , .N , by=c(\"TF\",  \"N.signf\", \"N.total\" , \"signf.ratio\")  ][order(-signf.ratio, -N.total)][N>=4 & signf.ratio>=0.75,  ]\n\n```\n\n\n\n```{r}\n\nUnibind.top_TF <- Unibind[ TF %in% top.hits[ , TF],  ]\n\nUnibind.top_TF$TF <- factor(Unibind.top_TF$TF, levels= Unibind.top_TF[ , .(median=median(ratio)) , by=\"TF\"][order(-median)]$TF)\n\nUnibind.top_TF[ , text:=paste0(N.signf, \"/\", N.total )]\n\n\nfig4.e <- ggplot( Unibind.top_TF  ) +\n  geom_boxplot( aes( TF, ratio )) +\n  ylim( c(0.3, 0.7 )) +\n  theme_bw() +\n  geom_hline( yintercept = 0.5, colour=\"red\", linetype=\"dashed\" ) +\n  geom_text(data =  top.hits,   aes( TF , 0.7 , label =  paste0(N.signf, \"/\", N.total )), position = position_dodge(0.9)) +\n  xlab(\"\") +\n  ylab(\"Strand asymmetry\")\n\n\n```\n\n\n\n\n```{r}\nUnibind.upstream <- fread(\"./Unibind_outputs_upstream.txt\")\nUnibind.downstream <- fread(\"./Unibind_outputs_downstream.txt\")\n\ncolnames(Unibind.upstream) <- c(\"Cell\", \"TF\", \"same\", \"opposite\", \"ratio\", \"adj.p.val\")\ncolnames(Unibind.downstream) <- c(\"Cell\", \"TF\", \"same\", \"opposite\", \"ratio\", \"adj.p.val\")\n\n\n\nUnibind.upstream[ , signf:=FALSE]\nUnibind.upstream[ adj.p.val < 0.05  , signf:=TRUE]\nUnibind.upstream[ signf==TRUE ,  N.signf:=.N  , by=\"TF\"]\nUnibind.upstream[  ,  N.total:=.N  , by=\"TF\"]\nUnibind.upstream[ is.na(N.signf) , N.signf:=0 ]\nUnibind.upstream[ , signf.ratio:= (N.signf/ N.total) ]\n\n\nUnibind.downstream[ , signf:=FALSE]\nUnibind.downstream[ adj.p.val < 0.05  , signf:=TRUE]\nUnibind.downstream[ signf==TRUE ,  N.signf:=.N  , by=\"TF\"]\nUnibind.downstream[  ,  N.total:=.N  , by=\"TF\"]\nUnibind.downstream[ is.na(N.signf) , N.signf:=0 ]\nUnibind.downstream[ , signf.ratio:= (N.signf/ N.total) ]\n\n\ntop.hits.upstream <-  Unibind.upstream[ , .N , by=c(\"TF\",  \"N.signf\", \"N.total\" , \"signf.ratio\")  ][order(-signf.ratio, -N.total)][N>=4 & signf.ratio>=0.75,  ]\nUnibind.top_TF.upstream <- Unibind.upstream[ TF %in% top.hits.upstream[ , TF],  ]\nUnibind.top_TF.upstream$TF <- factor(Unibind.top_TF.upstream$TF, levels= Unibind.top_TF.upstream[ , .(median=median(ratio)) , by=\"TF\"][order(-median)]$TF)\nUnibind.top_TF.upstream[ , text:=paste0(N.signf, \"/\", N.total )]\n\ntop.hits.downstream <-  Unibind.downstream[ , .N , by=c(\"TF\",  \"N.signf\", \"N.total\" , \"signf.ratio\")  ][order(-signf.ratio, -N.total)][N>=4 & signf.ratio>=0.75,  ]\nUnibind.top_TF.downstream <- Unibind.downstream[ TF %in% top.hits.downstream[ , TF],  ]\nUnibind.top_TF.downstream$TF <- factor(Unibind.top_TF.downstream$TF, levels= Unibind.top_TF.downstream[ , .(median=median(ratio)) , by=\"TF\"][order(-median)]$TF)\nUnibind.top_TF.downstream[ , text:=paste0(N.signf, \"/\", N.total )]\n\n\nfig4.f <- ggplot( Unibind.top_TF.upstream  ) +\n  geom_boxplot( aes( TF, ratio )) +\n  ylim( c(0.3, 0.7 )) +\n  theme_bw() +\n  geom_hline( yintercept = 0.5, colour=\"red\", linetype=\"dashed\" ) +\n  geom_text(data =  top.hits.upstream,   aes( TF , 0.7 , label =  paste0(N.signf, \"/\", N.total )), position = position_dodge(0.9)) +\n  xlab(\"\") +\n  ylab(\"\")\n\n\n\n\nfig4.g <- ggplot( Unibind.top_TF.downstream  ) +\n  geom_boxplot( aes( TF, ratio )) +\n  ylim( c(0.3, 0.7 )) +\n  theme_bw() +\n  geom_hline( yintercept = 0.5, colour=\"red\", linetype=\"dashed\" ) +\n  geom_text(data =  top.hits.downstream,   aes( TF , 0.7 , label =  paste0(N.signf, \"/\", N.total )), position = position_dodge(0.9)) +\n  xlab(\"\") +\n  ylab(\"\") \n\n\n```\n\n\n```{r}\nfig4.h <- ggdraw() + draw_image(\"./Fig4.H.png\")\n\nfig4.h\n```\n\n\n\n\n```{r}\n Unibind_outputs_bins_genes_CTCF <- fread(\"./Fig4/Unibind_outputs_bins_genes_CTCF.txt\")\n\n\ncolnames(Unibind_outputs_bins_genes_CTCF) <- c(\"bin\", \"feature\", \"same\", \"oposite\", \"ratio\", \"adj.p.value\")\n\nUnibind_outputs_bins_genes_CTCF[ , pos:=str_remove(bin, \"gencode.v33.basic.annotation.bed.genes_protein_coding.formatted_bin_\")]\nUnibind_outputs_bins_genes_CTCF[ , pos:=as.numeric(str_remove(pos, \".txt\")) ]\n\nUnibind_outputs_bins_genes_CTCF[ like(bin,\"upstream\"), pos:=-1 ]\nUnibind_outputs_bins_genes_CTCF[ like(bin,\"downstream\"), pos:=12 ]\n\nUnibind_outputs_bins_genes_CTCF.stats <- Unibind_outputs_bins_genes_CTCF[ , .(median=median(ratio)), by=\"pos\"   ] \n  \n\n\n\n\nfig4.g1 <- ggplot() +\n  geom_jitter(data=Unibind_outputs_bins_genes_CTCF, aes( as.factor(pos) , ratio), alpha=0.3) +\n  geom_point(data=Unibind_outputs_bins_genes_CTCF.stats, aes(as.factor(pos), median ) , color=\"skyblue\", size=15, shape=\"-\" ) +\n  geom_hline( yintercept = 0.5, colour=\"red\", linetype=\"dashed\" ) +\n  ylim(c(0.35, 0.65)) +\n  ylab(\"Strand asymmetry\") +\n  scale_x_discrete(labels=c(\"Upstream 1kB\", \"0-10%\", \"10-20%\",\"20-30%\",\"30-40%\",\"40-50%\",\"50-60%\",\"60-70%\",\"70-80%\",\"80-90%\",\"90-100%\",\"Downstream 1kB\")) +\n  xlab(\"Relative gene position\") +\n  theme_bw() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n  \n\n\n\n#fig4.h, fig4.g1\n\n\n#View(Unibind_outputs_bins_genes_CTCF)\nbinned_asym[ grepl(bin, \"downstream\", fixed = TRUE),  ]\n\nbinned_asym[ like(bin,\"upstream\"), pos:=-1 ]\n\nbinned_asym[ like(bin,\"downstream\"), pos:=12 ]\n\nbinned_asym[, feature:=str_remove(feature, \"_hg38.txt\")]\n\n```\n\n\n```{r, fig.width=15, fig.height=16}\n\n\nfig4.ab <- plot_grid(fig4.a, fig4.b, nrow=1, labels = c(\"A\", \"B\"), rel_widths = c(1, 2) )\n\nfig4.efg <- plot_grid(fig4.e, fig4.f, fig4.g, nrow=1, rel_widths = c( 11, 3, 2 ), labels = c(\"D\", \"E\", \"F\") )\n\nfig4.bottom <- plot_grid(fig4.g1, fig4.h, nrow=1, rel_widths = c(2,1), labels = c(\"G\", \"H\"))\n\nfig4 <- plot_grid(fig4.ab, fig4.d, fig4.efg, fig4.bottom, ncol=1, labels = c(\"\", \"C\", \"\", \"\"))\n\nfig4\n```\n\n\n\n\n\n\n\n",
    "created" : 1589933300388.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "770767044",
    "id" : "D5D824F7",
    "lastKnownWriteTime" : 1591653504,
    "last_content_update" : 1591653504022,
    "path" : "~/Google_Drive/Results/Asymetron/Asymetron.Rmd",
    "project_path" : "Asymetron.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled2"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}