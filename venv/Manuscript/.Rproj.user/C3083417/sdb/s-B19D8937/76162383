{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput: html_notebook\n---\n\n\n\n```{r}\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(gplots)\nlibrary(pheatmap)\nlibrary(plyr)\nset.seed(123)\nlibrary(data.table)\nlibrary(magrittr)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(cowplot)\nlibrary(igraph)\ntheme_set(theme_classic() )\n```\n\n\n\n\n```{r}\n\n\nget_colors <- function(groups, group.col = palette()){\n  groups <- as.factor(groups)\n  ngrps <- length(levels(groups))\n  if(ngrps > length(group.col)) \n    group.col <- rep(group.col, ngrps)\n  color <- group.col[as.numeric(groups)]\n  names(color) <- as.vector(groups)\n  return(color)\n}\n\n\ngg_color_hue <- function(n) {\n  hues = seq(15, 375, length = n + 1)\n  hcl(h = hues, l = 65, c = 100)[1:n]\n}\n```\n\n\n\n\nImporting metadata\n\n\n```{r}\n\nENCODE_metadata <- read.delim(\"~/Google_Drive/Results/ME/mm10/metadata.tsv\",  header=TRUE, sep=\"\\t\")\n\nENCODE_metadata <- data.table(ENCODE_metadata)\n\n\n\nWeyn_el_al_metadata <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/Weyn_el_al.metadata.txt\",  \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\nWeyn_el_al_metadata[, `:=`(File.accession=Run,\n                    Biosample.Age=age,\n                    Experiment.date.released=LoadDate,\n                    Biosample.term.name=tissue,\n                    Paired.end=NA,\n                    Paired.with=\"\",\n                    Audit.WARNING=\"\") ]\n\nmetadata <- rbind( ENCODE_metadata[, c(\"File.accession\", \"Biosample.Age\", \"Experiment.date.released\", \"Biosample.term.name\", \"Paired.end\", \"Paired.with\", \"Audit.WARNING\")],\n                  Weyn_el_al_metadata[, c(\"File.accession\", \"Biosample.Age\", \"Experiment.date.released\", \"Biosample.term.name\", \"Paired.end\", \"Paired.with\", \"Audit.WARNING\")] )\n\n\nmetadata <- metadata[Audit.WARNING!=\"low replicate concordance, missing flowcell_details\",]\n\n\n\n```\n\n\n\n\n\n\n\n```{r}\n\nME_final.rep1 <- fread(\"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/out.high_quality.txt\")\nME_final.rep2 <- fread(\"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep2/out.high_quality.txt\")\n\nME_final <- ME_final.rep1[ ME %in% ME_final.rep2$ME, ]\n\n\nME_cov <- fread(\"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/out_filtered_ME.PSI.txt\")\nME_cov[, `:=`(FILE_NAME=File, ME=ME_coords)]\n\nnumber_of_microexons <- length(ME_final[ , unique(ME)])\n\n\n\nME_cov_filtered <- ME_cov[ME %in% ME_final[, ME]  , ]\n\n\n```\n\n\n```{r}\nlibrary(stringi)\n\n\n\n\n#mat <- stri_split_fixed(ME_cov_filtered$ME_coverages, ',', simplify=T)\n#mat <- `dim<-`(as.numeric(mat), dim(mat))  # convert to numeric and save dims\n#rowsum(mat, na.rm=T)\n\n#sum(mat, na.rm=T)\n\n\n#sapply(strsplit(as.character(ME_cov_filtered$ME_coverages), \",\", fixed=T), function(x) sum(as.numeric(x)))\n```\n\n\n```{r}\n#ME_cov_filtered[, strsplit( ME_coverages, \",\") ]\n\n\n#library(dplyr)\n#library(tidyr)\n#df %>%\n#   separate_rows(y, z, convert = TRUE) %>%\n#   group_by(x) %>% \n#   summarise_all(sum)\n```\n\n\n\nObtainin PSI matrix\n\n```{r}\n\n\n\nTissues <- as.character(metadata$Biosample.term.name)\nnames(Tissues) <- as.character(metadata$File.accession)\n\nAges <- as.character(metadata$Biosample.Age)\nnames(Ages) <- as.character(metadata$File.accession)\n\n\n\nME_cov_filtered  <- unique(ME_cov_filtered[FILE_NAME %in% metadata[ , File.accession],])\n#ME_cov_filtered_ENCODE <- unique(ME_cov_filtered[FILE_NAME %in% metadata[ , File.accession],])\n\n\n\n#colnames(Tissue_PSI_matrix_dcast) <- as.character( paste(sep = \" \", Tissues[colnames(Tissue_PSI_matrix_dcast)], Ages[colnames(Tissue_PSI_matrix_dcast)])) #To replase the file name by the biological sample name\n\n#Tissue_PSI_matrix_dcast <- Tissue_PSI_matrix_dcast[, order(paste(sep = \" \", Tissues[colnames(Tissue_PSI_matrix_dcast)], Ages[colnames(Tissue_PSI_matrix_dcast)]))]\n\n\n```\n\n\n\n\n\nProbabilistic PCA\n\n\n\n\n```{r}\n\nlibrary(pcaMethods)\n\nTissue_PSI_matrix_melt <- ME_cov_filtered[, c(\"ME\", \"FILE_NAME\", \"PSI\") ]\nTissue_PSI_matrix_dcast <- reshape2::dcast(Tissue_PSI_matrix_melt, ME ~ FILE_NAME)\nrow.names(Tissue_PSI_matrix_dcast) <- Tissue_PSI_matrix_dcast$ME\nTissue_PSI_matrix_dcast <- data.matrix(Tissue_PSI_matrix_dcast)[,-1]\n\n\nTissue_PSI_matrix_dcast[Tissue_PSI_matrix_dcast==\"NaN\"] <- NA\n\ndim(Tissue_PSI_matrix_dcast)\n\ndim(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 271*0.9, ])\n\ndim(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 289*0.9, ])\n\nresult <- pca(t(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 289*0.9, ]), method=\"ppca\", nPcs=3, seed=123)\n## Get the estimated complete observations\ncObs <- completeObs(result)\n## Plot the scores\nplotPcs(result, type = \"scores\")\n\n\n\n\nsummary(result)\n\n\n\n\n\n```\n\n\n\n\n```{r}\n\nTissue_PSI_matrix_dcast_ppca <- t(cObs)\n\nTissue_PSI_matrix_dcast_ppca[Tissue_PSI_matrix_dcast_ppca>1] <- 1\nTissue_PSI_matrix_dcast_ppca[Tissue_PSI_matrix_dcast_ppca<0] <- 0\n\n\n##colnames(Tissue_PSI_matrix_dcast_ppca) <- as.character( paste(sep = \" \", Tissues[colnames(Tissue_PSI_matrix_dcast_ppca)], Ages[colnames(Tissue_PSI_matrix_dcast_ppca)])) #To replase the file name by the biological sample name\n\n\n\n#tissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast_ppca,  , fontsize = 4,  cutree_rows = 24, cutree_cols = 16, clustering_method = \"ward.D2\")\n\n\n\n```\n\n\n\n\n```{r}\n\n#Tissue_PSI_matrix_dcast_ppca <- t(cObs)\n\n#Tissue_PSI_matrix_dcast_ppca[Tissue_PSI_matrix_dcast_ppca>1] <- 1\n#Tissue_PSI_matrix_dcast_ppca[Tissue_PSI_matrix_dcast_ppca<0] <- 0\n\n\n##colnames(Tissue_PSI_matrix_dcast_ppca) <- as.character( paste(sep = \" \", Tissues[colnames(Tissue_PSI_matrix_dcast_ppca)], Ages[colnames(Tissue_PSI_matrix_dcast_ppca)])) #To replase the file name by the biological sample name\n\n\n\n#tissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast_ppca,  , fontsize = 4,  cutree_rows = 24, cutree_cols = 17, clustering_method = \"ward.D2\")\n\n\n\n```\n\n\n\n```{r}\n\nhc_cols <- hclust(dist(t(Tissue_PSI_matrix_dcast_ppca)), method = \"ward.D2\")\nhc_rows <- hclust(dist(Tissue_PSI_matrix_dcast_ppca), method = \"ward.D2\")\n\n```\n\n\n\n\n\n```{r}\nTissues_name <- as.character(metadata$Biosample.term.name)\nnames(Tissues_name) <- as.character(metadata$File.accession)\n\nTissues_age <- as.character(metadata$Biosample.Age)\nnames(Tissues_age) <- as.character(metadata$File.accession)\n\nTissue_date <- as.character(metadata$Experiment.date.released)\nnames(Tissue_date) <- as.character(metadata$File.accession)\n\n```\n\n\n\n\n```{r}\n#Tissue_clusters <- cutree(hc_cols, k = 16)\n#Tissue_clusters <- cbind(Tissue_clusters, Tissues_name[names(Tissue_clusters)], Tissues_age[names(Tissue_clusters)], Tissue_date[names(Tissue_clusters)]) \n\n#colnames(Tissue_clusters) <- c(\"cluster\", \"name\", \"age\", \"date\")\n\n#Tissue_clusters <- data.frame(Tissue_clusters)\n\n##Tissue_clusters_sum[which(grepl(\"hindbrain|midbrain|forebrain|neural\\ tube\", Tissue_clusters_sum$name)), ]\n\n#Tissue_clusters$name <- factor(Tissue_clusters$name, level=c( \"skeletal muscle tissue\", \"heart\", \"thymus\", \"spleen\", \"liver\",  \"adrenal gland\", \"intestine\", \"stomach\", \"lung\",  \"kidney\", \"bladder\", \"limb\", \"embryonic facial prominence\", \"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"whole cortex\"))\n\n\n#Tissue_clusters$age <- mapvalues(Tissue_clusters$age, \n#          from = c(\"10.5 day\", \"11.5 day\", \"12.5 day\", \"13.5 day\", \"14.5 day\", \"15.5 day\", \"16.5 day\", \"0 day\", \"8 week\", \"P0a\", \"P0b\", \"P110a\", \"P110b\", \"P15a\", \"P15b\", \"P30a\", \"P30b\", \"P4a\", #\"P4a\", \"P7a\", \"P7b\", \"21Ma\", \"21Mb\", \"E14.5\", \"E16.5\", \"P4b\"),\n#         to = c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21, 59, 21, 21, 131, 131, 36, 36, 41,41, 25, 25, 27,27, 651, 651, 14.5, 16.5, 25 ) )\n\n\n\n\n#Tissue_clusters$age <- factor(Tissue_clusters$age, levels = as.character(sort(as.numeric(levels(Tissue_clusters$age)))))\n\n\n\n\n```\n\n\n\n```{r}\nTissue_clusters <- cutree(hc_cols, k = 16)\nTissue_clusters <- cbind(Tissue_clusters, Tissues_name[names(Tissue_clusters)], Tissues_age[names(Tissue_clusters)], Tissue_date[names(Tissue_clusters)]) \n\ncolnames(Tissue_clusters) <- c(\"cluster\", \"name\", \"age\", \"date\")\n\nTissue_clusters <- data.frame(Tissue_clusters)\n\n#Tissue_clusters_sum[which(grepl(\"hindbrain|midbrain|forebrain|neural\\ tube\", Tissue_clusters_sum$name)), ]\n\nTissue_clusters$name <- factor(Tissue_clusters$name, level=c( \"skeletal muscle tissue\", \"heart\", \"thymus\", \"spleen\", \"liver\",  \"adrenal gland\", \"intestine\", \"stomach\", \"lung\",  \"kidney\", \"bladder\", \"limb\", \"embryonic facial prominence\", \"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"whole cortex\"))\n\n#Tissue_clusters$age <- factor(Tissue_clusters$age, levels=c(\"10.5 day\", \"11.5 day\", \"12.5 day\", \"13.5 day\", \"14.5 day\", \"15.5 day\", \"16.5 day\", \"0 day\", \"8 week\"))\n\nTissue_clusters$File.accession <- row.names(Tissue_clusters)\n\n\nTissue_clusters <- data.table(Tissue_clusters)\n\n\nTissue_clusters$age <- mapvalues(Tissue_clusters$age, \n          from = c(\"10.5 day\", \"11.5 day\", \"12.5 day\", \"13.5 day\", \"14.5 day\", \"15.5 day\", \"16.5 day\", \"0 day\", \"8 week\", \"P0a\", \"P0b\", \"P110a\", \"P110b\", \"P15a\", \"P15b\", \"P30a\", \"P30b\", \"P4a\", \"P4a\", \"P7a\", \"P7b\", \"21Ma\", \"21Mb\", \"E14.5\", \"E16.5\", \"P4b\"),\n          to = c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21, 59, 21, 21, 131, 131, 36, 36, 41,41, 25, 25, 27,27, 651, 651, 14.5, 16.5, 25 ) )\n\n\n\n```\n\n\n\n\n\n\n\n\n```{r}\n\nME_clusters <- cutree(hc_rows, k = 24)\n\nPCA_loadings <- data.frame(loadings(result))\nPCA_loadings$ME <- row.names(PCA_loadings)\n\n\nPCA_loadings <- data.table(PCA_loadings)\nPCA_loadings[, `:=`(PC1=-PC1, PC2=-PC2)]\n\n\nPCA_loadings$ME_cluster <- ME_clusters[PCA_loadings$ME]\n\n\nPCA_loadings_stats <- PCA_loadings[ , .(PC1_mean=mean(PC1)) , by=\"ME_cluster\"]\nME_cluster_loading_order <- PCA_loadings_stats[order(PC1_mean)]$ME_cluster\n\nPCA_loadings$ME_cluster <- factor(PCA_loadings$ME_cluster , levels=ME_cluster_loading_order)\n\n\nggplot(PCA_loadings) +\n  geom_boxplot(aes(as.factor(ME_cluster) , PC1))\n\n\n```\n\n\n\n```{r}\nggplot(PCA_loadings) +\n  geom_boxplot(aes(as.factor(ME_cluster) , PC2))\n```\n\n\n\n\n```{r}\nggplot(PCA_loadings) +\n  geom_boxplot(aes(as.factor(ME_cluster) , PC3))\n```\n\n\n\n\n\n```{r}\n\nPCA_loadings_stats <- PCA_loadings[ , .(PC1_mean=mean(PC1)) , by=\"ME_cluster\"]\n\nPCA_loadings_stats_PC2 <- PCA_loadings[ , .(PC2_mean=mean(PC2)) , by=\"ME_cluster\"]\n\n\n\nME_cluster_loading_order <- PCA_loadings_stats[order(PC1_mean)]$ME_cluster\n```\n\nNeuronal Microexons\n\n```{r}\nPCA_loadings_stats[abs(PC1_mean)>0.03, ][order(PC1_mean)]\n```\n\n\n\n```{r}\nPCA_loadings_stats_PC2[abs(PC2_mean)>0.03, ][order(-PC2_mean)]\n```\n\n\n\n\n```{r}\nTissue_PSI_matrix_melt_ppca <- melt(Tissue_PSI_matrix_dcast_ppca)\n\ncolnames(Tissue_PSI_matrix_melt_ppca) <- c(\"ME\", \"FILE_NAME\", \"PSI\")\n\nME_clusters_table <- data.frame(ME_clusters)\n\nME_clusters_table$ME <- row.names(ME_clusters_table)\nME_clusters_table <- data.table(ME_clusters_table)\n\n\nME_clusters_PSI <-  data.table(merge(Tissue_PSI_matrix_melt_ppca, ME_clusters_table , by=c(\"ME\")))\n\n\n\nfwrite( ME_clusters_PSI, \"../../Paper/Jacob/ME_clusters_PSI.tvs\", quote = FALSE, col.names = TRUE, sep=\"\\t\")\n\nfwrite( ME_cluster_names, \"../../Paper/Jacob/ME_cluster_names.tvs\", quote = FALSE, col.names = TRUE, sep=\"\\t\")\n\n```\n\n\n```{r}\nME_clusters_PSI$ME_clusters <- mapvalues(ME_clusters_PSI$ME_clusters, \n          from =1:18,\n          to = c(\"I1\", \"E1\", \"E3\", \"I2\", \"N1\", \"M1\", \"N2\", \"NM3\", \"NM2\", \"N5\", \"NM1\", \"N3\", \"N4\", \"NN2\", \"E2\", \"I4\", \"I3\", \"NN1\"))\n```\n\n\n\n```{r}\nTissue_PSI_matrix_melt_ppca <- data.table(Tissue_PSI_matrix_melt_ppca)\n\nTissue_PSI_matrix_melt_ppca\n\n```\n\n\n\n\n```{r}\n\nPCA_loadings_stats <- PCA_loadings[ , .(PC1_mean=mean(PC1), PC2_mean=mean(PC2) ) , by=\"ME_cluster\"]\n\n#PCA_loadings_stats[, PC1_mean:=-PC1_mean]\n\nPCA_loadings_stats[order(-PC1_mean)]\nPCA_loadings_stats[order(PC2_mean)]\n\n#PCA_loadings_stats_PC2[, PC2_mean:=-PC2_mean]\n```\n```{r}\nPCA_loadings_stats[order(PC2_mean)]\n\n```\n\n\n```{r}\n\n\n\nloading_threshold <- 0.010\nloading_threshold_PC2 <- 0.010\n\n\nNeuronal <- PCA_loadings_stats[ round(PC1_mean, 3) >  loading_threshold, ][order(-PC1_mean)]$ME_cluster\nMuscular <- PCA_loadings_stats_PC2[round(PC2_mean, 3) < -loading_threshold_PC2, ][order(PC2_mean)]$ME_cluster\n\nNonNeuronal<- PCA_loadings_stats[ round(PC1_mean, 3) <= -loading_threshold, ][order(PC1_mean)]$ME_cluster\n\n#WeakNeuronal <- PCA_loadings_stats[  round(PC1_mean, 3) < loading_threshold & round(PC1_mean, 3) >=  0.01, ][order(PC1_mean)]$ME_cluster\n\nN = 1 \nNM = 1\nNN = 1\nM = 1\nWN = 1\n\nME_cluster_names <- data.table()\n\n\nfor (ME_cluster in Neuronal){\n  \n  if (ME_cluster %in% Muscular){\n    \n    ME_cluster.name = paste0(\"NM\", NM)\n    ME_cluster.type = \"Neuro-Muscular\"\n    \n    ME_cluster_names = rbind(ME_cluster_names, cbind(ME_cluster, ME_cluster.name, ME_cluster.type  ))\n    \n    NM = NM + 1\n    \n  }\n\n  \n  else {\n    \n    ME_cluster.name = paste0(\"N\", N)\n    ME_cluster.type = \"Neuronal\"\n    \n    ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n    \n    N = N + 1\n    \n  }\n  \n}\n\n\nfor (ME_cluster in NonNeuronal) {\n  \n\n  ME_cluster.name = paste0(\"NN\", NN)\n  ME_cluster.type = \"Non-Neuronal\"\n  \n  ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n  \n  NN = NN + 1\n  \n  \n}\n\n\n#for (ME_cluster in WeakNeuronal) {\n  \n\n#  ME_cluster.name = paste0(\"WN\", WN)\n#  ME_cluster.type = \"Weak-Neuronal\"\n  \n#  ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n  \n#  WN = WN + 1\n  \n  \n#}\n\n\n\nfor (ME_cluster in Muscular){\n  \n  \n  if ( (ME_cluster %in% ME_cluster_names$ME_cluster)==F) {\n  \n  \n  ME_cluster.name = paste0(\"M\", M)\n  ME_cluster.type = \"Muscular\"\n  \n  ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n  \n  M = M + 1\n  \n  }\n  \n  \n  }\n\n\nME_cluster_names\n\n\nME_clusters_mean_PSIs <-  ME_clusters_PSI[, .(mean_PSI=mean(PSI), sd_PSI=sd(PSI)), by=\"ME_clusters\" ]\n\nME_clusters_flat <- ME_clusters_mean_PSIs[ ! ME_clusters %in% ME_cluster_names$ME_cluster,  ]\n\n\nE = 1\nI = 1\nO = 1 \n\n\n\nfor (ME_cluster in ME_clusters_flat[ mean_PSI <= 1/3,  ][order(mean_PSI)]$ME_clusters) {\n  \n  \n  ME_cluster.name = paste0(\"E\", E)\n  ME_cluster.type = \"Excluded\"\n  \n  ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n  \n  E = E + 1\n  \n  \n} \n\n\n\nfor (ME_cluster in ME_clusters_flat[ mean_PSI>=2/3,  ][order(-mean_PSI)]$ME_clusters) {\n  \n  \n  ME_cluster.name = paste0(\"I\", I)\n  ME_cluster.type = \"Included\"\n  \n  ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n  \n  I = I + 1\n  \n  \n}\n\n\n\n\nfor (ME_cluster in ME_clusters_flat[ mean_PSI > 1/3  &  mean_PSI < 2/3  ,  ][order(mean_PSI)]$ME_clusters) {\n  \n  \n  ME_cluster.name = paste0(\"O\", O)\n  ME_cluster.type = \"Other\"\n  \n  ME_cluster_names = rbind(ME_cluster_names,  cbind(ME_cluster, ME_cluster.name, ME_cluster.type ))\n  \n  O = O + 1\n  \n  \n} \nME_cluster_names\n```\n\n\n\n```{r}\n\nME_cluster_names$ME_cluster <- as.numeric(ME_cluster_names$ME_cluster)\n\nME_cluster_names <- merge( x=ME_cluster_names, y=ME_clusters_mean_PSIs, by.x=\"ME_cluster\", by.y=\"ME_clusters\")\n\nPCA_loadings_stats$ME_cluster <- as.numeric(as.character(PCA_loadings_stats$ME_cluster))\n\nPCA_loadings_stats_PC2$ME_cluster <- as.numeric(as.character(PCA_loadings_stats_PC2$ME_cluster))\n\n\nME_cluster_names <- merge(ME_cluster_names, PCA_loadings_stats, by=\"ME_cluster\")\n#ME_cluster_names <- merge(ME_cluster_names, PCA_loadings_stats_PC2, by=\"ME_cluster\")\n\nME_cluster_names$ME_cluster.type <- factor(ME_cluster_names$ME_cluster.type, levels = c(\"Excluded\", \"Included\", \"Neuronal\",  \"Non-Neuronal\", \"Muscular\",  \"Neuro-Muscular\", \"Other\"))\n\n\n\n```\n\n\n\n\n```{r}\nFig5.X.2 <- ggplot(ME_cluster_names) +\n  geom_text(aes(x=PC1_mean, y=-PC2_mean, label = ME_cluster.name, colour = ME_cluster.type ), ) +\n  xlab(\"Mean PC1 loading\") +\n  ylab(\"Mean PC2 loading\") +\n    theme(legend.position=\"top\")\n\n\nFig5.X.2\n\n```\n\n\n```{r}\nFig5.X.3 <- ggplot(ME_cluster_names) +\n  geom_text(aes(x=mean_PSI, y=sd_PSI, label = ME_cluster.name, colour = ME_cluster.type ), ) +\n  xlab(\"Mean PSI\") +\n  ylab(\"PSI standar deviation\") +\n    theme(legend.position=\"top\") \n  \n\n\nFig5.X.3\n```\n\n\n\n\n\n\n```{r}\n\n\nME_clusters.table <- cbind(ME_clusters, names(ME_clusters))\ncolnames(ME_clusters.table) <- c(\"ME_clusters\", \"ME\")\n\nME_clusters.table <- data.table(ME_clusters.table)\nME_clusters.table$ME_clusters <- as.numeric(ME_clusters.table$ME_clusters)\n\n\nME_cluster_info <- merge(ME_clusters.table, ME_final[, c(\"ME\", \"len_micro_exon_seq_found\", \"U2_scores\")], by=\"ME\")\nME_cluster_info <- data.table(ME_cluster_info)\n\n\nME_cluster_info_by <- ME_cluster_info[ , .(asym = sum(len_micro_exon_seq_found %% 3),\n                    mean_U2_score = mean(U2_scores),\n                    total=.N\n                    ), by=\"ME_clusters\"  ]\n\nME_cluster_info_by[, symetrical_fraction:=(total-asym)/total]\n\n\nME_cluster_names <- merge(ME_cluster_names, ME_cluster_info_by, by.x=\"ME_cluster\", by.y=\"ME_clusters\")\n\n\n\n\n#ME_cluster_info <- merge(ME_cluster_info_by[, .(ME_clusters=unique(ME_clusters)), by=ME], ME_final[, c(\"ME\", \"len_micro_exon_seq_found\", \"U2_scores\")], by=\"ME\")\n\n\n \n\n\n\n\n\n\nFig5.X.4 <- ggplot(ME_cluster_names) +\n  geom_text(aes(x=symetrical_fraction, y=mean_U2_score, label = ME_cluster.name, colour = ME_cluster.type ), ) +\n  xlab(\"In-frame microexon fraction\") +\n  ylab(\"Mean splicing strength\") +\n    theme(legend.position=\"top\")\n\n\nFig5.X.4\n  \n```\n\n\n```{r}\nME_cluster_names[ ME_cluster.type==\"Excluded\", ]\nME_cluster_names[ ME_cluster.type==\"Included\", ]\nME_cluster_names[ ME_cluster.type==\"Neuronal\", ]\nME_cluster_names[ ME_cluster.type==\"Neuro-Muscular\", ]\nME_cluster_names[ ME_cluster.type==\"Neuronal\", ]\nME_cluster_names[ ME_cluster.type==\"Included\", ]\nME_cluster_names[ ME_cluster.type==\"Excluded\", ]\nME_cluster_names[ ME_cluster.type==\"Included\", ]\nME_cluster_names[ ME_cluster.type==\"Other\", ]\n\nlevels(factor(ME_cluster_names$ME_cluster.type))\n```\n\n```{r}\nME_cluster_names.levels <- c()\n\nfor (i in levels(factor(ME_cluster_names$ME_cluster.type))){\n  \n  \n  \n  \n  ME_cluster_names.levels<- c(ME_cluster_names.levels, ME_cluster_names[ME_cluster.type==i, ME_cluster.name])\n  \n  \n}\n```\n\n\n```{r}\n\nME_cluster_names$ME_cluster.name <- factor(ME_cluster_names$ME_cluster.name, \n       levels = ME_cluster_names.levels)\n\nFig5.X.1 <- ggplot(ME_cluster_names) +\n  geom_bar(aes(ME_cluster.name, total,  fill = ME_cluster.type ), stat = \"identity\") +\n  theme(legend.position=\"top\") + \n  xlab(\"Number of microexons\") +\n  ylab(\"Microexon cluster\") +\n  theme(axis.text.x = element_text(angle = 45)) +\n    scale_fill_discrete(name=\"Microexon cluster class\") \n\nFig5.X.1\n\n\nFig5.X.1.legend <- get_legend(Fig5.X.1 + \n                              theme(legend.direction = \"horizontal\",legend.justification=\"center\" ,legend.box.just = \"bottom\") +\n                              guides(fill=guide_legend(nrow=1,byrow=TRUE)))\n```\n\n\n\n\n\n```{r, fig.height=5, fig.width=20}\n\nFig5.X.plots <- plot_grid(Fig5.X.1 + theme(legend.position=\"none\"), \n                    Fig5.X.2 + theme(legend.position=\"none\"), \n                    Fig5.X.3 + theme(legend.position=\"none\"), \n                    Fig5.X.4 + theme(legend.position=\"none\"), \n                    nrow =1,\n                    rel_widths = c(1.7,1,1,1),\n                    labels = \"AUTO\" )\n\n\nFig5.X <- plot_grid(Fig5.X.1.legend, Fig5.X.plots, ncol = 1, rel_heights = c(0.2, 1))\n\nFig5.X\n```\n\n\n\n\n\n```{r}\nME_clusters.names <- data.table(ME_clusters)\nME_clusters.names$ME <- names(ME_clusters)\nME_clusters.names <- merge(ME_clusters.names,  ME_cluster_names[, c(\"ME_cluster\", \"ME_cluster.name\")],  by.x=\"ME_clusters\", by.y=\"ME_cluster\")\n\n\n```\n\n\n```{r}\nME_final.ME_clusters <- merge(ME_final, ME_clusters.names, by=\"ME\")\n\nME_cluster.conservation <- ME_final.ME_clusters[ mean_conservations_vertebrates!=\"None\" ,  .(mean_conservation=mean(as.numeric(mean_conservations_vertebrates)))  , by=c(\"ME_clusters\", \"ME_cluster.name\")]\n\n\nME_cluster_names <-  merge(ME_cluster_names, ME_cluster.conservation,  by.x=c(\"ME_cluster\", \"ME_cluster.name\"), by.y=c(\"ME_clusters\", \"ME_cluster.name\"))\n\nround(cor(ME_cluster_names$symetrical_fraction, ME_cluster_names$mean_conservation, method=\"pearson\"), 2)\n\n\nggplot(ME_cluster_names, aes(x=symetrical_fraction, y=mean_conservation)) +\n  geom_smooth(method=lm, linetype=\"dashed\") +\n  geom_text(aes( label = ME_cluster.name, colour = ME_cluster.type ) ) +\n  xlab(\"In-frame microexon fraction\") +\n  ylab(\"Mean Phylop conservation score\") +\n  theme(legend.position=\"top\") +\n labs(color = \"Microexon cluster class\")\n\n\n\n```\n\n\n\n```{r}\n\nsome_ME_clusters <-c(\nME_clusters[ME_clusters==1][1],\nME_clusters[ME_clusters==2][1],\nME_clusters[ME_clusters==3][1],\nME_clusters[ME_clusters==4][1],\nME_clusters[ME_clusters==5][1],\nME_clusters[ME_clusters==6][1],\nME_clusters[ME_clusters==7][1],\nME_clusters[ME_clusters==8][1],\nME_clusters[ME_clusters==9][1],\nME_clusters[ME_clusters==10][1],\nME_clusters[ME_clusters==11][1],\nME_clusters[ME_clusters==12][1],\nME_clusters[ME_clusters==13][1],\nME_clusters[ME_clusters==14][1],\nME_clusters[ME_clusters==15][1],\nME_clusters[ME_clusters==16][1],\nME_clusters[ME_clusters==17][1],\nME_clusters[ME_clusters==18][1],\nME_clusters[ME_clusters==19][1],\nME_clusters[ME_clusters==20][1],\nME_clusters[ME_clusters==21][1],\nME_clusters[ME_clusters==22][1],\nME_clusters[ME_clusters==23][1],\nME_clusters[ME_clusters==24][1]\n\n)\n```\n\n\n\n\n```{r}\n\n\ncol_ann <- data.frame(  Tissue_clusters$cluster, row.names=Tissue_clusters$File.accession)\ncolnames(col_ann) <- \"Tissue clusters\"\n\nrownames(col_ann) <- Tissue_clusters$File.accession\n\n\n\ntissue_cluster_type = data.frame(cluster=c(1, 6, 8, 14, 12, 7, 15, 5, 11, 4, 9, 3, 13, 10, 16, 2), \n                                 `Tissue cluster type`=c(\"Non-neuronal\",\n                                                \"Non-neuronal\",\n                                                \"Non-neuronal\",\n                                                \"Non-neuronal\",\n                                                \"Embryonic neuronal\",\n                                                \"Adrenal gland\",\n                                                \"Skeletal muscle\",\n                                                \"Heart\",\n                                                \"Embryonic neuronal\",\n                                                \"Embryonic neuronal\",\n                                                \"Embryonic neuronal\",\n                                                \"Postnatal neuronal\",\n                                                \"Embryonic neuronal\",\n                                                \"Postnatal neuronal\",\n                                                \"Postnatal neuronal\",\n                                                \"Postnatal neuronal\"))\n\ncol_ann$File <- rownames(col_ann)\ncol_ann <- merge(col_ann, tissue_cluster_type, by.x=\"Tissue clusters\",by.y=\"cluster\")\nrownames(col_ann) <- col_ann$File\n\ncolnames(col_ann) <- c(\"Tissue clusters\", \"File\", \"Tissue cluster type\")\n\n\n\nann_colors = list(\n    cluster = c(black=\"black\"),\n    `Tissue.cluster.type` =  c(`Adrenal gland` = \"#B79F00\",\n                      `Skeletal muscle` = \"#00BFC4\",\n                      `Heart` = \"#F564E3\",\n                      `Non-neuronal` = \"#A58AFF\",\n                      `Embryonic neuronal` = \"#00BA38\",\n                      `Postnatal neuronal` = \"#F8766D\"\n                      ),\n    GeneClass = c(Path1 = \"#7570B3\", Path2 = \"#E7298A\", Path3 = \"#66A61E\")\n)\n\ncol_ann$`Tissue cluster type` <- factor(col_ann$`Tissue cluster type` , levels = c(\"Adrenal gland\", \"Skeletal muscle\", \"Heart\", \"Non-neuronal\", \"Intermediate\", \"Embryonic neuronal\", \"Postnatal neuronal\"))\n\nfake_plot <- ggplot(col_ann, aes(as.numeric(`Tissue clusters`), `Tissue clusters`, fill=`Tissue cluster type` )) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values=c(\"#B79F00\", \"#00BFC4\", \"#F564E3\", \"#A58AFF\", \"#00BA38\", \"#F8766D\" ), name= \"Tissue cluster type\") +\n   theme(legend.position=\"top\", legend.justification=\"center\") +\n  guides(fill=guide_legend(nrow=1,byrow=TRUE)) \n\n\nfake_plot.legend <- get_legend(fake_plot)\n\n\n\n```\n\n\n\n```{r, fig.width=20, fig.height=15}\n\nlibrary(rlang)\n\n\n\n#rownames(col_ann) <- rownames(Tissue_clusters)\n\nTissue_PSI_matrix_dcast_ppca <- t(cObs)\n\nTissue_PSI_matrix_dcast_ppca[Tissue_PSI_matrix_dcast_ppca>1] <- 1\nTissue_PSI_matrix_dcast_ppca[Tissue_PSI_matrix_dcast_ppca<0] <- 0\n\n\nTissue_PSI_matrix_dcast_ppca_heatmap <- duplicate(Tissue_PSI_matrix_dcast_ppca)\n\n\nsome_ME_clusters_space <- paste(\"      \", some_ME_clusters, sep = \"\") \nnames(some_ME_clusters_space) <- names(some_ME_clusters)\n\nrow.names(Tissue_PSI_matrix_dcast_ppca_heatmap) <- some_ME_clusters_space[row.names(Tissue_PSI_matrix_dcast_ppca_heatmap)]\n\n\n\n#tissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast_ppca_heatmap,  , fontsize = 10 ,  cutree_rows = 24, cutree_cols = 16, clustering_method = \"ward.D2\" , show_colnames=FALSE, annotation_col= col_ann, annotation_names_col=FALSE, treeheight_col=200, treeheight_row=100)\n\n```\n\n\n\n\n```{r, fig.width=10, fig.height=7}\n\n\n\n\n\ncol_ann_1c <- data.frame(cluster=rep(\"black\" ,nrow(col_ann))) \nrownames(col_ann) <- rownames(col_ann)\n\n\ncol_ann <-merge(col_ann, Tissue_clusters, by.x=\"File\", by.y=\"File.accession\")\n\ncol_ann <- data.table(col_ann)\n\ncol_ann[!name %in% c(\"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"whole cortex\"), `Tissue cluster type`:=\"Non-neuronal\"]\ncol_ann[name==\"heart\", `Tissue cluster type`:=\"Heart\"]\ncol_ann[name==\"skeletal muscle tissue\", `Tissue cluster type`:=\"Skeletal muscle\"]\ncol_ann[name==\"adrenal gland\", `Tissue cluster type`:=\"Adrenal gland\"]\ncol_ann[(name %in% c(\"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"whole cortex\")) & age %in% c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5) ,  `Tissue cluster type`:=\"Embryonic neuronal\"]\ncol_ann[(name %in% c(\"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"whole cortex\")) & !age %in% c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5) ,  `Tissue cluster type`:=\"Postnatal neuronal\"]\n\n\ncol_ann <- data.frame(col_ann)\nrownames(col_ann) <- col_ann$File\n\n\n\n\ntissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast_ppca_heatmap, cutree_rows = 24, cutree_cols = 16, clustering_method = \"ward.D2\" , show_colnames=FALSE, show_rownames=FALSE, annotation_legend=FALSE, annotation_col= col_ann_1c, annotation_names_col=FALSE, annotation_colors=ann_colors)\n\ntissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast_ppca_heatmap, cutree_rows = 24, cutree_cols = 16, clustering_method = \"ward.D2\" , show_colnames=FALSE, show_rownames=FALSE, annotation_legend=F, annotation_col= col_ann[\"Tissue.cluster.type\"], annotation_names_col=F, annotation_colors=ann_colors)\n\n#877.241\n#571.49\n\n```\n\n\n\n\n```{r, fig.width=20, fig.height=2}\nplot_grid(fake_plot.legend)\n```\n\n\n\n```{r}\n\n\n\nPCA <- data.frame(scores(result))\n\n\n\n\n\nPCA$File.accession <- row.names(PCA)\nPCA <- data.table(PCA)\nPCA <- PCA[, `:=`(PC1=-PC1) ]\n\n\nPCA <- merge(Tissue_clusters, PCA, by=\"File.accession\")\n\nPCA$age <- as.numeric(as.character(PCA$age))\n\n\n\n```\n\n\n\n\n```{r}\nPCA_stats <- PCA[ , .(mean_PC1=mean(PC1)) , by=c(\"name\", \"age\")]\n\n\nSup_PCA_age.B <- ggplot() +\n  geom_jitter(data = PCA[name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\"), ],  aes(age, PC1, colour=name), width=0.1, height = 0 ) +\n  geom_line(data = PCA_stats[name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\"), ], aes(age, mean_PC1, group=name, colour=name)) +\n  labs(colour=\"Neural tissue\")\n\n\n\n```\n\n```{r}\nPCA_stats<- PCA[ , .(mean_PC1=mean(PC1)) , by=c(\"name\", \"age\")]\n\nFig4.C <- ggplot() +\n  geom_line(data = PCA_stats[name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\", \"whole cortex\"), ], aes(log(age), mean_PC1, group=name, colour=name)) +\n  geom_point(data = PCA_stats[name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\", \"whole cortex\"), ], aes(log(age), mean_PC1, group=name, colour=name)) +\n  xlab(\"log(DPC)\") +\n  ylab(\"Mean PC1\") +\n  xlim(c(log(10), log(50))) +\n  theme(legend.position=\"top\") +\n  scale_color_discrete(name=\"Neuronal tissue\", labels=c(\"Forebrain\", \"Hindbrain\", \"Midbrain\", \"Neural tube\", \"Whole cortex\"))\n  \n\nFig4.C\n```\n\n\n\n```{r}\n\nPCA_stats_PC2<- PCA[ name==\"heart\" , .(mean_PC2=mean(PC2)) , by=c(\"name\", \"age\")]\n\n\n```\n\n\n\n\n\n```{r}\nPC1_cluster <- PCA[ , .(PC1=mean(PC1))  , by=cluster]\n\ntissue_cluster_PCA <- factor(PC1_cluster[order(PC1)]$cluster, levels = PC1_cluster[order(PC1)]$cluster)\n\n\nmy_col <- get_colors(tissue_cluster_PCA, group.col=colorRampPalette(colors = c(\"black\",  \"purple\", \"blue\", \"seagreen\", \"gold\", \"red\"))(14))\n\n\n```\n\n\n```{r, fig.height=6, fig.width=10}\n\nPCA$cluster <- factor(PCA$cluster, levels = PC1_cluster[order(PC1)]$cluster)\n\n\nSup_PCA.A <- ggplot(PCA) +\n  geom_text(aes(PC1, PC2, label=cluster, colour=cluster) ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\")\n\nSup_PCA.B <-  ggplot(PCA) +\n  geom_text(aes(PC1, PC3, label=cluster, colour=cluster) ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\")\n\nSup_PCA.C <-  ggplot(PCA) +\n  geom_text(aes(PC2, PC3, label=cluster, colour=cluster) ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\")\n```\n\n\n\n\n```{r}\n\nlibrary(rlang)\n\nPCA_plot <- duplicate(PCA)\n\n\nPCA_plot[name==\"heart\", group:=\"Heart\"]\nPCA_plot[name==\"skeletal muscle tissue\", group:=\"SKM\"]\nPCA_plot[name==\"adrenal gland\", group:=\"Adrenal Gland\"]\nPCA_plot[name==\"whole cortex\", group:=\"Cortex\"]\nPCA_plot[name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\") , group:=\"Neural\"]\n\nPCA_plot$age <- as.numeric(as.character(PCA_plot$age ))\n\n\nPCA_plot[!name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\", \"whole cortex\", \"heart\",\"skeletal muscle tissue\", \"adrenal gland\"), `:=`(group=\"Other\", age=NA )]\n\nggplot(PCA_plot[name!=\"whole cortex\",]) +\n  geom_point(aes(PC1, PC2, colour=age, shape=group ) ) +\n  geom_point(aes(PC1, PC2, colour=age, shape=group ) ) +\n  scale_color_gradient(low=\"blue\",  high=\"red\")\n\n\n\n```\n\n```{r}\n\nlibrary(stringr)\n\nSup_PCA_age.A <- ggplot() +\n  geom_point(data=PCA_plot[group==\"Other\"], aes(PC1, PC2, colour=age ), alpha=0.5) +\n  geom_text(data=PCA_plot[group!=\"Other\" & name!=\"whole cortex\"], aes(PC1, PC2, colour=age, label=str_sub(group, 1,1) ), size=3.5, alpha=0.5 ) +\n  scale_color_gradient(low=\"blue\",  high=\"red\") +\n  labs(colour=\"Embryonic stage (DPC)\")\n```\n\n\n\n\n```{r}\nggplot() +\n  geom_point(data=PCA_plot[group==\"Other\"], aes(PC1, PC2, colour=log(age) ), alpha=0.8) +\n  geom_text(data=PCA_plot[group!=\"Other\"], aes(PC1, PC2, colour=log(age), label=str_sub(group, 1,1) ), size=3.5, alpha=0.8 ) +\n  scale_color_gradient2(low=\"blue\", mid=\"gold\",  high=\"red\", midpoint = 3.7)\n```\n\n\n\n```{r, fig.width=15, fig.height=5}\nplot_grid(Sup_PCA_age.A, Sup_PCA_age.B, labels = \"AUTO\")\n```\n\n\n\n```{r}\n\n\nPCA_batch <- merge(PCA, PCA[, .N, by=c(\"date\")][, .(date, batch=frank(date) )], by=\"date\")\n\nmy_col_date <- get_colors(tissue_cluster_PCA, group.col=colorRampPalette(colors = c(\"black\",  \"purple\", \"blue\", \"seagreen\", \"gold\", \"red\"))(10))\n\n\n\n\n\nSup_PCA.D <-  ggplot(PCA_plot) +\n  geom_text(aes(PC1, PC2, label=str_sub(group, 1,1) , colour=factor(cluster) ) ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\")\n\n\nSup_PCA.E <-  ggplot(PCA_plot) +\n  geom_text(aes(PC1, PC3, label=str_sub(group, 1,1) , colour=factor(cluster) ) ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\")\n\nSup_PCA.F <-  ggplot(PCA_plot) +\n  geom_text(aes(PC2, PC3, label=str_sub(group, 1,1) , colour=factor(cluster) ) ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\")\n\n\n\n\nSup_PCA.G <-  ggplot(PCA_batch) +\n  geom_text(aes(PC1, PC2, label=cluster, colour=factor(batch) ) ) +\n  scale_color_manual(values=my_col_date) + \n  theme(legend.position = \"none\")\n\n\nSup_PCA.H <-  ggplot(PCA_batch) +\n  geom_text(aes(PC1, PC3, label=cluster, colour=factor(batch) ) ) +\n  scale_color_manual(values=my_col_date) + \n  theme(legend.position = \"none\")\n\n\nSup_PCA.I <-  ggplot(PCA_batch) +\n  geom_text(aes(PC2, PC3, label=cluster, colour=factor(batch) ) ) +\n  scale_color_manual(values=my_col_date) + \n  theme(legend.position = \"none\")\n\n\n```\n\n\n\n```{r, fig.height=9, fig.width=15}\nplot_grid(Sup_PCA.A, Sup_PCA.B, Sup_PCA.C, Sup_PCA.D, Sup_PCA.E, Sup_PCA.F, Sup_PCA.G, Sup_PCA.H, Sup_PCA.I, labels=\"AUTO\" )\n```\n\n\n\n\n\n\n\n```{r}\n#Tissue_clusters <- cutree(hc_cols, k = 18)\n#Tissue_clusters <- cbind(Tissue_clusters, Tissues_name[names(Tissue_clusters)], Tissues_age[names(Tissue_clusters)], Tissue_date[names(Tissue_clusters)]) \n\n#colnames(Tissue_clusters) <- c(\"cluster\", \"name\", \"age\", \"date\")\n\n#Tissue_clusters <- data.frame(Tissue_clusters)\n\n#Tissue_clusters_sum[which(grepl(\"hindbrain|midbrain|forebrain|neural\\ tube\", Tissue_clusters_sum$name)), ]\n\n#Tissue_clusters$name <- factor(Tissue_clusters$name, level=c( \"skeletal muscle tissue\", \"heart\", \"thymus\", \"spleen\", \"liver\",  \"adrenal gland\", \"intestine\", \"stomach\", \"lung\",  \"kidney\", \"bladder\", \"limb\", \"embryonic facial prominence\", \"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"whole cortex\"))\n\n\n#Tissue_clusters$age <- factor(Tissue_clusters$age, levels = as.character(sort(as.numeric(levels(Tissue_clusters$age)))))\n\n\n\n\n```\n\n\n\n\n```{r,  fig.height=4, fig.width=20}\n\n\n#Tissue_clusters_sum <- Tissue_clusters %>% group_by(cluster, name, age ) %>% summarise(count = n())\n\nTissue_clusters_DT <- data.table(Tissue_clusters)\nTissue_clusters_sum <- Tissue_clusters_DT[, .(count=.N) , by=c(\"cluster\", \"name\", \"age\" )]\n\nTissue_clusters_sum$age <- factor(Tissue_clusters_sum$age, levels= sort(as.numeric(as.character(levels(Tissue_clusters_sum$age)))) )\n\n\n## NA ###\n\nTissue_clusters_sum$cluster <- factor(Tissue_clusters_sum$cluster , levels =PCA[, mean(PC1), by=\"cluster\" ][order(V1)]$cluster)\n\n\nTissue_clusters_sum <- merge(Tissue_clusters_sum, PCA[, .(mPC1=mean(PC1), mPC2=mean(PC2), mPC3=mean(PC3) ), by=\"cluster\" ][order(mPC1)], by=\"cluster\")\nTissue_clusters_sum[, `:=`(mean_PC1=round(mPC1, 2),mean_PC2=round(mPC2, 2), mean_PC3=round(mPC3, 2))  ]\n\nSup.Tissue_clusters.b.pre <- ggplot( Tissue_clusters_sum, aes(age, name) ) +\n  geom_tile(aes(fill = count)) +\n  scale_fill_gradient(low=\"grey\", high=\"red\")+\n  facet_grid(. ~ cluster + mean_PC1 + mean_PC2 + mean_PC3, labeller = label_parsed ) +\n  theme_bw()+\n  labs(fill = \"Sample count\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n\n\nSup.Tissue_clusters.c <- plot_grid(fake_plot.legend, Sup.Tissue_clusters.b.pre, ncol=1, rel_heights = c(0.1, 1) )\nSup.Tissue_clusters.c\n```\n\n\n\n```{r, fig.height=4, fig.width=20}\n\nlibrary(ggrepel)\n\nPCA_plot[, `:=`(mPC1=mean(PC1), mPC2=mean(PC2)), by=\"cluster\" ]\n\n\n\n\nSup.Tissue_clusters.a <- ggplot(PCA_plot) +\n  geom_point(aes(PC1, PC2 , colour=factor(cluster) ),  alpha=0.3 ) +\n  stat_ellipse(aes(PC1, PC2 , colour=factor(cluster) )) +\n  geom_text_repel(data=PCA_plot[, .(mPC1=mean(PC1), mPC2=mean(PC2)), by=\"cluster\" ],\n                  aes(mPC1, mPC2, label=cluster), size=7, point.padding = NA, fontface = \"bold\" ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\") \n\nSup.Tissue_clusters.b <- ggplot(PCA_plot) +\n  geom_point(aes(PC1, PC3 , colour=factor(cluster) ),  alpha=0.3 ) +\n  stat_ellipse(aes(PC1, PC3 , colour=factor(cluster) )) +\n  geom_text_repel(data=PCA_plot[, .(mPC1=mean(PC1), mPC2=mean(PC3)), by=\"cluster\" ],\n                  aes(mPC1, mPC2, label=cluster), size=7, point.padding = NA, fontface = \"bold\" ) +\n  scale_color_manual(values=my_col) + \n  theme(legend.position = \"none\") \n  \n\nSup.Tissue_clusters.ab <- plot_grid(Sup.Tissue_clusters.a, Sup.Tissue_clusters.b, labels = c(\"E\", \"F\"))\nSup.Tissue_clusters.ab\n```\n\n\n```{r,  fig.height=7, fig.width=19}\nFig4.EFG <- plot_grid( Sup.Tissue_clusters.ab, Sup.Tissue_clusters.c, ncol=1, labels=c(\"\", \"G\"), rel_heights = c(0.8, 1) )\nFig4.EFG\n```\n\n\n\n\n\n\n\n```{r}\nFig.4A <- ggplot(PCA_plot) +\n  geom_point(aes(PC1, PC2, colour=log(age), shape=group ), size=3 , alpha=0.7) +\n  scale_color_gradient2(low=\"blue\", mid=\"yellow\",  high=\"red\", midpoint = 3.7, name=\"ln(Age)\") +\n  scale_shape(name=\"Tissue\") +\n  theme(legend.position=\"top\") \n```\n\n\n\n\n\n\n```{r, fig.height=15, fig.width=20}\n\nlibrary(ggplotify)\n\nFig.4A <- ggplot(PCA_plot) +\n  geom_point(aes(PC1, PC2, colour=log(age), shape=group ), size=3 , alpha=0.7) +\n  scale_color_gradient2(low=\"blue\", mid=\"yellow\",  high=\"red\", midpoint = 3.7, name=\"ln(Age)\") +\n  scale_shape(name=\"Tissue\") +\n  theme(legend.position=\"top\") \n\n\n#ggplot() +\n#  geom_point(data=PCA_plot[group==\"Other\"], aes(PC1, PC2, colour=age ), alpha=0.5) +\n#  geom_text(data=PCA_plot[group!=\"Other\"], aes(PC1, PC2, colour=age, label=str_sub(group, 1,1) ), size=3.5, alpha=0.5 ) +\n#  scale_color_gradient(low=\"blue\",  high=\"red\")\n\nFig.4B <- ggplot(PCA_plot) +\n  geom_point(aes(PC1, PC3, colour=log(age), shape=group ), size=3 , alpha=0.7) +\n  scale_color_gradient2(low=\"blue\", mid=\"yellow\",  high=\"red\", midpoint = 3.7, name=\"ln(Age)\") +\n  scale_shape(name=\"Tissue\") +\n  theme(legend.position=\"top\") \n\n\nFig.4AB.legend <- get_legend(Fig.4A + theme(legend.justification=\"center\") )\n\n\nFig.4AB.pre <- plot_grid(Fig.4A + theme(legend.position=\"none\"), Fig.4B + theme(legend.position=\"none\"), nrow=1, labels = \"AUTO\")\nFig.4AB <- plot_grid(Fig.4AB.legend, Fig.4AB.pre, rel_heights = c(0.2, 1), ncol=1 )\n\n\n\n\nFig4.C.legend <- get_legend( Fig4.C + theme(legend.justification=\"center\"))\nFig4.C.comp <- plot_grid( Fig4.C.legend , Fig4.C + theme(legend.position=\"none\"), rel_heights = c(0.2, 1), ncol=1 , labels = c(\"\", \"C\") )\n\nFig4.toprow <-plot_grid(Fig.4AB, Fig4.C.comp, rel_widths = c(1.7, 1))\n\n#Fig4.toprow <- plot_grid(Fig.4A, Fig.4B, Fig4.C, labels = \"AUTO\",  nrow = 1)\nFig4 <- plot_grid(Fig4.toprow, fake_plot.legend, as.grob(tissue_heatmap), ncol=1, rel_heights = c(1, 0.2, 2.2) , labels = c(\"\", \"\", \"D\"))\nFig4\n\n#1900 x 1300\n```\n\n\n\n```{r, fig.height=20, fig.width=15}\nplot_grid(Fig4, Fig4.EFG, ncol=1, rel_heights = c(2, 1))\n```\n\n\nHere we sorted microexons by PC1 loadings, but we fliped PC1 we cocider the values as -1 PCA loading on our paper\n```{r}\n\n```\n\n\n\nLoading therhold is abs(0.035)\n\n\n```{r, fig.height=9, fig.width=7}\n\nME_Tissues_clusters_PSI <- merge(ME_clusters_PSI, Tissue_clusters, by.x=\"FILE_NAME\", by.y = \"File.accession\")\nME_Tissues_clusters_PSI$cluster <- factor(ME_Tissues_clusters_PSI$cluster, levels = levels(Tissue_clusters_sum$cluster))\nME_Tissues_clusters_PSI <- merge( ME_Tissues_clusters_PSI,  ME_cluster_names[ , c(\"ME_cluster\", \"ME_cluster.name\")], by.x=\"ME_clusters\", by.y=\"ME_cluster\")\n\nME_Tissues_clusters_PSI$ME_cluster.name <- factor(ME_Tissues_clusters_PSI$ME_cluster.name, levels = sort(as.character(unique(ME_Tissues_clusters_PSI$ME_cluster.name))))\n\nME_Tissues_clusters_PSI_sub <- ME_Tissues_clusters_PSI[ME_cluster.name %in%  ME_cluster_names[ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Muscular\",  \"Non-Neuronal\"), ME_cluster.name], ]\nME_Tissues_clusters_PSI_non_neuronal <- ME_Tissues_clusters_PSI_sub[cluster %in% c(1, 8, 6, 7, 15, 5) , ]\n\nME_Tissues_clusters_PSI_non_neuronal$cluster <- mapvalues(ME_Tissues_clusters_PSI_non_neuronal$cluster,\n          from = c(1, 8, 6, 7, 15, 5),\n          to = c( \"C1\", \"C8\", \"C6\", \"C7\", \"C15\", \"C5\") )\n\n\nME_Tissues_clusters_PSI_non_neuronal$cluster <- factor(ME_Tissues_clusters_PSI_non_neuronal$cluster, levels=c( \"C1\", \"C8\", \"C6\", \"C7\", \"C15\", \"C5\"))\n\nME_Tissues_clusters_PSI_non_neuronal_by_ME <- ME_Tissues_clusters_PSI_non_neuronal[ , .(PSI_mean=mean(PSI)), by=c(\"ME\", \"cluster\", \"ME_cluster.name\") ]\nME_Tissues_clusters_PSI_non_neuronal_by_ME_cluster <- ME_Tissues_clusters_PSI_non_neuronal[ , .(PSI_mean=mean(PSI)), by=c( \"cluster\", \"ME_cluster.name\") ]\n\n\n\n  \nggplot( ) +\n        geom_line(data= ME_Tissues_clusters_PSI_non_neuronal_by_ME, aes(factor(cluster), PSI_mean, group=ME), colour=\"grey\") +\n        facet_grid( ME_cluster.name ~ .)\n  \n```\n\n\n```{r, fig.height=9, fig.width=7}\n\nME_Tissues_clusters_PSI_neuronal <- ME_Tissues_clusters_PSI[name %in% c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\", \"whole cortex\"), ]\n\nME_Tissues_clusters_PSI_neuronal$age.name <- mapvalues(ME_Tissues_clusters_PSI_neuronal$age,\n          from = c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21, 25, 27, 36, 41, 131, 651),\n          to = c( \"E10.5\", \"E11.5\", \"E12.5\", \"E13.5\", \"E14.5\", \"E15.5\", \"E16.5\", \"P0\", \"P4\", \"P7\", \"P15\", \"P30\", \"P110\", \"21Mb\") )\n\n\nME_Tissues_clusters_PSI_neuronal <- ME_Tissues_clusters_PSI_neuronal[ME_cluster.name %in%  ME_cluster_names[ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Muscular\", \"Non-Neuronal\"), ME_cluster.name], ]\nME_Tissues_clusters_PSI_neuronal$age.name <- factor(ME_Tissues_clusters_PSI_neuronal$age.name, levels= c( \"E10.5\", \"E11.5\", \"E12.5\", \"E13.5\", \"E14.5\", \"E15.5\", \"E16.5\", \"P0\", \"P4\", \"P7\", \"P15\", \"P30\", \"P110\", \"21Mb\") )\n\nME_Tissues_clusters_PSI_neuronal_by_ME <- ME_Tissues_clusters_PSI_neuronal[ , .(PSI_mean=mean(PSI)), by=c(\"ME\", \"age.name\", \"ME_cluster.name\") ]\n\n\nME_Tissues_clusters_PSI_neuronal_by_ME_cluster <- ME_Tissues_clusters_PSI_neuronal[ , .(PSI_mean=mean(PSI)), by=c(\"age.name\", \"ME_cluster.name\", \"name\") ]\n\n\n  \nggplot( ) +\n        geom_line(data= ME_Tissues_clusters_PSI_neuronal_by_ME, aes(factor(age.name), PSI_mean, group=ME), colour=\"grey\") +\n        geom_line(data = ME_Tissues_clusters_PSI_neuronal_by_ME_cluster, aes(factor(age.name), PSI_mean, group=name, colour=name ), size=1.2 ) +\n        facet_grid( ME_cluster.name ~ .)\n\n\n\n```\n\n```{r, fig.height=15, fig.width=7}\n\nTOTAL.ME_level <- rbind(\nME_Tissues_clusters_PSI_non_neuronal_by_ME[ , .(ME, age.name=cluster, ME_cluster.name, PSI_mean) ], \nME_Tissues_clusters_PSI_neuronal_by_ME )\n\nTOTAL.cluster_level <-  rbind(\nME_Tissues_clusters_PSI_neuronal_by_ME_cluster,\nME_Tissues_clusters_PSI_non_neuronal_by_ME_cluster[ , .(age.name=cluster, ME_cluster.name,  name=\"Non neuronal\", PSI_mean) ] )\n\n\nTOTAL.cluster_level$name <- mapvalues(TOTAL.cluster_level$name,\n          from = c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\", \"whole cortex\"),\n          to = c(\"Forebrain\", \"Midbrain\", \"Hindbrain\", \"Neural tube\", \"Whole cortex\") )\n\n\nTOTAL.cluster_level$name <- factor(TOTAL.cluster_level$name, levels=c(\"Non neuronal\", \"Forebrain\", \"Midbrain\", \"Hindbrain\", \"Neural tube\", \"Whole cortex\") )\n\n\n\nFig5.A <- ggplot( ) +\n        geom_line(data= TOTAL.ME_level, aes(factor(age.name), PSI_mean, group=ME), colour=\"grey\", alpha=0.5) +\n        geom_line(data = TOTAL.cluster_level, aes(factor(age.name), PSI_mean, group=name, colour=name ), size=1.2 ) +\n        facet_grid( ME_cluster.name ~ .) +\n        labs(colour = \"Mean PSI by\") +\n        ylab(\"PSI\") +\n        xlab(\"\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black')) +\n        theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\nFig5.A\n```\n\n\n```{r}\n\n\n\nggplot( ) +\n        geom_line(data= TOTAL.ME_level, aes(factor(age.name), PSI_mean, group=ME), colour=\"grey\", alpha=0.5) +\n        geom_line(data = TOTAL.cluster_level, aes(factor(age.name), PSI_mean, group=name, colour=name ), size=1.2 ) +\n        facet_grid( ME_cluster.name ~ .) +\n        labs(colour = \"Mean PSI by\") +\n        ylab(\"PSI\") +\n        xlab(\"\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black')) +\n        theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n```\n\n\n#### Whippet-delta\n\n\n\n\n\n```{r}\n\n\n\nfile.remove('./whippet_delta.yaml')\n\n\n\nwrite.table( \"whippet_delta:\", file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n\n\nwcontrol <- paste(Tissue_clusters[cluster %in% c(1, 8, 6),  ]$File.accession, collapse=\",\")\n\n\nfor (i in c(\"forebrain\", \"midbrain\", \"hindbrain\", \"neural tube\")){\n  \n  for (a in c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21)) {\n    \n    if (length(Tissue_clusters[name==i & age==a , ]$File.accession)>=4){\n    \n      name = paste0(\"    \", gsub(\" \", \"_\", paste(\"control_vs\", i, paste0(a, \":\"), sep=\" \" )))\n      A =  paste0(\"        A : \", wcontrol )\n      B =  paste0(\"        B : \",  paste(Tissue_clusters[name==i & age==a , ]$File.accession, collapse=\",\"))\n      \n      write.table(name, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n      write.table( A, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n      write.table( B, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    \n    }\n\n  }\n  \n}\n\n\nsignal = c(\"hindbrain\", \"neural tube\")\n\nfor (a in c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21)) {\n    \n  if (length(Tissue_clusters[name %in% signal & age==a , ]$File.accession)>=4){\n    \n    name = paste0(\"    \", gsub(\" \", \"_\", paste(\"control_vs\", paste(signal, collapse=\"-\" ), paste0(a, \":\"), sep=\" \" )))\n    A =  paste0(\"        A : \", wcontrol )\n    B =  paste0(\"        B : \",  paste(Tissue_clusters[name %in% signal & age==a , ]$File.accession, collapse=\",\"))\n      \n    write.table(name, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( A, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( B, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n\n  }\n}\n \n\nsignal = c(\"hindbrain\", \"neural tube\", \"midbrain\")\n\nfor (a in c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21)) {\n    \n  if (length(Tissue_clusters[name %in% signal & age==a , ]$File.accession)>=4){\n    \n    name = paste0(\"    \", gsub(\" \", \"_\", paste(\"control_vs\", paste(signal, collapse=\"-\" ), paste0(a, \":\"), sep=\" \" )))\n    A =  paste0(\"        A : \", wcontrol )\n    B =  paste0(\"        B : \",  paste(Tissue_clusters[name %in% signal & age==a , ]$File.accession, collapse=\",\"))\n      \n    write.table(name, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( A, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( B, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n\n  }\n}\n\n\nsignal = c(\"hindbrain\", \"neural tube\", \"midbrain\",\"forebrain\")\n\nfor (a in c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21)) {\n    \n  if (length(Tissue_clusters[name %in% signal & age==a , ]$File.accession)>=4){\n    \n    name = paste0(\"    \", gsub(\" \", \"_\", paste(\"control_vs\", paste(signal, collapse=\"-\" ), paste0(a, \":\"), sep=\" \" )))\n    A =  paste0(\"        A : \", wcontrol )\n    B =  paste0(\"        B : \",  paste(Tissue_clusters[name %in% signal & age==a , ]$File.accession, collapse=\",\"))\n      \n    write.table(name, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( A, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( B, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n\n  }\n}\n\n\n\nsignal = c(\"adrenal gland\", \"skeletal muscle tissue\", \"heart\")\n\nfor (tissue in signal) {\n    \n  if (length(Tissue_clusters[name==tissue, ]$File.accession)>=4){\n    \n    name = paste0(\"    \", gsub(\" \", \"_\", paste(\"control_vs\", paste0(tissue, \":\"), sep=\" \" )))\n    A =  paste0(\"        A : \", wcontrol )\n    B =  paste0(\"        B : \",  paste(Tissue_clusters[name==tissue, ]$File.accession, collapse=\",\"))\n      \n    write.table(name, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( A, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n    write.table( B, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n\n  }\n}\n\n\nname= \"    hindbrain_neural_tube_21_vs_forebrain_midbrain_21:\"\nA = paste0(\"        A : \",  paste(Tissue_clusters[age==21 & name %in% c(\"hindbrain\", \"neural tube\"), ]$File.accession, collapse=\",\"))\nB = paste0(\"        B : \",  paste(Tissue_clusters[age==21 & name %in% c(\"forebrain\", \"midbrain\"), ]$File.accession, collapse=\",\"))\n\nwrite.table(name, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\nwrite.table( A, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\nwrite.table( B, file=\"./whippet_delta.yaml\", append=TRUE, quote = FALSE, row.names = FALSE, col.names = FALSE)\n\n\n\n```\n\n\n\n#### Whippet ENCODE ####\n\n\n\n```{r}\n\nGet_delta_table <- function( signal, ages, path, extension ){\n\n  Delta_group <- data.table()\n  \n  \n  for (a in ages) {\n      \n    if (length(Tissue_clusters[name %in% signal & age==a , ]$File.accession)>=4){\n      \n      name = gsub(\" \", \"_\", paste(\"control_vs\", paste(signal, collapse=\"-\" ), a, sep=\" \" ))\n  \n      delta <- fread ( paste0(path, name, extension))\n      \n      delta$age <- a\n      \n      Delta_group <- rbind(Delta_group, delta )\n      \n    }\n  \n  }\n  return(Delta_group)    \n}\n\n```\n\n\n```{r}\n\nDelta_HNM_whippet <- Get_delta_table( c(\"hindbrain\", \"neural tube\", \"midbrain\"),\n                                      c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5),\n                                      \"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/\",\n                                      \".diff.microexons\")\n\n\nDelta_HNM_ME <- Get_delta_table( c(\"hindbrain\", \"neural tube\", \"midbrain\"),\n                                      c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5),\n                                      \"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/\",\n                                      \".diff.ME.microexons\")\n\n\nDelta_HNM_merge <- merge(Delta_HNM_whippet, Delta_HNM_ME, by=c(\"exon_ID\", \"age\"))\n\n\nlength(unique(Delta_HNM_merge[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9, exon_ID]))\n\n```\n\n\n\n\n```{r}\n\nDelta_F_whippet <- Get_delta_table( c(\"forebrain\"),\n                                      c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21),\n                                      \"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/\",\n                                      \".diff.microexons\")\n\n\nDelta_F_ME <- Get_delta_table( c(\"forebrain\"),\n                                      c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21),\n                                      \"~/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/\",\n                                      \".diff.ME.microexons\")\n\n\nDelta_F_merge <- merge(Delta_F_whippet, Delta_F_ME, by=c(\"exon_ID\", \"age\"))\n\nlength(unique(Delta_F_merge[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9, exon_ID]))\n```\n\n\n\n\n\n\n```{r, fig.height=8, fig.width=20}\n\nSup_vulcano.A <- ggplot( ) +\n  geom_point(data=Delta_HNM_whippet, aes(-DeltaPsi, Probability)) +\n  geom_point(data=Delta_HNM_whippet[ abs(DeltaPsi)>=0.1 &  Probability >= 0.9 , ], aes(-DeltaPsi, Probability), color=\"red\") +\n  facet_grid(. ~ age) +\n  xlab(\"Delta PSI\") \n\n\nSup_vulcano.B <- ggplot( ) +\n  geom_point(data=Delta_HNM_ME, aes(-DeltaPsi, Probability)) +\n  geom_point(data=Delta_HNM_ME[ abs(DeltaPsi)>=0.1 &  Probability >= 0.9 , ], aes(-DeltaPsi, Probability), color=\"red\") +\n  facet_grid(. ~ age) +\n  xlab(\"Delta PSI\") \n\n\nplot_grid(Sup_vulcano.A, Sup_vulcano.B, ncol=1, labels = \"AUTO\")\n\n```\n\n\n\n\n\n\n```{r}\nDelta_HNM_whippet_included <- Delta_HNM_whippet[ DeltaPsi<=-0.1 &  Probability >= 0.9 , .N , by=(age)]\nDelta_HNM_whippet_excluded <- Delta_HNM_whippet[ DeltaPsi>=0.1 &  Probability >= 0.9 , .N , by=(age)]\nDelta_HNM_ME_included <- Delta_HNM_ME[ DeltaPsi<=-0.1 &  Probability >= 0.9 , .N , by=(age)]\nDelta_HNM_ME_excluded <- Delta_HNM_ME[ DeltaPsi>=0.1 &  Probability >= 0.9 , .N , by=(age)]\n```\n\n\n\n\n```{r}\nDelta_HNM_whippet_ME <- merge(Delta_HNM_whippet, Delta_HNM_ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\", \"age\") )\n\nDelta_HNM_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , .N , by=(age)]\n\nDelta_HNM_whippet_ME_included <- Delta_HNM_whippet_ME[ (DeltaPsi.x<=-0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y<=-0.1 &  Probability.y >= 0.9)  , .N , by=(age)]\nDelta_HNM_whippet_ME_excluded <- Delta_HNM_whippet_ME[ (DeltaPsi.x>=0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y>=0.1 &  Probability.y >= 0.9)  , .N , by=(age)]\n\n\nDelta_HNM_included_stats <- cbind(Delta_HNM_whippet_included[order(age)], Delta_HNM_ME_included[order(age), 2], Delta_HNM_whippet_ME_included[order(age), 2])\ncolnames(Delta_HNM_included_stats) <- c(\"age\", \"Whippet\", \"MicroExonator\", \"Both\")\n\n```\n\n\n\n\n```{r}\n\n\nwhippet_ME_age_stats <- function(Delta_S_whippet, Delta_S_ME) { \n\n\n  Delta_S_whippet_ME <- merge(Delta_S_whippet, Delta_S_ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\", \"age\") )\n  \n  Delta_S_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , .N , by=(age)]\n  \n  Delta_S_whippet_ME_included <- Delta_S_whippet_ME[ (DeltaPsi.x<=-0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y<=-0.1 &  Probability.y >= 0.9)  , .N , by=(age)]\n  Delta_S_whippet_ME_excluded <- Delta_S_whippet_ME[ (DeltaPsi.x>=0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y>=0.1 &  Probability.y >= 0.9)  , .N , by=(age)]\n  \n  \n  #Delta_S_included_stats <- cbind(Delta_S_whippet_included[order(age)], Delta_S_ME_included[order(age), 2], Delta_S_whippet_ME_included[order(age), 2])\n  #colnames(Delta_S_included_stats) <- c(\"age\", \"Whippet\", \"MicroExonator\", \"Both\")\n  \n  \n  \n  Delta_S_whippet_ME[, diff_high:=FALSE]\n  Delta_S_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , diff_high:=TRUE]\n  \n  Delta_S_whippet_ME[, diff_low:=FALSE]\n  Delta_S_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.8) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.8) , diff_low:=TRUE]\n  \n  \n  ages <- sort(unique(Delta_S_whippet_ME$age))\n  age_int <- c(ages[length(ages)])\n  \n  \n    \n  for (a in rev(ages[1:length(ages)-1])){\n    \n    age_int = cbind(age_int, a)\n    \n    Delta_S_whippet_ME[ age==a & diff_high==TRUE &  exon_ID %in% Delta_S_whippet_ME[age %in% age_int & diff_high==TRUE, .N, by=c(\"exon_ID\", \"Gene\") ][N==length(age_int)]$exon_ID   , diff_age:=a ]\n  }\n    \n  Delta_S_whippet_ME_age_diff <- Delta_S_whippet_ME[ diff_high==TRUE, .(diff_age = min(diff_age, na.rm = TRUE)), by=c(\"exon_ID\", \"Gene\")]\n  \n  \n  Delta_S_whippet_ME$delta_sing <- sign(Delta_S_whippet_ME$DeltaPsi.x)\n  \n  Delta_S_whippet_ME_diff_count <- Delta_S_whippet_ME[diff_high==TRUE , .N , by=c(\"exon_ID\", \"delta_sing\")]\n  rescue_exons <- Delta_S_whippet_ME_diff_count[N>=2 & !exon_ID %in% Delta_S_whippet_ME_age_diff[diff_age!=Inf, ]$exon_ID , ]$exon_ID\n  \n  \n  #ages <- Delta_S_included_stats$age\n  #age_int <- c(ages[length(ages)])\n  Delta_S_whippet_ME[exon_ID %in% rescue_exons]\n  \n    \n  for (a in rev(ages[1:length(ages)-1])){\n    \n    age_int = cbind(age_int, a)\n    \n    Delta_S_whippet_ME[exon_ID %in% rescue_exons & age==a & diff_low==TRUE &  exon_ID %in% Delta_S_whippet_ME[age %in% age_int & diff_low==TRUE, .N, by=c(\"exon_ID\", \"Gene\") ][N==length(age_int)]$exon_ID   , diff_age_low:=a ]\n  }\n    \n  \n  Delta_S_whippet_ME_age_diff_low <- Delta_S_whippet_ME[ diff_low==TRUE, .(diff_age = min(diff_age_low, na.rm = TRUE)), by=c(\"exon_ID\", \"Gene\")]\n  \n  \n  diff_ME_sing <- Delta_S_whippet_ME[diff_high==TRUE, -sign(DeltaPsi.y)]\n  names(diff_ME_sing) <- Delta_S_whippet_ME[diff_high==TRUE, exon_ID]\n  \n  \n  Delta_S_whippet_ME_age_diff_total <-  rbind(Delta_S_whippet_ME_age_diff[diff_age!=Inf], Delta_S_whippet_ME_age_diff_low[diff_age!=Inf])\n  \n  Delta_S_whippet_ME_age_diff_total[, change_dir:=diff_ME_sing[exon_ID] ]\n  \n  return(Delta_S_whippet_ME_age_diff_total)\n\n}\n\n```\n\n\n\n\n```{r}\n\nDelta_HNM_whippet_ME_age_diff_total <-  whippet_ME_age_stats(Delta_HNM_whippet, Delta_HNM_ME)\nDelta_F_whippet_ME_age_diff_total <-  whippet_ME_age_stats(Delta_F_whippet, Delta_F_ME)\n\n\nDelta_F_whippet_ME_age_diff_total_stats <-  Delta_F_whippet_ME_age_diff_total[, .(Count=.N) , by=c(\"diff_age\", \"change_dir\") ]\nDelta_HNM_whippet_ME_age_diff_total_stats <-  Delta_HNM_whippet_ME_age_diff_total[, .(Count=.N) , by=c(\"diff_age\", \"change_dir\") ]\n\n```\n\n\n\n\n\n\n\n\n\n\n\n```{r}\n\nggplot() +\n  geom_bar(data=Delta_F_whippet_ME_age_diff_total_stats[change_dir==1], aes(factor(diff_age), Count), stat = \"identity\", fill=\"skyblue\") +\n\n  geom_bar(data=Delta_F_whippet_ME_age_diff_total_stats[change_dir==-1], aes(factor(diff_age), -Count), stat = \"identity\", fill=\"firebrick\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA))\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n```{r}\n\n\n\n\n\n\nggplot() +\n  geom_bar(data=Delta_HNM_whippet_ME_age_diff_total_stats[change_dir==1], aes(factor(diff_age), Count), stat = \"identity\", fill=\"skyblue\") +\n\n  geom_bar(data=Delta_HNM_whippet_ME_age_diff_total_stats[change_dir==-1], aes(factor(diff_age), -Count), stat = \"identity\", fill=\"firebrick\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA))\n\n```\n\n\n\n\n```{r,  fig.height=10, fig.width=3}\n\n\n\nME_diff_age <- Delta_HNM_whippet_ME_age_diff_total$diff_age\nnames(ME_diff_age) <- Delta_HNM_whippet_ME_age_diff_total$exon_ID\n\n\ndiff_ME_sing <- Delta_HNM_whippet_ME_age_diff_total$change_dir\nnames(diff_ME_sing) <- Delta_HNM_whippet_ME_age_diff_total$exon_ID\n\nME_clusters_table[, diff_age:=NA]\nME_clusters_table[, change_dir:=NA]\nME_clusters_table[, diff_age:=ME_diff_age[ME] ]\nME_clusters_table[, change_dir:=diff_ME_sing[ME] ]\n\nME_clusters_table[!is.na(diff_age)]\n\n\nME_clusters_table[ , Total:=.N, by= ME_clusters]\n\nME_clusters_table_stats <-  ME_clusters_table[, .N , by=c(\"ME_clusters\", \"diff_age\", \"change_dir\", \"Total\")]\n\nME_clusters_table_stats[, Percentage:=N*100/Total]\n\n\nME_clusters_table_stats[ , sum(N), by=c( \"change_dir\" ) ] #TOTAL\nME_clusters_table_stats[ , sum(N), by=c( \"diff_age\", \"change_dir\" ) ] #TOTAL\n\nME_clusters_table_stats <- merge(ME_clusters_table_stats, ME_cluster_names[, c(\"ME_cluster\", \"ME_cluster.name\", \"ME_cluster.type\")], by.x=\"ME_clusters\", by.y=\"ME_cluster\")\n\nME_clusters_table_stats_HNM <- ME_clusters_table_stats[diff_age!=\"NA\" & change_dir!=\"NA\"]\n\n\n\nME_clusters_table_stats_HNM_sub <- ME_clusters_table_stats_HNM[ME_cluster.name %in%  ME_cluster_names[ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Muscular\", \"Non-Neuronal\"), ME_cluster.name], ]\nME_clusters_table_stats_HNM_sub$ME_cluster.name <- factor(ME_clusters_table_stats_HNM_sub$ME_cluster.name, levels = sort(unique(as.character(ME_clusters_table_stats_HNM_sub$ME_cluster.name))))\n\n\n\nFig5.B <- ggplot() +\n  geom_bar(data=ME_clusters_table_stats_HNM_sub[change_dir==1], aes(factor(diff_age), Percentage), stat = \"identity\", fill=\"skyblue\") +\n  geom_bar(data=ME_clusters_table_stats_HNM_sub[change_dir==-1], aes(factor(diff_age), -Percentage), stat = \"identity\", fill=\"firebrick\") +\n  facet_grid( ME_cluster.name ~ .) +\n  ylim(c(-30, 75)) +\n  ylab(\"Percentage\") +\n  xlab(\"\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0))\nFig5.B\n\n```\n\n\n\n```{r,  fig.height=10, fig.width=3}\n\n\n\nME_diff_age <- Delta_F_whippet_ME_age_diff_total$diff_age\nnames(ME_diff_age) <- Delta_F_whippet_ME_age_diff_total$exon_ID\n\n\ndiff_ME_sing <- Delta_F_whippet_ME_age_diff_total$change_dir\nnames(diff_ME_sing) <- Delta_F_whippet_ME_age_diff_total$exon_ID\n\nME_clusters_table[, diff_age:=NA]\nME_clusters_table[, change_dir:=NA]\nME_clusters_table[, diff_age:=ME_diff_age[ME] ]\nME_clusters_table[, change_dir:=diff_ME_sing[ME] ]\n\nME_clusters_table[!is.na(diff_age)]\n\n\n\n\n#ME_clusters_table[ , Total:=.N, by= ME_clusters]\n\nME_clusters_table_stats <-  ME_clusters_table[, .N , by=c(\"ME_clusters\", \"diff_age\", \"change_dir\", \"Total\")]\n\nME_clusters_table_stats[, Percentage:=N*100/Total]\n\n\n ME_clusters_table_stats[ , sum(N), by=c( \"change_dir\" ) ] # Total\n\nME_clusters_table_stats <- merge(ME_clusters_table_stats, ME_cluster_names[, c(\"ME_cluster\", \"ME_cluster.name\", \"ME_cluster.type\")], by.x=\"ME_clusters\", by.y=\"ME_cluster\") \nME_clusters_table_stats_F <- ME_clusters_table_stats[diff_age!=\"NA\" & change_dir!=\"NA\"]\n\n\nME_clusters_table_stats_F_sub <- ME_clusters_table_stats_F[ME_cluster.name %in%  ME_cluster_names[ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Muscular\", \"Non-Neuronal\"), ME_cluster.name], ]\nME_clusters_table_stats_F_sub$ME_cluster.name <- factor(ME_clusters_table_stats_F_sub$ME_cluster.name, levels = sort(unique(as.character(ME_clusters_table_stats_F_sub$ME_cluster.name))))\n\n\n\n\nFig5.C <- ggplot() +\n  geom_bar(data=ME_clusters_table_stats_F_sub[change_dir==1], aes(factor(diff_age), Percentage), stat = \"identity\", fill=\"skyblue\") +\n  geom_bar(data=ME_clusters_table_stats_F_sub[change_dir==-1], aes(factor(diff_age), -Percentage), stat = \"identity\", fill=\"firebrick\") +\n  facet_grid( ME_cluster.name ~ .) +\n  ylim(c(-30, 75)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA))\n\nFig5.C\n\n```\n\n\n\n\n\n\n```{r}\n\nDelta_SKM_whippet <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/control_vs_skeletal_muscle_tissue.diff.microexons\")\nDelta_SKM_ME <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/control_vs_skeletal_muscle_tissue.diff.ME.microexons\")\nDelta_SKM_whippet_ME <- merge(Delta_SKM_whippet, Delta_SKM_ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\")  )\nDelta_SKM_whippet_ME[, diff_high:=FALSE]\nDelta_SKM_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , diff_high:=TRUE]\nDelta_SKM_whippet_ME[diff_high==TRUE , change_dir:=sign(DeltaPsi.x) ]\nDelta_SKM_whippet_ME[, Tissue:=\"SKM\"]\n\nDelta_Heart_whippet <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/control_vs_heart.diff.microexons\")\nDelta_Heart_ME <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/control_vs_heart.diff.ME.microexons\")\nDelta_Heart_whippet_ME <- merge(Delta_Heart_whippet, Delta_Heart_ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\")  )\nDelta_Heart_whippet_ME[, diff_high:=FALSE]\nDelta_Heart_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , diff_high:=TRUE]\nDelta_Heart_whippet_ME[diff_high==TRUE , change_dir:=sign(DeltaPsi.x) ]\nDelta_Heart_whippet_ME[, Tissue:=\"Heart\"]\n\n\n\nDelta_AG_whippet <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/control_vs_adrenal_gland.diff.microexons\")\nDelta_AG_ME <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Whippet/control_vs_adrenal_gland.diff.ME.microexons\")\nDelta_AG_whippet_ME <- merge(Delta_AG_whippet, Delta_AG_ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\")  )\nDelta_AG_whippet_ME[, diff_high:=FALSE]\nDelta_AG_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , diff_high:=TRUE]\nDelta_AG_whippet_ME[diff_high==TRUE , change_dir:=sign(DeltaPsi.x)]\nDelta_AG_whippet_ME[, Tissue:=\"Heart\"]\n\n\n```\n\n\n```{r, fig.height=7, fig.width=5}\nneural_AG_PSI <- merge(merge(\nDelta_AG_whippet_ME[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9, .(exon_ID, PSI_AG=Psi_B.x)  ],\n\nDelta_HNM_merge[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9,  .(exon_ID, age, PSI_HNM=Psi_B.x)],\nby=\"exon_ID\"),\n\nDelta_F_merge[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9,  .(exon_ID, age, PSI_F=Psi_B.x)],\nby=c(\"exon_ID\", \"age\") )\n\ntable(neural_AG_PSI$age) # Over 14.5 there is the highest number of intersections\n\n\nneural_AG_PSI_melted <- melt(neural_AG_PSI[age==14.5, c(\"exon_ID\", \"PSI_AG\", \"PSI_HNM\", \"PSI_F\")])\n\n\n\nSup.AG_MHNF.A <- ggplot(neural_AG_PSI_melted, aes(variable, value)) +\n  geom_boxplot() +\n  geom_jitter() +\n  #geom_line(aes(group=exon_ID)) +\n  xlab(\"Tissue\") +\n  ylab(\"PSI\") +\n  ggsignif::geom_signif(test = \"wilcox.test\", comparisons = list(c(\"PSI_AG\", \"PSI_HNM\"), c(\"PSI_AG\", \"PSI_F\"))\n, step_increase=0.15 , test.args = list(alternative = \"two.sided\", paired = TRUE), map_signif_level = TRUE) +\n  scale_x_discrete(labels = c('Adrenal Gland','Brain MHN','Forebrain'))\n\n\n\nSup.AG_MHNF.B <- ggplot(neural_AG_PSI_melted, aes(variable, value)) +\n  #geom_boxplot() +\n  #geom_jitter() +\n  geom_line(aes(group=exon_ID)) +\n  xlab(\"Tissue\") +\n  ylab(\"PSI\") +\n  ggsignif::geom_signif(test = \"wilcox.test\", comparisons = list(c(\"PSI_AG\", \"PSI_HNM\"), c(\"PSI_AG\", \"PSI_F\"))\n, step_increase=0.15 , test.args = list(alternative = \"two.sided\", paired = TRUE), map_signif_level = TRUE) +\n  scale_x_discrete(labels = c('Adrenal Gland','Brain MHN','Forebrain'))\n\n\nplot_grid(Sup.AG_MHNF.A, Sup.AG_MHNF.B, ncol=1, labels=\"AUTO\")\n\n```\n\n\n\n\n```{r,  fig.height=10, fig.width=3}\n\n\n\nME_clusters_table[ , Diff_SKM:=\"FALSE\"]\nME_clusters_table[ME %in% Delta_SKM_whippet_ME[diff_high==TRUE & change_dir==1, exon_ID], Diff_SKM:=\"Excluded\" ]\nME_clusters_table[ME %in% Delta_SKM_whippet_ME[diff_high==TRUE & change_dir==-1, exon_ID], Diff_SKM:=\"Included\"]\n\nME_clusters_table[ , Diff_Heart:=\"FALSE\"]\nME_clusters_table[ME %in% Delta_Heart_whippet_ME[diff_high==TRUE & change_dir==1, exon_ID], Diff_Heart:=\"Excluded\" ]\nME_clusters_table[ME %in% Delta_Heart_whippet_ME[diff_high==TRUE & change_dir==-1, exon_ID], Diff_Heart:=\"Included\"]\n\nME_clusters_table[ , Diff_AG:=\"FALSE\"]\nME_clusters_table[ME %in% Delta_AG_whippet_ME[diff_high==TRUE & change_dir==1, exon_ID], Diff_AG:=\"Excluded\" ]\nME_clusters_table[ME %in% Delta_AG_whippet_ME[diff_high==TRUE & change_dir==-1, exon_ID], Diff_AG:=\"Included\"]\n\n\n\n\n\nME_clusters_table_stats_SKM <- ME_clusters_table[ Diff_SKM!=\"FALSE\", .N, by=c(\"ME_clusters\", \"Total\", \"Diff_SKM\") ]\nME_clusters_table_stats_SKM[, Percentage:=(N*100/Total)]\nME_clusters_table_stats_SKM[, Tissue:=\"SKM\"]\ncolnames(ME_clusters_table_stats_SKM) <- c(\"ME_clusters\", \"Total\", \"Diff\", \"N\", \"Percentage\", \"Tissue\" )\n\nME_clusters_table_stats_Heart <- ME_clusters_table[ Diff_Heart!=\"FALSE\", .N, by=c(\"ME_clusters\", \"Total\", \"Diff_Heart\") ]\nME_clusters_table_stats_Heart[, Percentage:=(N*100/Total)]\nME_clusters_table_stats_Heart[, Tissue:=\"HRT\"]\ncolnames(ME_clusters_table_stats_Heart) <- c(\"ME_clusters\", \"Total\", \"Diff\", \"N\", \"Percentage\", \"Tissue\" )\n\nME_clusters_table_stats_AG <- ME_clusters_table[ Diff_AG!=\"FALSE\", .N, by=c(\"ME_clusters\", \"Total\", \"Diff_AG\") ]\nME_clusters_table_stats_AG[, Percentage:=(N*100/Total)]\nME_clusters_table_stats_AG[, Tissue:=\"AD\"]\ncolnames(ME_clusters_table_stats_AG) <- c(\"ME_clusters\", \"Total\", \"Diff\", \"N\", \"Percentage\", \"Tissue\" )\n\n\nME_clusters_table_stats_SHA <- rbind(ME_clusters_table_stats_SKM, ME_clusters_table_stats_Heart, ME_clusters_table_stats_AG)\n\n\n\nME_clusters_table_stats_SHA <- merge(ME_clusters_table_stats_SHA, ME_cluster_names[, c(\"ME_cluster\", \"ME_cluster.name\", \"ME_cluster.type\")], by.x=\"ME_clusters\", by.y=\"ME_cluster\")\n\nME_clusters_table_stats_SHA_sub <- ME_clusters_table_stats_SHA[ME_cluster.name %in%  ME_cluster_names[ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Muscular\", \"Non-Neuronal\"), ME_cluster.name], ]\n\n\nME_clusters_table_stats_SHA_sub$ME_cluster.name <- factor(ME_clusters_table_stats_SHA_sub$ME_cluster.name, levels = sort(unique(as.character(ME_clusters_table_stats_SHA_sub$ME_cluster.name))))\n\n\n\n\nFig5.D <- ggplot() +\n  geom_bar(data=ME_clusters_table_stats_SHA_sub[Diff==\"Included\"], aes(factor(Tissue), Percentage), stat = \"identity\", fill=\"skyblue\") +\n  geom_bar(data=ME_clusters_table_stats_SHA_sub[Diff==\"Excluded\"], aes(factor(Tissue), -Percentage), stat = \"identity\", fill=\"firebrick\") +\n  facet_grid( ME_cluster.name ~ .) +\n  ylim(c(-30, 75)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA))\nFig5.D\n\n```\n\n\n```{r, fig.height= 10, fig.width=15}\nlibrary(UpSetR)\n\nrequire(UpSetR)\n\nlistInput <- list(one = c(1, 2, 3, 5, 7, 8, 11, 12, 13), two = c(1, 2, 4, 5, \n    10), three = c(1, 5, 6, 7, 8, 9, 10, 12, 13))\n\n\n\nDelta_HNM_whippet_ME_age_diff_total[,  exon_ID]\n\nDelta_F_whippet_ME_age_diff_total[, exon_ID ]\n\n\ntissue_intersection <- list(Brain = ME_clusters_table[diff_age!=\"NA\", ME],\n                            SKM = ME_clusters_table[Diff_SKM!=FALSE, ME],\n                            Heart = ME_clusters_table[Diff_Heart!=FALSE, ME],\n                            AG = ME_clusters_table[Diff_AG!=FALSE, ME]\n                            )\n\n\ntissue_intersection <- list(Brain_HNM = Delta_HNM_whippet_ME_age_diff_total[,  exon_ID],\n                            Brain_F = Delta_F_whippet_ME_age_diff_total[,  exon_ID],\n                            SKM = ME_clusters_table[Diff_SKM!=FALSE, ME],\n                            Heart = ME_clusters_table[Diff_Heart!=FALSE, ME],\n                            AG = ME_clusters_table[Diff_AG!=FALSE, ME]\n                            )\n\n\n\nFig5.y <- upset(fromList(tissue_intersection), order.by = \"freq\", nsets = 5, keep.order = T)\nFig5.y\n```\n\n\n\n\n\n```{r}\ngg_color_hue <- function(n) {\n  hues = seq(15, 375, length = n + 1)\n  hcl(h = hues, l = 65, c = 100)[1:n]\n}\n\n\n```\n\n\n```{r}\n\n\nlibrary(eulerr)\n\n\n\ntissue_intersection <- list(Brain = ME_clusters_table[diff_age!=\"NA\", ME],\n                            SKM = ME_clusters_table[Diff_SKM!=FALSE, ME],\n                            Heart = ME_clusters_table[Diff_Heart!=FALSE, ME],\n                            AG = ME_clusters_table[Diff_AG!=FALSE, ME])\n\n\ntissue_intersection.venn <- euler(c(\"Brain\" = 212,  \n                    \"SKM\" = 35,  \n                    \"Heart\" = 11, \n                    \"AG\" = 11,\n                    \"Brain&AG\" = 29,\n                    \"SKM&Heart\" = 21,\n                    \"Brain&Heart\" = 18,\n                    \"Brain&SKM&Heart\" = 18,\n                    \"Brain&SKM\" = 14,\n                    \"Brain&SKM&Heart&AG\" = 3,\n                    \"Brain&Heart&AG\" = 2,\n                    \"Heart&AG\" = 1,\n                    \"SKM&AG\" = 1,\n                    \"Brain&SKM&AG\" = 1))\n\n\n\n\ntissue_intersection.venn <- euler(c(\"Brain_HNM&Brain_F\" = 156,\n                                    \"Brain_HNM\" = 71,\n                                    \"SKM\" = 34,\n                                    \"Brain_HNM&Brain_F&AG\" = 29,\n                                    \"SKM&Heart\" = 20,\n                                    \"Brain_HNM&Brain_F&Heart\" = 19,\n                                    \"Brain_F\" = 15,\n                                    \"Brain_HNM&Brain_F&SKM&Heart\" = 14,\n                                    \"Brain_HNM&Brain_F&SKM\" = 13,\n                                    \"Heart\" = 11,\n                                    \"AG\" = 11,\n                                    \"Brain_HNM&SKM\" = 5,\n                                    \"Brain_HNM&Brain_F&SKM&Heart&AG\" = 5,                                   \n                                    \"Brain_HNM&SKM&Heart\" = 4,\n                                    \"Brain_HNM&Heart\" = 3,\n                                    \"Brain_F&AG\" = 2,\n                                    \"Brain_HNM&Heart&AG\" = 2,\n                                    \"Heart&AG\" = 1,\n                                    \"SKM&AG\" = 1 ,\n                                    \"Brain_F&SKM\" = 1,\n                                    \"Brain_F&SKM&Heart\" = 1,\n                                    \"Brain_HNM&SKM&AG\" = 1,\n                                    \"Brain_HNM&Brain_F&Heart&AG\" = 1,\n                                    \"Brain_HNM&Brain_F&SKM&AG\" = 1))\n\n                    \n    \nven <- plot(tissue_intersection.venn, counts = FALSE, font=4, cex=1, alpha=0.5,\n     fill=gg_color_hue(5), quantities = list(fontsize = 0))\n\nven\n\n```\n\n\n```{r, fig.height=20, fig.width=16}\n\n\nlibrary(ggplotify)\n\n\n\nFig5.col2.row1 <- plot_grid(Fig5.B, Fig5.C, Fig5.D, nrow=1,  labels = c(\"F\", \"G\", \"H\"), rel_widths = c(2, 1.5, 1.5) )\n\nFig5.col2 <- plot_grid(Fig5.col2.row1, as.grob(Fig5.y), ncol = 1,   labels = c(\"\", \"I\"), rel_heights = c(3, 1) )\n\nFig5.bottom <- plot_grid(Fig5.A, Fig5.col2, nrow=1,  rel_widths = c(1, 1), labels = c(\"E\", \"\"))\n\n\n#Fig5 <- plot_grid(Fig5.col1, Fig5.B, Fig5.C, Fig5.D, nrow=1, rel_widths = c(10, 2, 1.5, 1.5 ), labels = c(\"\", \"F\", \"G\", \"H\") )\nFig5 <- plot_grid(Fig5.X, Fig5.bottom, ncol=1, rel_heights = c(1, 4) )\nFig5 \n```\n\n\n\n\n#Error\n\n\n\n```{r}\n\nDelta_HNM_whippet_ME_age_diff[diff_age!=\"Inf\", ]$exon_ID\n\nDelta_HNM_whippet_ME$delta_sing <- sign(Delta_HNM_whippet_ME$DeltaPsi.x)\n\nDelta_HNM_whippet_ME_diff_count <- Delta_HNM_whippet_ME[diff_high==TRUE , .N , by=c(\"exon_ID\", \"delta_sing\")]\n\n\n\nDelta_HNM_whippet_ME_diff_count[ N==2 & !exon_ID %in% Delta_HNM_whippet_ME_age_diff[diff_age!=\"Inf\", ]$exon_ID, ]\n\nDelta_HNM_whippet_ME_age_diff_low[diff_age!=Inf]\n```\n\n\n\n```{r}\n\nlibrary(biomaRt)\n\n\n\n\n\nMicroExon_genes <- gsub(\"\\\\..*\",\"\", Delta_HNM_whippet_ME$Gene) \nnames(MicroExon_genes) <- Delta_HNM_whippet_ME$exon_ID\n \nDelta_HNM_whippet_ME_age_diff_total[, ensembl_gene_id:=MicroExon_genes[exon_ID]]\n\nensembl = useEnsembl(biomart=\"ensembl\", dataset=\"mmusculus_gene_ensembl\")\n\n\n\n\n\ngene_table <- data.table(getBM(attributes=c('ensembl_gene_id', \"mgi_symbol\"),filters = 'ensembl_gene_id', values = Delta_HNM_whippet_ME_age_diff_total$ensembl_gene_id , mart = ensembl))\n\n\ngene_table <- data.table(getBM(attributes=c('ensembl_gene_id', \"mgi_symbol\"),filters = 'ensembl_gene_id', values = Delta_HNM_whippet_ME_age_diff_total$ensembl_gene_id , mart = ensembl))\n\n\nDelta_HNM_whippet_ME_age_diff_total <- merge( Delta_HNM_whippet_ME_age_diff_total, gene_table, by='ensembl_gene_id')\n\n\n\ncat(as.character(unique(Delta_HNM_whippet_ME_age_diff_total$mgi_symbol)), sep='\\n') \n\n\nDelta_HNM_whippet_ME_age_diff_total[mgi_symbol==\"Dctn2\"]\n```\n\n\n# Input for PPI network\n\n\n\n```{r}\ngenes_background <- unique(c(Delta_HNM_merge$Gene.x, Delta_F_merge$Gene.x))\n\ngenes_background <-  gsub(\"\\\\..*\",\"\", genes_background)\n\n\nneuronal_ME_genes <- unique(c(Delta_HNM_whippet_ME_age_diff_total$Gene, Delta_F_whippet_ME_age_diff_total$Gene))\nneuronal_ME_genes <- gsub(\"\\\\..*\",\"\", neuronal_ME_genes)\n\nneuronal_ME_gene_names <-  gene_table[ensembl_gene_id %in% neuronal_ME_genes, ]\n\ncat(as.character(unique(neuronal_ME_gene_names$mgi_symbol)), sep='\\n') \n\n\nfwrite(data.table(genes_background), \"../PPI/genes_background.txt\", quote = FALSE, col.names = FALSE)\n```\n\n\n\n\n\n\n```{r}\n\nDelta_HNM_whippet_ME_age_diff_total[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\nDelta_HNM_whippet_ME_age_diff_total[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\n\n\nDelta_HNMF_whippet_ME_age_diff_total <- merge(Delta_HNM_whippet_ME_age_diff_total, Delta_F_whippet_ME_age_diff_total, by=c(\"exon_ID\", \"Gene\", \"change_dir\"), all=TRUE)\nDelta_HNMF_whippet_ME_age_diff_total[, diff_age:=min(diff_age.y, diff_age.x, na.rm=TRUE), by=exon_ID]\n\nDelta_HNMF_whippet_ME_age_diff_total[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\n\n\n\n\n\nDelta_HNMF_whippet_ME_age_diff_total <- merge(Delta_HNMF_whippet_ME_age_diff_total, neuronal_ME_gene_names, by=\"ensembl_gene_id\")\n\n\n\n\n#merge( Delta_HNMF_whippet_ME_age_diff_total, PPI_centrality, by=\"mgi_symbol\")\n\n\n\n#Delta_HNMF_whippet_ME_age_diff_total[!mgi_symbol %in% PPI_centrality$mgi_symbol]\n\n\nfwrite(data.table(data.table(unique(Delta_HNMF_whippet_ME_age_diff_total$ensembl_gene_id))), \"../Final_Figures/Figure5/microexons_HMNF_genes.txt\", quote = FALSE, col.names = FALSE)\n\n```\n\n\n```{r}\n\nDelta_Heart_whippet_ME[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\nDelta_SKM_whippet_ME[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\nDelta_AG_whippet_ME[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\n\n\nDelta_Heart_whippet_ME <- merge(Delta_Heart_whippet_ME, neuronal_ME_gene_names, by=\"ensembl_gene_id\")\nDelta_SKM_whippet_ME <- merge(Delta_SKM_whippet_ME, neuronal_ME_gene_names, by=\"ensembl_gene_id\")\nDelta_AG_whippet_ME <- merge(Delta_AG_whippet_ME, neuronal_ME_gene_names, by=\"ensembl_gene_id\")\n\nfwrite(data.table(data.table(unique(Delta_Heart_whippet_ME[diff_high==TRUE, ensembl_gene_id]))), \"../Final_Figures/Figure5/heart_genes.txt\", quote = FALSE, col.names = FALSE)\nfwrite(data.table(data.table(unique(Delta_SKM_whippet_ME[diff_high==TRUE, ensembl_gene_id]))), \"../Final_Figures/Figure5/SKM_genes.txt\", quote = FALSE, col.names = FALSE)\nfwrite(data.table(data.table(unique(Delta_AG_whippet_ME[diff_high==TRUE, ensembl_gene_id]))), \"../Final_Figures/Figure5/AG_genes.txt\", quote = FALSE, col.names = FALSE)\n\n\nDelta_Heart_whippet_ME[diff_high==TRUE, ensembl_gene_id]\nDelta_SKM_whippet_ME[diff_high==TRUE, ensembl_gene_id]\nDelta_AG_whippet_ME[diff_high==TRUE, ensembl_gene_id]\n```\n\n\n\n```{r}\n\nmicroexons_Vastdb <- read_delim(\"~/Google_Drive/Results/ME/mm10/VastDB/VastDb.microexons.txt\", \n    \" \", escape_double = FALSE, col_names = FALSE, \n    trim_ws = TRUE)\n\n\nmicroexons_Vastdb <- microexons_Vastdb$X1\n\n\n\nmicroexons_GENCODE <- read_delim(\"~/Google_Drive/Results/ME/mm10/gencode.vM16.annotation.microexons.txt\", \n    \" \", escape_double = FALSE, col_names = FALSE, \n    trim_ws = TRUE)\n\n\nmicroexons_GENCODE <- microexons_GENCODE$X1\n```\n\n\n\n```{r}\n\n\n\nME_final[ , type:=\"Annotated\"  ]\nME_final[!ME %in% microexons_Vastdb, type:=\"Missing in VastDB\"   ]\nME_final[!ME %in% microexons_GENCODE, type:=\"Missing in GENCODE\"   ]\nME_final[!ME %in% microexons_GENCODE & !ME %in% microexons_Vastdb , type:=\"Novel\"   ]\n\n\n```\n\n\n\n\n```{r}\n\nneuronal_ME_HNMF  <- unique(rbind(Delta_HNM_whippet_ME_age_diff_total[, c(\"exon_ID\", \"Gene\")], Delta_F_whippet_ME_age_diff_total[, c(\"exon_ID\", \"Gene\")] ))\n\n\n\n\nneuronal_ME_HNMF[ , type:=\"Annotated\"  ]\n\nneuronal_ME_HNMF[!exon_ID %in% microexons_Vastdb, type:=\"Missing in VastDB\"   ]\n\nneuronal_ME_HNMF[!exon_ID %in% microexons_GENCODE, type:=\"Missing in GENCODE\"   ]\n\nneuronal_ME_HNMF[!exon_ID %in% microexons_GENCODE & !exon_ID %in% microexons_Vastdb , type:=\"Novel\"   ]\n\n\n\n\nneuronal_ME_HNMF_stats <- neuronal_ME_HNMF[ , .N , by=\"type\"]\n\nneuronal_ME_HNMF_stats[, Total:=sum(N)]\n\nneuronal_ME_HNMF_stats[, Percentage:=N*100/Total]\n\n```\n\n\n\n```{r}\n\n#library(\"STRINGdb\")\n\n#string_db <- STRINGdb$new( version=\"10\", species=9606, score_threshold=0, input_directory=\"\" )\n\n\n#neuronal_ME_gene_names_mapped <- string_db$map( neuronal_ME_gene_names, \"mgi_symbol\", removeUnmappedRows = TRUE )\n\n# string_db$plot_network( neuronal_ME_gene_names_mapped )\n\n\n\n#hits <- as.character(unique(neuronal_ME_gene_names$mgi_symbol))\n\n#example1_mapped <- string_db$map( hits, \"gene\", removeUnmappedRows = TRUE )\n\n#plot_network( hits )\n\n#data(diff_exp_example1)\n\n\n#example1_mapped <- string_db$map( diff_exp_example1, \"gene\", removeUnmappedRows = TRUE )\n\n#map\n\n#?STRINGdb\n```\n\n\n\n\n\n\n\n```{r}\n\n\nneuronal_clusters_genes <- merge(neuronal_clusters, gene_info, by.x=\"transcript\", by.y=\"ensembl_transcript_id\")\n\nneuronal_clusters_genes$ME_clusters <- mapvalues(neuronal_clusters_genes$ME_clusters, \n          from =1:18,\n          to = c(\"I1\", \"E1\", \"E3\", \"I2\", \"N1\", \"M1\", \"N2\", \"NM3\", \"NM2\", \"N5\", \"NM1\", \"N3\", \"N4\", \"NN2\", \"E2\", \"I4\", \"I3\", \"NN1\"))\n\n#Generaring values for pie vertics\n\ncolour_pallete <- list( c(heat.colors(8), \"#1E90FFFF\"))\nvalues_clusters = list()\n\nME_per_gene = list()\n\nvertex_shape = list()\ncircle_color = list()\n\nlabel_color = list()\n\nfor (i in 1:144){\n  \n\n  gene_name = nodes[i, ]$id\n\n\n  if (i==16){\n    \n    gene_name = \"Sptan1\"   # STRING DB changed the name from Spna2 to Spatan1\n  }\n  \n  if (i==49){\n    \n    gene_name = \"Diaph1\"   ## STRING DB changed the name from Diap1 to Diaph1\n  }\n  \n  \n  ME_per_gene[[i]] <- nrow(neuronal_clusters_genes[mgi_symbol==gene_name, ])\n\n\n  N1 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N1\", ])\n  N2 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N2\", ])\n  N3 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N3\", ])\n  N4 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N4\", ])\n  N5 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N5\", ])\n  NM1 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NM1\", ])\n  NM2 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NM2\", ])\n  NM3 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NM3\", ])\n  NN1 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NN1\", ])\n  \n  \n  #values_clusters[[i]] <- c(N1, N2, N3, N4, N5, NM1, NM2, NM3, NN1)\n  \n  cluster_counts <- c(NM1, N1, NM2,  N2, NM3, N3, N4, N5,  NN1)\n  \n  values_clusters[[i]] <- cluster_counts\n  \n  if (length(which(cluster_counts!=0) ) == 1  ) {\n    \n    vertex_shape[[i]] <- \"circle\"   #Nodes with only one kind of cluster need to be circles instead of pie to avoid pie border\n    circle_color[[i]] <-  colour_pallete[[1]][which(cluster_counts!=0)] \n    \n    \n  } else {\n    \n    \n    vertex_shape[[i]] <- \"pie\"\n    circle_color[[i]] <-  \"#FFFF00FF\"   #This colour is not taken in consideration for pies\n    \n    \n  }\n  \n  \n  #if (gene_name %in%  SFARI_Gene_animal_genes[model.species==\"Mus musculus\" , gene.symbol]) {\n    \n  if (gene_name %in%  SFARI_Gene_human_genes[ gene.score<=3 , gene.symbol]) {  \n    \n    \n    \n    label_color[[i]] <- \"darkgreen\"\n    \n    \n  } else{\n    \n     label_color[[i]] <- \"black\"\n    \n  }\n  \n    \n    \n  if ( sum( c( N1, N2, N3, N4, N5, NM1, NM2, NM3, NN1)) == 0 ) {\n    \n    print( c(i, nodes[i, ]$id ) )\n  }\n  \n\n}\n\n\n\n```\n\n\n\n\n\n\n\n\n```{r, fig.height=20, fig.width=20}\n\nlibrary(igraph)\n\nvertex.pie.color=list(heat.colors(9))\n\n\n\n\n\nME_PPI <- fread(\"../PPI/ME.PPI.tsv\")\n\n\n\n\nlinks <- ME_PPI[, c(\"#node1\", \"node2\", \"combined_score\")]\n\n\n\ncolnames(links) <- c(\"from\", \"to\", \"score\")\n\nnodes.1 <- ME_PPI[, c(\"#node1\")]\ncolnames(nodes.1) <- c(\"id\")\n\nnodes.2 <- ME_PPI[, c(\"node2\")]\ncolnames(nodes.2) <- c(\"id\")\n\n\nnodes <- rbind(nodes.1, nodes.2)\n\n\nnodes <- unique(  nodes[ , , by=\"id\"] )\n\n\n\nnet <- graph_from_data_frame(d=links, vertices=nodes, directed=F)\n\nE(net)$size <- log(2-  E(net)$score)\n\nE(net)$width <- (1-  E(net)$score)  * 15\n\n\n\n\n#V(net)$size <- log(unlist(ME_per_gene) + 2) * 4\n\n#E(net)$score\n\n#plot(net, vertex.shape= unlist(vertex_shape), vertex.color = unlist(circle_color)  , vertex.pie=values_clusters, rescale=T, pie.lty=2, vertex.pie.color=colour_pallete, vertex.label.font=2, vertex.label.dist=0.4, vertex.label.color=unlist(label_color), vertex.label.cex=1.2)\n\n#colour_pallete\n\n\n#plot(net,rescale=T, vertex.label.cex=1.2, vertex.size=1 )\n\n\n\n\n\n#harmonic_centrality <- PPI_diff_age_HNMF$harmonic_centrality\n#names(harmonic_centrality) <- PPI_diff_age_HNMF$mapped_gene\n\n#V(net)$size <- log(harmonic_centrality[names(V(net))] +1 )\n\n\n#V(net)$size <- harmonic_centrality[names(V(net))]/6\n\n#plot(net)\n\n\n\n\n#PPI_diff_age_HNM_central [  %in% names(V(net))\n\n#harmonic_centrality[names(V(net))]\n\n\n#harmonic_centrality[names(V(net))]\n\n\n\n\n#harmonic_centrality[names(V(net))]\n\n\n#names(V(net)) \n\n#PPI_diff_age_HNM_central[  (mgi_symbol %in%  names(V(net)))==FALSE ,  ]\n\n#PPI_diff_age_HNM_central[mgi_symbol==\"Itsn1\"]\n\n#PPI_diff_age_HNMF\n```\n\n\n\n\n```{r}\nlibrary(CINNA)\n\nPPI_betweenness <- estimate_betweenness(net, vids = V(net), directed = F, cutoff=-1,\n  weights = NULL, nobigint = TRUE)\n\nPPI_eigen_centrality <- eigen_centrality(net, directed = F, scale = T, weights = NULL)$vector\n\n\n#cbind(as.numeric(PPI_betweenness[V(net)]), as.numeric( PPI_eigen_centrality[V(net)]  ) )\n\nPPI_harmonic_centrality <- harmonic_centrality(net)\n\n\nPPI_degree_centrality <- centr_degree(net)$res\nnames(PPI_degree_centrality) <- V(net)$name\n\nPPI_centrality <- data.frame(cbind(  PPI_betweenness[V(net)] ,  PPI_eigen_centrality[V(net)], PPI_harmonic_centrality, PPI_degree_centrality   ))\n\ncolnames(PPI_centrality) <- c(\"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\")\n\nPPI_centrality$mapped_gene <-  row.names(PPI_centrality)\n\nPPI_centrality <- data.table(PPI_centrality)\n\n\n```\n\n\n\n\n\n\n```{r, fig.height=6, fig.width=8}\n\nlibrary(ggrepel)\nlibrary(cowplot)\nlibrary(readr)\n\nPPI_genes <- read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/ME.PPI.annotations.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE)\n\nPPI_genes <- fread(\"../Figures/New_Figure 5/STRING/HMNF_ME_gene.STRING_map.txt\", sep=\"\\t\")\n\nDelta_HNMF_whippet_ME_age_diff_total\n\n\nDelta_HNMF_whippet_ME_age_diff_total_PPI <- merge(Delta_HNMF_whippet_ME_age_diff_total, PPI_genes,  by.x=\"ensembl_gene_id\", by.y=\"input_term\")\n\nPPI_diff_age_HNMF <- merge(Delta_HNMF_whippet_ME_age_diff_total_PPI, PPI_centrality, by=\"mapped_gene\")\n  \n  \n  \n\n#neuronal_ME_gene_names_diff_age <- merge(neuronal_ME_gene_names, PPI_centrality, by=\"mgi_symbol\")\n\n#Delta_HNM_whippet_ME_age_diff_total[ , ensembl_gene_id:=gsub(\"\\\\..*\",\"\", Gene) ]\n\n\n#PPI_diff_age_HNMF <- merge(Delta_HNMF_whippet_ME_age_diff_total, neuronal_ME_gene_names_diff_age, by=\"ensembl_gene_id\")\n\n#PPI_diff_age_HNMF <- unique(PPI_diff_age_HNM)\n\n\n\nPPI_diff_age_HNMF[ , type:=\"Annotated\"  ]\n\nPPI_diff_age_HNMF[!exon_ID %in% microexons_Vastdb, type:=\"Missing in VastDB\"   ]\n\nPPI_diff_age_HNMF[!exon_ID %in% microexons_GENCODE, type:=\"Missing in GENCODE\"   ]\n\nPPI_diff_age_HNMF[!exon_ID %in% microexons_GENCODE & !exon_ID %in% microexons_Vastdb , type:=\"Novel\"   ]\n\n\n\n\nL1int <- c(\"Ank1\", \"Ap2m1\", \"Kcnq2\", \"Nfasc\", \"Src\", \"Ank2\", \"Dnm1\", \"L1cam\", \"Nrcam\", \"Vav2\", \"Ank3\", \"Dnm3\", \"Ncam1\", \"Sptan1\")\n#PPI_diff_age_HNM[, L1cam_and_interactors := mgi_symbol %in% L1int]\n\n\nPPI_diff_age_HNMF_stats_HC <- PPI_diff_age_HNMF[,  .(min_dif_age=min(diff_age), Number_of_ME=.N), by=c(\"ensembl_gene_id\", \"harmonic_centrality\") ]\nPPI_diff_age_HNMF_stats_HC[, rank:=frank(-harmonic_centrality)]\nPPI_diff_age_HNMF_stats_HC[ , max_rank:=max(rank)]\nPPI_diff_age_HNMF_stats_HC[ , percentil:=rank/max_rank*100]\nPPI_diff_age_HNMF_stats_HC[, central:=FALSE]\nPPI_diff_age_HNMF_stats_HC[percentil<15, central:=TRUE]\n\n\nPPI_diff_age_HNMF_stats_B <- PPI_diff_age_HNMF[,  .(min_dif_age=min(diff_age), Number_of_ME=.N), by=c(\"ensembl_gene_id\", \"betweenness\") ]\nPPI_diff_age_HNMF_stats_B[, rank:=frank(-betweenness)]\nPPI_diff_age_HNMF_stats_B[ , max_rank:=max(rank)]\nPPI_diff_age_HNMF_stats_B[ , percentil:=rank/max_rank*100]\nPPI_diff_age_HNMF_stats_B[, central:=FALSE]\nPPI_diff_age_HNMF_stats_B[percentil<15, central:=TRUE]\n\n\nPPI_diff_age_HNMF_stats_EC <- PPI_diff_age_HNMF[,  .(min_dif_age=min(diff_age), Number_of_ME=.N), by=c(\"ensembl_gene_id\", \"eigen_centrality\", \"type\", \"mapped_gene\") ]\nPPI_diff_age_HNMF_stats_EC[, rank:=frank(-eigen_centrality)]\nPPI_diff_age_HNMF_stats_EC[ , max_rank:=max(rank)]\nPPI_diff_age_HNMF_stats_EC[ , percentil:=rank/max_rank*100]\nPPI_diff_age_HNMF_stats_EC[, central:=FALSE]\nPPI_diff_age_HNMF_stats_EC[percentil<25, central:=TRUE]\n\n\nPPI_diff_age_HNMF_central <- merge(PPI_diff_age_HNMF, PPI_diff_age_HNMF_stats_EC[, c(\"ensembl_gene_id\", \"central\")], by=\"ensembl_gene_id\" )\n\n\nF6F <- ggplot(PPI_diff_age_HNMF_central) +\n  geom_jitter(aes(eigen_centrality, diff_age,  colour= type  ), width=0, height=0.1) + \n  xlab(\"Eigencentrality\") +\n  ylab(\"Earliest microexon differential inclusion detection (DPC)\") +\n   scale_y_continuous(breaks=seq(10.5,16.5,1)) +\n    geom_text_repel(data=PPI_diff_age_HNMF_central[  central==TRUE  ], \n                  aes(x=eigen_centrality, y=diff_age, colour= type ), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  angle        = 90,\n                  segment.size = 0.2,\n                  label=PPI_diff_age_HNMF_central[central==TRUE  , mapped_gene],\n                  show.legend = FALSE) +\n          theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\") +\n      theme(legend.position=\"none\")\n\n\n\n\n\nPPI_diff_age_HNMF_central <- merge(PPI_diff_age_HNMF, PPI_diff_age_HNMF_stats_HC[, c(\"ensembl_gene_id\", \"central\")], by=\"ensembl_gene_id\" )\n\n\nF6.sup.1 <- ggplot(PPI_diff_age_HNMF_central) +\n  geom_jitter(aes(harmonic_centrality, diff_age,  colour= type  ), width=0, height=0.1) + \n  xlab(\"Harmonic Centrality\") +\n  ylab(\"Earliest microexon differential inclusion detection (DPC)\") +\n   scale_y_continuous(breaks=seq(10.5,16.5,1)) +\n    geom_text_repel(data=PPI_diff_age_HNMF_central[  central==TRUE  ], \n                  aes(x=harmonic_centrality, y=diff_age, colour= type ), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  angle        = 90,\n                  segment.size = 0.2,\n                  label=PPI_diff_age_HNMF_central[central==TRUE  , mapped_gene],\n                  show.legend = FALSE) +\n          theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\nF6F\n```\n\n\n```{r}\n\nPPI_diff_age_HNM_stats_EC <- PPI_diff_age_HNMF[is.na(diff_age.x)!=TRUE][,  .(min_dif_age=min(diff_age.x), Number_of_ME=.N), by=c(\"ensembl_gene_id\", \"eigen_centrality\") ]\nPPI_diff_age_HNM_stats_EC[, rank:=frank(-eigen_centrality)]\nPPI_diff_age_HNM_stats_EC[ , max_rank:=max(rank)]\nPPI_diff_age_HNM_stats_EC[ , percentil:=rank/max_rank*100]\nPPI_diff_age_HNM_stats_EC[, central:=FALSE]\nPPI_diff_age_HNM_stats_EC[percentil<15, central:=TRUE]\n\n\n\nggplot(PPI_diff_age_HNM_stats_EC) +\n  geom_bar(aes(min_dif_age, fill=central), stat = \"count\", position=\"fill\" ) +\n  xlab(\"Earliest microexon differential inclusion detection per gene (DPC)\")+\n  ylab(\"Protein type proportion\") +\n  scale_x_continuous(breaks=seq(10.5,16.5,1)) +\n  scale_fill_discrete(name = \"Protein type\", labels = c(\"Non-central\", \"Central\"))  +\n            theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\n\n\n\nPPI_diff_age_HNM_stats_HC <- PPI_diff_age_HNMF[is.na(diff_age.x)!=TRUE][,  .(min_dif_age=min(diff_age.x), Number_of_ME=.N), by=c(\"ensembl_gene_id\", \"harmonic_centrality\") ]\nPPI_diff_age_HNM_stats_HC[, rank:=frank(-harmonic_centrality)]\nPPI_diff_age_HNM_stats_HC[ , max_rank:=max(rank)]\nPPI_diff_age_HNM_stats_HC[ , percentil:=rank/max_rank*100]\nPPI_diff_age_HNM_stats_HC[, central:=FALSE]\nPPI_diff_age_HNM_stats_HC[percentil<15, central:=TRUE]\n\n\n\nggplot(PPI_diff_age_HNM_stats_HC) +\n  geom_bar(aes(min_dif_age, fill=central), stat = \"count\", position=\"fill\" ) +\n  xlab(\"Earliest microexon differential inclusion detection per gene (DPC)\")+\n  ylab(\"Protein type proportion\") +\n  scale_x_continuous(breaks=seq(10.5,16.5,1)) +\n  scale_fill_discrete(name = \"Protein type\", labels = c(\"Non-central\", \"Central\"))  +\n            theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\n\n\n\ncentrality_logistic_regression <- glm(formula = central ~ min_dif_age, family = \"binomial\", data = PPI_diff_age_HNM_stats_EC)\nsummary(centrality_logistic_regression)\n\n\ncentrality_logistic_regression <- glm(formula = central ~ min_dif_age, family = \"binomial\", data = PPI_diff_age_HNM_stats_HC)\nsummary(centrality_logistic_regression)\n```\n\n\n\n\n\n\n\n```{r}\nvar2str <- function(v1) {\n  deparse(substitute(v1))\n}\n\n```\n\n\n\n\n\n```{r}\n#GO_Reactome <- fread(\"../Figures/New_Figure 5/STRING/GO/Whole_genome_background/Reactome Pathways.tsv\")\n\n\n\n\nAxon_guidance <- unlist(strsplit(GO_Reactome[`term description`==\"Axon guidance\"]$`matching proteins in your network (labels)`, \",\"))\nL1CAM_interactions <- unlist(strsplit(GO_Reactome[`term description`==\"L1CAM interactions\"]$`matching proteins in your network (labels)`, \",\"))\nProtein_protein_interactions_at_synapses <- unlist(strsplit(GO_Reactome[`term description`==\"Protein-protein interactions at synapses\"]$`matching proteins in your network (labels)`, \",\"))\nER_to_Golgi_Anterograde_Transport <- unlist(strsplit(GO_Reactome[`term description`==\"ER to Golgi Anterograde Transport\"]$`matching proteins in your network (labels)`, \",\"))\nClathrin_mediated_endocytosis <- unlist(strsplit(GO_Reactome[`term description`==\"Clathrin-mediated endocytosis\"]$`matching proteins in your network (labels)`, \",\"))\nGolgi_Associated_Vesicle_Biogenesis <- unlist(strsplit(GO_Reactome[`term description`==\"Golgi Associated Vesicle Biogenesis\"]$`matching proteins in your network (labels)`, \",\"))\nMembrane_Trafficking <- unlist(strsplit(GO_Reactome[`term description`==\"Membrane Trafficking\"]$`matching proteins in your network (labels)`, \",\"))\nIntra_Golgi_and_retrograde_Golgi_to_ER_traffic <- unlist(strsplit(GO_Reactome[`term description`==\"Intra-Golgi and retrograde Golgi-to-ER traffic\"]$`matching proteins in your network (labels)`, \",\"))\n\nGOs <- list(Axon_guidance, L1CAM_interactions)\n\nPPI_centrality_GO <- PPI_diff_age_HNMF[, c(\"mapped_gene\", \"exon_ID\", \"diff_age\",  \"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\", \"type\") ]\n\nPPI_centrality_GO <-\n  rbind(PPI_diff_age_HNMF[ mapped_gene %in% Axon_guidance, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(Axon_guidance)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% L1CAM_interactions, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(L1CAM_interactions)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% Protein_protein_interactions_at_synapses, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(Protein_protein_interactions_at_synapses)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% ER_to_Golgi_Anterograde_Transport, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(ER_to_Golgi_Anterograde_Transport)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% Clathrin_mediated_endocytosis, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(Clathrin_mediated_endocytosis)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% Golgi_Associated_Vesicle_Biogenesis, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(Golgi_Associated_Vesicle_Biogenesis)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% Membrane_Trafficking, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(Membrane_Trafficking)) ],\nPPI_diff_age_HNMF[ mapped_gene %in% Intra_Golgi_and_retrograde_Golgi_to_ER_traffic, .(mapped_gene, exon_ID, diff_age,  betweenness, eigen_centrality, harmonic_centrality, degree_centrality, type, GO=var2str(Intra_Golgi_and_retrograde_Golgi_to_ER_traffic)) ])\n\n\n\n\n\n\n\nggplot(PPI_centrality_GO, aes(GO, log(betweenness))) +\n  geom_jitter() +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0))\n\n\nPPI_centrality_GO_gene_centered <- PPI_centrality_GO[ , .(diff_age=min(diff_age)) , by=c(\"mapped_gene\", \"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\", \"GO\")]\n\n\nggplot(PPI_centrality_GO_gene_centered ) +\n  geom_jitter(aes(harmonic_centrality, diff_age, color=GO), width=0.5, height=0.1 ) +\n   theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\n```\n\n```{r}\nggplot(PPI_centrality_GO_gene_centered, aes(GO, diff_age)) +\n+     geom_jitter(height = 0.1, width = 0.1) +\n+     theme(axis.text.x = element_text(angle = 90, vjust = 0))\n\n\n```\n\n\n```{r}\n\nPPI_centrality_GO_gene_centered_stats <-  PPI_centrality_GO_gene_centered[ , .(N=.N),  by=c(\"GO\", \"diff_age\")]\n\nPPI_centrality_GO_gene_centered_stats[ , Total:=sum(N), by =\"GO\"]\n\nPPI_centrality_GO_gene_centered_stats[, fraction:=N/Total ]\n\ndiff_age_levels <- PPI_centrality_GO_gene_centered_stats[ , .(mean=mean(diff_age)), by=\"GO\"][order(-mean)]$GO\n\n\nPPI_centrality_GO_gene_centered_stats$GO <- factor(PPI_centrality_GO_gene_centered_stats$GO, levels= diff_age_levels)\n\nggplot(PPI_centrality_GO_gene_centered_stats) +\n  geom_tile(aes( diff_age, GO, fill = fraction)) +\n  scale_fill_gradient(low=\"grey\", high=\"red\")+\n  theme_bw()+\n  labs(fill = \"Gene fraction\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n```\n\n\n\n```{r}\n\nGO_Reactome_all <- rbind(\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% Axon_guidance, .(mapped_gene, exon_ID, diff_age, GO=var2str(Axon_guidance)) ] ,\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% L1CAM_interactions, .(mapped_gene, exon_ID, diff_age, GO=var2str(L1CAM_interactions)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% Protein_protein_interactions_at_synapses, .(mapped_gene, exon_ID, diff_age, GO=var2str(Protein_protein_interactions_at_synapses)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% ER_to_Golgi_Anterograde_Transport, .(mapped_gene, exon_ID, diff_age, GO=var2str(ER_to_Golgi_Anterograde_Transport)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% Clathrin_mediated_endocytosis, .(mapped_gene, exon_ID, diff_age, GO=var2str(Clathrin_mediated_endocytosis)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% Golgi_Associated_Vesicle_Biogenesis, .(mapped_gene, exon_ID, diff_age, GO=var2str(Golgi_Associated_Vesicle_Biogenesis)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% Membrane_Trafficking, .(mapped_gene, exon_ID, diff_age, GO=var2str(Membrane_Trafficking)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% Intra_Golgi_and_retrograde_Golgi_to_ER_traffic, .(mapped_gene, exon_ID, diff_age, GO=var2str(Intra_Golgi_and_retrograde_Golgi_to_ER_traffic))] )\n\n\nGO_Reactome_all_stats <-  GO_Reactome_all[ , .(N=.N),  by=c(\"GO\", \"diff_age\")]\nGO_Reactome_all_stats[ , Total:=sum(N), by =\"GO\"]\nGO_Reactome_all_stats[, fraction:=N/Total ]\ndiff_age_levels <- GO_Reactome_all_stats[ , .(mean=mean(diff_age)), by=\"GO\"][order(-mean)]$GO\n\ndiff_age_levels <- c(\"Membrane_Trafficking\",\n                     \"Intra_Golgi_and_retrograde_Golgi_to_ER_traffic\",\n                     \"Golgi_Associated_Vesicle_Biogenesis\",\n                     \"Clathrin_mediated_endocytosis\",\n                     \"ER_to_Golgi_Anterograde_Transport\",\n                      \"Axon_guidance\",\n                      \"L1CAM_interactions\",\n                      \"Protein_protein_interactions_at_synapses\")\n\n\nGO_Reactome_all_stats$GO <- factor(GO_Reactome_all_stats$GO, levels= rev(diff_age_levels))\n\n\nF6G <- ggplot(GO_Reactome_all_stats) +\n  geom_tile(aes( diff_age, GO, fill = fraction)) +\n  geom_text(aes(diff_age, GO, label = N), color=\"white\") +\n  scale_fill_gradient(low=\"grey\", high=\"red\", limits=c(0, 0.7) )+\n    scale_x_continuous(breaks=seq(10.5,16.5,1)) +\n  theme_bw()+\n  xlab(\"DPC\") +\n  ylab(\"\") +\n  labs(fill = \"Gene fraction\") +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\nF6G\n\n```\n\n\n```{r, fig.height=8, fig.width=5}\nF6FG <- plot_grid(F6F, F6G, ncol=1, labels = c(\"F\", \"G\"), rel_heights = c(1.3, 1))\n```\n\n\n\n```{r}\n\n\nBiological_Process <- fread(\"../PPI/enrichment.Process.tsv\")\nCellular_Component <- fread(\"../PPI/enrichment.Component.tsv\")\nGO_Reactome <- fread(\"../PPI/enrichment.RCTM.tsv\")\n\n\nnervous_system_development <- unlist(strsplit(Biological_Process[`term description`==\"nervous system development\"]$`matching proteins in your network (labels)`, \",\"))\nvesicle_mediated_transport <- unlist(strsplit(Biological_Process[`term description`==\"vesicle-mediated transport\"]$`matching proteins in your network (labels)`, \",\"))\ncytoskeleton_organization <- unlist(strsplit(Biological_Process[`term description`==\"cytoskeleton organization\"]$`matching proteins in your network (labels)`, \",\"))\nsynapse_assembly <- unlist(strsplit(Biological_Process[`term description`==\"synapse assembly\"]$`matching proteins in your network (labels)`, \",\"))\nsignal_transduction <- unlist(strsplit(Biological_Process[`term description`==\"signal transduction\"]$`matching proteins in your network (labels)`, \",\"))\n\nsynapse <- unlist(strsplit(Cellular_Component[`term description`==\"synapse\"]$`matching proteins in your network (labels)`, \",\"))\nsomatodendritic_compartment <- unlist(strsplit(Cellular_Component[`term description`==\"somatodendritic compartment\"]$`matching proteins in your network (labels)`, \",\"))\npostsynapse <- unlist(strsplit(Cellular_Component[`term description`==\"postsynapse\"]$`matching proteins in your network (labels)`, \",\"))\npresynapse <- unlist(strsplit(Cellular_Component[`term description`==\"presynapse\"]$`matching proteins in your network (labels)`, \",\"))\ngrowth_cone <- unlist(strsplit(Cellular_Component[`term description`==\"growth cone\"]$`matching proteins in your network (labels)`, \",\"))\n\nGO_Biological_Process <- rbind(\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% nervous_system_development, .(mapped_gene, exon_ID, diff_age, GO=var2str(nervous_system_development)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% vesicle_mediated_transport, .(mapped_gene, exon_ID, diff_age, GO=var2str(vesicle_mediated_transport)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% cytoskeleton_organization, .(mapped_gene, exon_ID, diff_age, GO=var2str(cytoskeleton_organization)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% synapse_assembly, .(mapped_gene, exon_ID, diff_age, GO=var2str(synapse_assembly)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% signal_transduction, .(mapped_gene, exon_ID, diff_age, GO=var2str(signal_transduction)) ] )\n\nGO_Cellular_Component <- rbind(\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% synapse, .(mapped_gene, exon_ID, diff_age, GO=var2str(synapse)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% somatodendritic_compartment, .(mapped_gene, exon_ID, diff_age, GO=var2str(somatodendritic_compartment)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% postsynapse, .(mapped_gene, exon_ID, diff_age, GO=var2str(postsynapse)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% presynapse, .(mapped_gene, exon_ID, diff_age, GO=var2str(presynapse)) ],\nDelta_HNMF_whippet_ME_age_diff_total_PPI[ mapped_gene %in% growth_cone, .(mapped_gene, exon_ID, diff_age, GO=var2str(growth_cone)) ] )\n\n\n\n\nGO_Biological_Process_stats <-  GO_Biological_Process[ , .(N=.N),  by=c(\"GO\", \"diff_age\")]\nGO_Biological_Process_stats[ , Total:=sum(N), by =\"GO\"]\nGO_Biological_Process_stats[, fraction:=N/Total ]\ndiff_age_levels <- GO_Biological_Process_stats[ , .(mean=median(diff_age)), by=\"GO\"][order(-mean)]$GO\nGO_Biological_Process_stats$GO <- factor(GO_Biological_Process_stats$GO, levels= diff_age_levels)\n\n\n\nSup_GO_time.A <- ggplot(GO_Biological_Process_stats) +\n  geom_tile(aes( diff_age, GO, fill = fraction)) +\n    geom_text(aes(diff_age, GO, label = N), color=\"white\") +\n  scale_fill_gradient(low=\"grey\", high=\"red\" )+\n  theme_bw()+\n  labs(fill = \"Gene fraction\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n\n\n\nGO_Cellular_Component_stats <-  GO_Cellular_Component[ , .(N=.N),  by=c(\"GO\", \"diff_age\")]\nGO_Cellular_Component_stats[ , Total:=sum(N), by =\"GO\"]\nGO_Cellular_Component_stats[, fraction:=N/Total ]\ndiff_age_levels <- GO_Cellular_Component_stats[ , .(mean=median(diff_age)), by=\"GO\"][order(-mean)]$GO\nGO_Cellular_Component_stats$GO <- factor(GO_Cellular_Component_stats$GO, levels= diff_age_levels)\n\n\n\nSup_GO_time.B <- ggplot(GO_Cellular_Component_stats) +\n  geom_tile(aes( diff_age, GO, fill = fraction)) +\n  geom_text(aes(diff_age, GO, label = N), color=\"white\") +\n  scale_fill_gradient(low=\"grey\", high=\"red\" )+\n  theme_bw()+\n  labs(fill = \"Gene fraction\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n\n\n\n```\n\n\n\n```{r}\n\nlibrary(ggpubr)\n\n\nGO_Biological_Process_centrality <-  merge(GO_Biological_Process,  PPI_diff_age_HNMF[, c(\"exon_ID\", \"mapped_gene\", \"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\", \"type\") ], by=c(\"exon_ID\", \"mapped_gene\"))\n\n\nGO_Biological_Process_centrality <- unique(GO_Biological_Process_centrality[, c(\"mapped_gene\", \"GO\", \"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\")])[harmonic_centrality>10]  #Filterning nodes that are not conected to the main network\n\n\nGO_Biological_Process_centrality$GO <- factor(GO_Biological_Process_centrality$GO,  levels = GO_Biological_Process_centrality[ , .(median=median(harmonic_centrality)) , by=\"GO\" ][order(-median)]$GO)\n\n\nggplot(unique(GO_Biological_Process_centrality[, c(\"mapped_gene\", \"GO\", \"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\")])[harmonic_centrality>10] )  +\n  geom_boxplot(aes(GO, harmonic_centrality  ) ) +\n    ylab(\"eigencentrality\") +\n    theme(axis.text.x = element_text(angle = 45, vjust = 0.6),\n    axis.title.y = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n\n\n\nGO_Biological_Process_centrality$GO <- factor(GO_Biological_Process_centrality$GO,  levels = GO_Biological_Process_centrality[ , .(median=median(eigen_centrality)) , by=\"GO\" ][order(-median)]$GO)\n\n\nggplot( GO_Biological_Process_centrality )  +\n  geom_boxplot(aes(GO, eigen_centrality  ) ) +\n    ylab(\"eigencentrality\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.6),\n    axis.title.x = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n\nGO_Biological_Process_centrality$GO <- factor(GO_Biological_Process_centrality$GO,  levels = GO_Biological_Process_centrality[ , .(median=median(betweenness)) , by=\"GO\" ][order(-median)]$GO)\n\n\nggplot(unique(GO_Biological_Process_centrality[, c(\"mapped_gene\", \"GO\", \"betweenness\", \"eigen_centrality\", \"harmonic_centrality\", \"degree_centrality\")])[harmonic_centrality>10] )  +\n  geom_boxplot(aes(GO, log10(betweenness))   ) +\n    theme(axis.text.x = element_text(angle = 45, vjust = 0.6),\n    axis.title = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n```\n\n\n```{r, fig.height= 7, fig.width=5}\nGO_Biological_Process_centrality$GO <- factor(GO_Biological_Process_centrality$GO,  levels = GO_Biological_Process_centrality[ , .(median=median(eigen_centrality)) , by=\"GO\" ][order(-median)]$GO)\n\n\n\n\n\nmy_comparisons <- list(c(\"vesicle_mediated_transport\", \"cytoskeleton_organization\" ),\n                       c(\"vesicle_mediated_transport\", \"signal_transduction\" ),\n                       c(\"vesicle_mediated_transport\", \"nervous_system_development\"),\n                       c(\"vesicle_mediated_transport\", \"synapse_assembly\" ),\n                       c(\"cytoskeleton_organization\", \"signal_transduction\" ),\n                       c(\"cytoskeleton_organization\", \"nervous_system_development\" ),\n                       c(\"cytoskeleton_organization\", \"synapse_assembly\"),\n                       c(\"signal_transduction\", \"nervous_system_development\" ),\n                       c(\"signal_transduction\", \"nervous_system_development\" ),\n                       c(\"nervous_system_development\", \"synapse_assembly\" )\n                       )\n\n\nggplot( GO_Biological_Process_centrality, aes(GO, eigen_centrality  )  )  +\n  geom_boxplot() +\n    ylab(\"eigencentrality\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.6),\n    axis.title.x = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5)) +\n  geom_signif(comparisons = my_comparisons, \n              map_signif_level=TRUE , y_position =  seq(0.9, 1.9, 0.1))\n\n```\n\n\n\n\n```{r, fig.height= 7, fig.width=5}\nGO_Biological_Process_centrality$GO <- factor(GO_Biological_Process_centrality$GO,  levels = GO_Biological_Process_centrality[ , .(median=median(eigen_centrality)) , by=\"GO\" ][order(-median)]$GO)\n\n\n\n\n\nmy_comparisons <- list(#c(\"vesicle_mediated_transport\", \"cytoskeleton_organization\" ),\n                       c(\"vesicle_mediated_transport\", \"signal_transduction\" ),\n                       c(\"vesicle_mediated_transport\", \"nervous_system_development\"),\n                       c(\"vesicle_mediated_transport\", \"synapse_assembly\" ),\n                       c(\"cytoskeleton_organization\", \"signal_transduction\" ),\n                       c(\"cytoskeleton_organization\", \"nervous_system_development\" ),\n                       c(\"cytoskeleton_organization\", \"synapse_assembly\")\n                       #c(\"signal_transduction\", \"nervous_system_development\" ),\n                       #c(\"signal_transduction\", \"nervous_system_development\" ),\n                       #c(\"nervous_system_development\", \"synapse_assembly\" )\n                       )\n\n\nF6H <-  ggplot( GO_Biological_Process_centrality, aes(GO, eigen_centrality  )  )  +\n  geom_boxplot() +\n    ylab(\"Eigencentrality\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.6),\n    axis.title.x = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5)) +\n  ggsignif::geom_signif(test = \"wilcox.test\", comparisons = my_comparisons, step_increase=0.15 , test.args = list(alternative = \"greater\", paired = FALSE), map_signif_level = TRUE) +\n  scale_x_discrete(labels=c(\"Vesicle mediated transportt\", \"Cytoskeleton organization\", \"Signal transduction\", \"Nervous system development\", \"Synapse assembly\"))\n\nF6H\n\n```\n\n\n```{r, fig.height= 7, fig.width=5}\n\nGO_Biological_Process_centrality_HNM_age <- merge(GO_Biological_Process_centrality, Delta_HNMF_whippet_ME_age_diff_total_PPI[is.na(diff_age.x)!=TRUE][ , .(min_age_HNM=min(diff_age.x))  , by=\"mapped_gene\" ], by=\"mapped_gene\")\n\nkruskal.test(data = GO_Biological_Process_centrality_HNM_age,  min_age_HNM ~ GO)\n\n\nmy_comparisons <- list(#c(\"vesicle_mediated_transport\", \"cytoskeleton_organization\" ),\n                       #c(\"vesicle_mediated_transport\", \"signal_transduction\" ),\n                       #c(\"vesicle_mediated_transport\", \"nervous_system_development\"),\n                       #c(\"vesicle_mediated_transport\", \"synapse_assembly\" ),\n                       c(\"cytoskeleton_organization\", \"signal_transduction\" ),\n                       c(\"cytoskeleton_organization\", \"nervous_system_development\" ),\n                       c(\"cytoskeleton_organization\", \"synapse_assembly\")\n                       #c(\"signal_transduction\", \"nervous_system_development\" ),\n                       #c(\"signal_transduction\", \"nervous_system_development\" ),\n                       #c(\"nervous_system_development\", \"synapse_assembly\" )\n                       )\n\n\nF6I <- ggplot( GO_Biological_Process_centrality_HNM_age, aes(GO, min_age_HNM  )  )  +\n  geom_boxplot() +\n    ylab(\"Earliest microexon alternative inclusion per gene\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.6),\n    axis.title.x = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5)) +\n      scale_y_continuous(breaks=seq(10.5,16.5,1)) +\n  ggsignif::geom_signif(test = \"wilcox.test\", comparisons = my_comparisons, step_increase=0.15 , test.args = list(alternative = \"less\", paired = FALSE), map_signif_level = TRUE) +\n  scale_x_discrete(labels=c(\"Vesicle mediated transportt\", \"Cytoskeleton organization\", \"Signal transduction\", \"Nervous system development\", \"Synapse assembly\"))\n\n\n\nkruskal.test(GO_Biological_Process_centrality_HNM_age$min_age_HNM, GO_Biological_Process_centrality_HNM_age$GO)\npairwise.wilcox.test(GO_Biological_Process_centrality_HNM_age$min_age_HNM, GO_Biological_Process_centrality_HNM_age$GO)\n\n```\n\n\n\n```{r, fig.height=9, fig.width=16}\nF6.bottom <- plot_grid(F6FG, F6H, F6I, labels = c( \"\", 'H', 'I'), nrow=1, rel_widths = c(2.5, 1, 1))\nF6.bottom\n```\n\n\n\n```{r}\nlibrary(ggstatsplot)\ndf_pair <- ggstatsplot::pairwise_p(GO_Biological_Process_centrality, eigen_centrality,  type = \"nonparametric\", GO)\n\n```\n\n\n\n```{r}\nkruskal.test(data = GO_Biological_Process_centrality,  eigen_centrality ~ GO)\nkruskal.test(data = GO_Biological_Process_centrality,  harmonic_centrality ~ GO)\n\n\n\npairwise.wilcox.test(GO_Biological_Process_centrality$eigen_centrality, GO_Biological_Process_centrality$GO)\npairwise.wilcox.test(GO_Biological_Process_centrality$harmonic_centrality, GO_Biological_Process_centrality$GO)\n```\n\n```{r}\npairwise.wilcox.test(GO_Biological_Process_centrality$eigen_centrality, GO_Biological_Process_centrality$GO)\npairwise.wilcox.test(GO_Biological_Process_centrality$harmonic_centrality, GO_Biological_Process_centrality$GO)\n```\n\n\n\n\n\n```{r}\nBiological_Process <- fread(\"../Figures/New_Figure 5/STRING/GO/ME_genes_background/Biological_Process.tsv\")\nCellular_Component <- fread(\"../Figures/New_Figure 5/STRING/GO/ME_genes_background/Cellular_Component.tsv\")\nProtein_Domains <- fread(\"../Figures/New_Figure 5/STRING/GO/ME_genes_background/INTERPRO Protein Domains and Features.tsv\")\n\n\n\nBiological_Process[ , `:=`( minus_log10_FDR=-log10(`false discovery rate`),\n                            GO_size=(`observed gene count` + `background gene count`) ,\n                            GO_fraction=(`observed gene count`/`background gene count`) ,\n                            GO_class=\"Biological Process\") ]\n\n\n\nCellular_Component[ , `:=`( minus_log10_FDR=-log10(`false discovery rate`),\n                            GO_size=(`observed gene count` + `background gene count`) ,\n                            GO_fraction=(`observed gene count`/`background gene count`) ,\n                            GO_class=\"Cellular Component\") ]\n\n\nProtein_Domains[ , `:=`( minus_log10_FDR=-log10(`false discovery rate`),\n                            GO_size=(`observed gene count` + `background gene count`) ,\n                            GO_fraction=(`observed gene count`/`background gene count`) ,\n                            GO_class=\"INTERPRO Protein Domains\") ]\n\n\nTotal_GO <- rbind(Biological_Process, Cellular_Component, Protein_Domains)\n\n\n\nggplot(Total_GO[GO_size>20]) + \n  geom_point( aes(GO_fraction, minus_log10_FDR, size=log2(GO_size), colour=GO_class),  alpha=0.2) +\n  facet_grid( . ~  GO_class ) +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n```\n\n\n\n\n\n\n```{r}\nggplot(PPI_diff_age_HNM_stats_EC) +\n  geom_bar(aes(min_dif_age, fill=central), stat = \"count\", position=\"fill\" ) +\n  xlab(\"Earliest microexon differential inclusion detection per gene (DPC)\")+\n  ylab(\"Protein type proportion\") +\n  scale_x_continuous(breaks=seq(10.5,16.5,1)) +\n  scale_fill_discrete(name = \"Protein type\", labels = c(\"Non-central\", \"Central\"))  +\n            theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\n\nggplot(PPI_diff_age_HNM_stats_B) +\n  geom_bar(aes(min_dif_age, fill=central), stat = \"count\", position=\"fill\" ) +\n  xlab(\"Earliest microexon differential inclusion detection per gene (DPC)\")+\n  ylab(\"Protein type proportion\") +\n  scale_x_continuous(breaks=seq(10.5,16.5,1)) +\n  scale_fill_discrete(name = \"Protein type\", labels = c(\"Non-central\", \"Central\"))  +\n            theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\n```\n\n#Zebrafish\n\n```{r, figure}\n\ntotal_zebra <-  fread(\"../../Zebrafish/Final_Report/out_filtered_ME.txt\")\ntotal_zebra_cov <- fread(\"../../Zebrafish/Final_Report/out_filtered_ME.cov.txt\")\n\n\nexons.zebra <- fread(\"../../Zebrafish/danRer11.ensembl.bed12.exons\")\n\n\nmouse_to_zebra <- fread(\"../../Zebrafish/Conserved/out.high_quality.txt.mm10.bed.liftOver_minMatch_0.01.danRer11.closest_d.out.high_quality.txt.danRer11.bed.formatted\")\nzebra_to_mouse <- fread(\"../../Zebrafish/Conserved/out.high_quality.txt.danRer11.bed.liftOver_minMatch_0.01.mm10.closest_d.out.high_quality.txt.mm10.formatted\")\n\n\n\nmouse_to_zebra <- fread(\"../../Zebrafish/Conserved/Old/out.high_quality.mm10.bed_liftover_mm10todanRer11.overlap_wo.out.high_quality.bed\")\nzebra_to_mouse <- fread(\"../../Zebrafish/Conserved/Old/out.high_quality.bed.liftover_0.001_mm10.overlap_wo.out.high_quality.bed.liftover_0.001_mm10\")\n\nMouse_Zebra.IDs <- unique(rbind(mouse_to_zebra[  , .(ME.mouse=V4, ME.zebra=V10 ) ], zebra_to_mouse[ , .(ME.mouse=V10, ME.zebra=V4) ] ))  #In here we are already applying a filter of 0.8 lengh\n\n\n#View(Mouse_Zebra.IDs[, .(mouse.len, zebra.len, abs(mouse.len-abs(mouse.len-zebra.len))/max(mouse.len,zebra.len) )] )\n\n\nmouse_len <- c(mouse_to_zebra[, V3-V2], zebra_to_mouse[, V9-V8])\nnames(mouse_len) <- c(mouse_to_zebra$V4, zebra_to_mouse$V10)\n\n\nzebra_len <-  c(zebra_to_mouse[, V3-V2], mouse_to_zebra[, V9-V8])\nnames(zebra_len) <- c(zebra_to_mouse$V4, mouse_to_zebra$V10)\n\n\n\n\nMouse_Zebra.IDs[, mouse.len:=mouse_len[ME.mouse]]\nMouse_Zebra.IDs[, zebra.len:=zebra_len[ME.zebra]]\n\n\nggplot(Mouse_Zebra.IDs) +\n  geom_bin2d(aes(mouse.len, zebra.len), bins = 30, color =\"white\") +\n  theme_bw() +\n  scale_fill_gradient(low =  \"#00AFBB\", high = \"#FC4E07\")\n\n\nMouse_Zebra.IDs <- Mouse_Zebra.IDs[mouse.len==zebra.len, ]\n\n\n```\n  \n  \n  \n\n```{r}\n\nMouse_Zebra.IDs\n\nME_clusters.info\n```\n\n\n\n  \n  \n```{r}  \nMouse_Zebra.IDs[ME.mouse %in%  names(ME_clusters), ME_cluster:=ME_clusters[ME.mouse] ]\n\n\n\nMouse_Zebra.IDs<- merge(Mouse_Zebra.IDs , \nME_cluster_names[, c(\"ME_cluster\", \"ME_cluster.name\")] , by=\"ME_cluster\", all.x=TRUE )\n\n\nggplot(Mouse_Zebra.IDs) +\n  geom_bar(aes(x=ME_cluster.name), stat=\"count\")\n\n\n\n\nMouse_Zebra.IDs[ , type:=\"Annotated\"  ]\n\nMouse_Zebra.IDs[!ME.mouse %in% microexons_Vastdb, type:=\"Missing in VastDB\"   ]\nMouse_Zebra.IDs[!ME.mouse %in% microexons_GENCODE, type:=\"Missing in GENCODE\"   ]\nMouse_Zebra.IDs[!ME.mouse %in% microexons_GENCODE & !ME.mouse %in% microexons_Vastdb , type:=\"Novel\"   ]\n\n\nMouse_Zebra.IDs[ , ensemble_zebra:=FALSE  ]\nMouse_Zebra.IDs[ME.zebra %in%  exons.zebra$V4, ensemble_zebra:=TRUE ]\n\nMouse_Zebra.IDs[ , ensemble_mouse:=FALSE  ]\nMouse_Zebra.IDs[ME.mouse %in%  microexons_GENCODE, ensemble_mouse:=TRUE ]\n\n\n\n\n\n\n\nDelta_HNMF_whippet_ME_age_diff_total[exon_ID %in% Mouse_Zebra.IDs$ME.mouse]\n\n\nDelta_HNMF_whippet_ME_age_diff_total[]\n\n\nMouse_Zebra.IDs[ME.mouse %in% Delta_HNMF_whippet_ME_age_diff_total$exon_ID][ ME.zebra %in% exons.zebra$V4]\n\n \n\nggplot(Mouse_Zebra.IDs) +\n  geom_bar(aes(x=ME_cluster.name, fill=type), stat=\"count\", position=\"fill\")\n\n\nlength(unique(Mouse_Zebra.IDs$ME.mouse))\n\nlength(unique(Mouse_Zebra.IDs$ME.zebra))\n\nPPI_diff_age_HNMF_central[ , conserved:=FALSE ]\nPPI_diff_age_HNMF_central[exon_ID %in% Mouse_Zebra.IDs$ME.mouse, conserved:=TRUE ]\n\nggplot(PPI_diff_age_HNMF_central) +\n  geom_jitter(aes(harmonic_centrality, diff_age,  shape= type, colour=conserved  ), width=0, height=0.1) + \n  xlab(\"Harmonic Centrality\") +\n  ylab(\"Earliest microexon differential inclusion detection (DPC)\") +\n   scale_y_continuous(breaks=seq(10.5,16.5,1)) +\n    geom_text_repel(data=PPI_diff_age_HNMF_central[  central==TRUE  ], \n                  aes(x=harmonic_centrality, y=diff_age,  colour=conserved  ), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  angle        = 90,\n                  segment.size = 0.2,\n                  label=PPI_diff_age_HNMF_central[central==TRUE  , mapped_gene],\n                  show.legend = FALSE) +\n          theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n\n\nggplot(PPI_diff_age_HNMF_central) +\n  geom_boxplot(aes(conserved, log2(betweenness) ))\n\n```\n\n\n```{r}\nMouse_Zebra.IDs[ensemble_zebra==FALSE]\n\n\nzebra.zebra <-  ggplot(Mouse_Zebra.IDs) + \n  geom_bar(aes(ME_cluster.name, fill=ensemble_zebra), stat=\"count\" ) +\n    theme(axis.text.x = element_text(angle = 45), legend.position = \"top\", legend.direction = \"horizontal\")\n\n\nzebra.mouse <- ggplot(Mouse_Zebra.IDs) + \n  geom_bar(aes(ME_cluster.name, fill=ensemble_mouse), stat=\"count\") +\n    theme(axis.text.x = element_text(angle = 45), legend.position = \"top\", legend.direction = \"horizontal\")\n  \n```\n\n```{r, }\n\n\n\nMouse_Zebra.IDs.cluster_names <- merge(Mouse_Zebra.IDs, ME_cluster_names[, c(\"ME_cluster.name\", \"ME_cluster.type\")], by=\"ME_cluster.name\")\nMouse_Zebra_stats  <- Mouse_Zebra.IDs.cluster_names[ , .N , by=c(\"ME_cluster.type\", \"ensemble_zebra\", \"ensemble_mouse\")]\n\nMouse_Zebra_stats[ , Type:=paste(ensemble_zebra, ensemble_mouse, sep = \"_\") ]\n\nMouse_Zebra_stats$ME_cluster.type <- factor(Mouse_Zebra_stats$ME_cluster.type,  levels=Mouse_Zebra_stats[!ensemble_zebra  | !ensemble_mouse , sum(N), by=c(\"ME_cluster.type\")][order(V1), ME_cluster.type])\n\n  \n  \n\nFig7.E <- ggplot(Mouse_Zebra_stats[!ensemble_zebra  | !ensemble_mouse]) +\n  geom_bar(aes(x=ME_cluster.type, y=N, fill=Type), stat = \"identity\", position=\"stack\"  ) + \n  ylab(\"Number of microexons\") +\n  xlab(\"Microexon clusters\") + \n   scale_fill_discrete(name = \"Type\", labels = c(\"Missing in both\", \"Missing in zebrafish\", \"Missing in mouse\")) +\n            theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\") +\n    theme_bw() + \n  theme(axis.text.x = element_text(angle = 90))\n\n\nFig7.E\n\n```\n\n\n```{r}\nlength(unique(Mouse_Zebra.IDs$ME.mouse))\nlength(unique(Mouse_Zebra.IDs$ME.zebra))\n\nround((Mouse_Zebra_stats[ensemble_mouse==FALSE, sum(N) ] * 100) / length(unique(Mouse_Zebra.IDs$ME.mouse)), 1)\nround((Mouse_Zebra_stats[ensemble_zebra==FALSE, sum(N) ] * 100 ) / length(unique(Mouse_Zebra.IDs$ME.zebra)), 1)\n```\n\n\n\n```{r}\nlibrary(ggsignif)\n\n#Mouse_Zebra.IDs[, ME_cluster.name:=ME_cluster.name.x]\n\nMouse_Zebra.conserved_frac <- unique(Mouse_Zebra.IDs[, c(\"ME.mouse\", \"ME_cluster.name\")])[ ,.N , by=ME_cluster.name ]\n\nMouse_Zebra.conserved_frac <-  merge( Mouse_Zebra.conserved_frac , ME_clusters.names[ , .(Total=.N) , by=ME_cluster.name], by=\"ME_cluster.name\")\n\nMouse_Zebra.conserved_frac[, percetage:=(N*100/Total)]\n\nMouse_Zebra.conserved_frac[order(percetage)]\n\nMouse_Zebra.conserved_frac <- merge(Mouse_Zebra.conserved_frac, ME_cluster_names[, c(\"ME_cluster.name\", \"ME_cluster.type\")], by=\"ME_cluster.name\" )\n\nMouse_Zebra.conserved_frac[, broad_class:=\"Other\"]\nMouse_Zebra.conserved_frac[ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Non-Neuronal\", \"Weak-Neuronal\"), broad_class:=\"Neuronal\"]\nMouse_Zebra.conserved_frac[ME_cluster.type %in% c(\"Neuro-Muscular\"), broad_class:=\"Neuro-Muscular\"]\n\nFig7.D <- ggplot(Mouse_Zebra.conserved_frac, aes(x = broad_class,  y = percetage )) +\n  geom_jitter( aes( colour = ME_cluster.type), width=0.1) +\n  geom_signif(comparisons = list(c(\"Neuronal\", \"Other\")), map_signif_level=TRUE, test=\"wilcox.test\", margin_top=5,  y_position=35, test.args = list(alternative = \"two.sided\", paired = FALSE)) +\n  xlab(\"Microexon cluster with neuronal pattern\") +\n  ylab(\"Percentage of conserved microexons\") +\n  theme_bw() + \n  theme(axis.text.x = element_text(angle = 90))\n\nFig7.D\n\n```\n\n\nExploring lift zebra that do not overlap with mouse microexons\n\n```{r}\nzebra.total_lift <- fread(\"../../Zebrafish/Conserved/out.high_quality.bed.liftover_0.001_mm10\")\n\nzebra.total_lift[!V4 %in%  zebra_to_mouse$V4, ]\n```\n\n\n\n```{r, fig.width=5, fig.height=5}\n\nplot_grid(Fig7.D, Fig7.E, ncol=1)\n\n```\n\n\n\n#### Zebra diff\n\n\n```{r}\n\n\ndiff.W.file <-  \"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-TOTAL.diff.microexons\"\ndiff.ME.file <- \"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-TOTAL.diff.ME.microexons\"\ncomp_name = \"16Mo_vs_4Mo-TOTAL\"\n\n\ndiff_zebra <- function(diff.W.file, diff.ME.file, comp_name) {\n\n\ndiff.W <- fread(diff.W.file)\ndiff.ME <- fread(diff.ME.file)\n\ndiff.WME <- merge(diff.W, diff.ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\"))\n\ndiff.WME[, Name:=comp_name]\n\ndiff.WME[ , diff:=\"NA\"]\ndiff.WME[ (DeltaPsi.x>=0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y>=0.1 &  Probability.y >= 0.9), diff:=\"Included\"]\ndiff.WME[ (DeltaPsi.x<=-0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y<=-0.1 &  Probability.y >= 0.9)  , diff:=\"Excluded\" ]\n\nreturn(diff.WME)\n}\n```\n\n\n\n```{r}\nZebra.16Mo_vs_4Mo.TOTAL <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-TOTAL.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-TOTAL.diff.ME.microexons\", \n                                \"16Mo_vs_4Mo-TOTAL\")\n\n\n\nZebra.20Mo_vs_16Mo.ZT16 <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_16Mo-ZT16.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_16Mo-ZT16.diff.ME.microexons\", \n                                \"20Mo_vs_16Mo-ZT16\")\n\n\nZebra.20Mo_vs_4M.ZT16 <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_4M-ZT16.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_4M-ZT16.diff.ME.microexons\", \n                                \"20Mo_vs_4M-ZT16\")\n\n\n\nZebra.16Mo_vs_4Mo.ZT16 <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-ZT16.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-ZT16.diff.ME.microexons\", \n                                \"16Mo_vs_4Mo-ZT16\")\n\n\n\nZebra.20Mo_vs_16Mo.ZT4 <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_16Mo-ZT4.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_16Mo-ZT4.diff.ME.microexons\", \n                                \"20Mo_vs_16Mo-ZT4\")\n\n\nZebra.20Mo_vs_4M.ZT4 <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_4M-ZT4.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/20Mo_vs_4M-ZT4.diff.ME.microexons\", \n                                \"20Mo_vs_4M-ZT4\")\n\n\n\nZebra.16Mo_vs_4Mo.ZT4 <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-ZT4.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/16Mo_vs_4Mo-ZT4.diff.ME.microexons\", \n                                \"16Mo_vs_4Mo-ZT4\")\n\n\n\n\nZebra.ZT16_vs_ZT4.20M <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/ZT16_vs_ZT4-20Mo.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/ZT16_vs_ZT4-20Mo.diff.ME.microexons\", \n                                \"ZT16_vs_ZT4-20Mo\")\n\nZebra.ZT16_vs_ZT4.16M <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/ZT16_vs_ZT4-16Mo.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/ZT16_vs_ZT4-16Mo.diff.ME.microexons\", \n                                \"ZT16_vs_ZT4-16Mo\")\n\nZebra.ZT16_vs_ZT4.4M <- diff_zebra(\"../../Zebrafish/Final_Report/Whippet/Delta/ZT16_vs_ZT4-4Mo.diff.microexons\",\n                                \"../../Zebrafish/Final_Report/Whippet/Delta/ZT16_vs_ZT4-4Mo.diff.ME.microexons\", \n                                \"ZT16_vs_ZT4-4Mo\")\n\n\n\n\nZebra.TOTAL_diff <- rbind(\nZebra.20Mo_vs_16Mo.ZT16[diff!=\"NA\"],\nZebra.20Mo_vs_4M.ZT16[diff!=\"NA\"],\nZebra.16Mo_vs_4Mo.ZT16[diff!=\"NA\"],\nZebra.20Mo_vs_16Mo.ZT4[diff!=\"NA\"],\nZebra.20Mo_vs_4M.ZT4[diff!=\"NA\"],\nZebra.16Mo_vs_4Mo.ZT4[diff!=\"NA\"],\nZebra.ZT16_vs_ZT4.20M[diff!=\"NA\"],\nZebra.ZT16_vs_ZT4.16M[diff!=\"NA\"],\nZebra.ZT16_vs_ZT4.4M[diff!=\"NA\"] )\n\n\nZebra.TOTAL_diff <- Zebra.TOTAL_diff[ , lapply(.SD, paste0, collapse=\",\") , by=\"exon_ID\"]\n\n\nMouse_Zebra.IDs[ME.zebra %in% Zebra.TOTAL_diff$exon_ID]\n\n```\n\n\n\n```{r}\nDelta_HNM_whippet_ME <- merge(Delta_HNM_whippet, Delta_HNM_ME, by=c(\"exon_ID\", \"Gene\", \"Node\",  \"Coord\", \"Strand\", \"Type\", \"age\") )\n\nDelta_HNM_whippet_ME[ (abs(DeltaPsi.x)>=0.1 &  Probability.x >= 0.9) &  (abs(DeltaPsi.y)>=0.1 &  Probability.y >= 0.9) , .N , by=(age)]\n\nDelta_HNM_whippet_ME_included <- Delta_HNM_whippet_ME[ (DeltaPsi.x<=-0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y<=-0.1 &  Probability.y >= 0.9)  , .N , by=(age)]\nDelta_HNM_whippet_ME_excluded <- Delta_HNM_whippet_ME[ (DeltaPsi.x>=0.1 &  Probability.x >= 0.9) &  (DeltaPsi.y>=0.1 &  Probability.y >= 0.9)  , .N , by=(age)]\n\n\nDelta_HNM_included_stats <- cbind(Delta_HNM_whippet_included[order(age)], Delta_HNM_ME_included[order(age), 2], Delta_HNM_whippet_ME_included[order(age), 2])\ncolnames(Delta_HNM_included_stats) <- c(\"age\", \"Whippet\", \"MicroExonator\", \"Both\")\n\n```\n\n\n\n\n#####\n\n\n```{r}\n\ncentrality_logistic_regression_HC <- glm(formula = central ~ min_dif_age, family = \"binomial\", data = PPI_diff_age_HNM_stats_HC)\nsummary(centrality_logistic_regression_HC)\n\n\ncentrality_logistic_regression_EC <- glm(formula = central ~ min_dif_age, family = \"binomial\", data = PPI_diff_age_HNM_stats_EC)\nsummary(centrality_logistic_regression_EC)\n\n\ncentrality_logistic_regression_B <- glm(formula = central ~ min_dif_age, family = \"binomial\", data = PPI_diff_age_HNM_stats_B)\nsummary(centrality_logistic_regression_B)\n```\n\n\n```{r}\n\nPPI_diff_age_HNM$L1cam_and_interactors <- factor(PPI_diff_age_HNM$L1cam_and_interactors, levels=c(TRUE, FALSE))\n\n\nF6G <- ggplot(PPI_diff_age_HNM) +\n  geom_point(aes(eigen_centrality, betweenness, colour=L1cam_and_interactors)) +\n  facet_wrap( . ~ diff_age, ncol = 2)  +\n      geom_text_repel(data=PPI_diff_age_HNM[ L1cam_and_interactors==TRUE,  ], \n                  aes(x=eigen_centrality, y=betweenness, colour=L1cam_and_interactors ), \n                  nudge_y      = 3000,\n                  direction    = \"x\",\n                  angle        = 90,\n                  segment.size = 0.2,\n                  label=PPI_diff_age_HNM[L1cam_and_interactors==TRUE  , mgi_symbol],\n                  show.legend = FALSE) +\n          theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\") +\n    scale_fill_discrete(name = \"L1CAM pathway\", labels = c(\"Member\", \"Non-member\"))  \n\n\n\n\n```\n\n\n\n\n\n\n\n\n\n```{r}\ncentrality_logistic_regression <- glm(formula = central ~ min_dif_age, family = \"binomial\", data = PPI_diff_age_HNM_stats)\nsummary(centrality_logistic_regression)\n```\n\n\n\n\n```{r, fig.height=6, fig.width=8}\n ggplot(PPI_diff_age_HNM) +\n  geom_jitter(aes(log(betweenness), diff_age, color=type ), width=0, height=0.1) +\n  xlab(\"Betweenness\") +\n  ylab(\"Earliest microexon differential inclusion detection (DPC)\") +\n   scale_y_continuous(breaks=seq(10.5,16.5,1)) +\n    geom_text_repel(data=PPI_diff_age_HNM[  log(betweenness)>6,  ],\n                  aes(x=log(betweenness), y=diff_age, colour=type), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  angle        = 90,\n                  segment.size = 0.2,\n                  show.legend = FALSE,\n                  label=PPI_diff_age_HNM[log(betweenness)>6  , mgi_symbol] ) \n\n\n```\n\n\n\n\n## Tasic\n\n\n```{r}\nensembl = useEnsembl(biomart=\"ensembl\", dataset=\"mmusculus_gene_ensembl\", host = \"www.ensembl.org\")\n\n\nME_final.transcript <- gsub(\"\\\\..*\",\"\", ME_final$transcript)\n\nME_final$ensembl_transcript_id <- gsub(\"\\\\..*\",\"\", ME_final$transcript) \n\ngene_table.TOTAL <- data.table(getBM(attributes=c('ensembl_transcript_id', 'ensembl_gene_id', \"mgi_symbol\"),filters = 'ensembl_transcript_id', values = ME_final.transcript[nchar(ME_final.transcript)!=0], mart = ensembl,  ))\n\n\ngene_table.TOTAL <- merge(gene_table.TOTAL, ME_final[, c(\"ensembl_transcript_id\", \"ME\")], by=\"ensembl_transcript_id\")\n```\n\n\n\n\n```{r}\n\n\nME_clusters.info <- merge(PCA_loadings, ME_cluster_names, by=\"ME_cluster\")\n\nME_clusters.info[ME_cluster.type==\"Neuronal\" | ME_cluster.type==\"Neuromuscular\"]\n\n\nlibrary(readr)\n\nlibrary(Hmisc)\n\n\nTasic_sample_info <- data.table(read_delim(\"~/Google_Drive/Results/ME/Single_cell/Tasic/GSE71585.txt\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\nTasic_clustering <- data.table(read_delim(\"~/Google_Drive/Results/ME/Single_cell/Tasic/GSE71585_Clustering_Results.csv\", \n    \",\", escape_double = FALSE, trim_ws = TRUE))\n\ntasic_et_al_ST3 <- data.table(read_csv(\"~/Google_Drive/Results/ME/Single_cell/Tasic/tasic_et_al.ST3.csv\"))\n\n\n\ntasic_metadata <- merge(Tasic_sample_info, tasic_et_al_ST3, by.x=\"Sample_Name_s\", by.y=\"GEO Sample Accession\")\n\ntasic_metadata <- tasic_metadata[, c(\"Run_s\", \"GEO Sample Title\") ]\n\n\ntasic_metadata <- merge( Tasic_clustering, tasic_metadata, by.x=\"sample_title\", by.y=\"GEO Sample Title\")\n\n\n\n\n\nME_cov_filtered_tasic <- merge( ME_cov, \n       tasic_metadata[, c(\"sample_title\", \"broad_type\", \"core_intermediate\", \"primary_type\", \"Run_s\")],\n       by.x=\"FILE_NAME\", by.y = \"Run_s\")\n\n\nME_cov_filtered_tasic <-  ME_cov_filtered_tasic[ME %in% ME_final[, ME]  , ]\n\n\nME_cov_filtered_tasic$sum_ME_coverage <-  sapply(strsplit(as.character(ME_cov_filtered_tasic$ME_coverages), \",\", fixed=T), function(x) sum(as.numeric(x)))\nME_cov_filtered_tasic$sum_SJ_coverage <-  sapply(strsplit(as.character(ME_cov_filtered_tasic$SJ_coverages), \",\", fixed=T), function(x) sum(as.numeric(x)))\n\n\n#ME_cov_filtered_tasic[, `:=`( total_cov_alternatives_5=Alt5_coverages, total_cov_alternatives_3=Alt3_coverages)]\nME_cov_filtered_tasic[ Alt5_coverages==\"None\" , `:=`( Alt5_coverages=0)]\nME_cov_filtered_tasic[ Alt3_coverages==\"None\" , `:=`( Alt3_coverages=0)]\nME_cov_filtered_tasic$total_cov_alternatives_5 <-  sapply(strsplit(as.character(ME_cov_filtered_tasic$Alt5_coverages), \",\", fixed=T), function(x) sum(as.numeric(x)))\nME_cov_filtered_tasic$total_cov_alternatives_3 <-  sapply(strsplit(as.character(ME_cov_filtered_tasic$Alt3_coverages), \",\", fixed=T), function(x) sum(as.numeric(x)))\n\nME_cov_filtered_tasic_primary_type <- ME_cov_filtered_tasic[, .(sum_ME_coverage=sum(sum_ME_coverage),\n                          sum_SJ_coverage =sum(sum_SJ_coverage),\n                          total_cov_alternatives_3 = sum(total_cov_alternatives_3),\n                          total_cov_alternatives_5 = sum(total_cov_alternatives_5)\n                          ), by=c(\"primary_type\", \"broad_type\", \"ME\") ]\n\n\n\n\n\n\nME_cov_filtered_tasic_primary_type[,PSI:=(sum_ME_coverage/(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5))]\n\nmin_PSI_sum <- 5\n  \nME_cov_filtered_tasic_primary_type[sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5<min_PSI_sum, PSI:=NaN]\n\nlibrary(Hmisc )\n\nME_cov_filtered_tasic_primary_type[ , \n            `:=`(\n              lower=binconf(x=sum_ME_coverage, n=(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5) )[, \"Lower\"],\n              upper=binconf(x=sum_ME_coverage, n=(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5) )[, \"Upper\"]\n              ) ]\n\n\n\nME_cov_filtered_tasic_primary_type <- merge(ME_cov_filtered_tasic_primary_type, unique(gene_table.TOTAL), by=\"ME\")\n\n\nME_cov_filtered_tasic_primary_type.ME_clusters <- merge(ME_cov_filtered_tasic_primary_type, ME_clusters.info[, c(\"ME\", \"ME_cluster.type\", \"ME_cluster.name\")], by=\"ME\")\n\n\n\n\n\n```\n\n```{r}\nlibrary(stringr)\n\ntable(grepl(\"ENC\",  unique(ME_cov_filtered[, FILE_NAME])))\n\n```\n\n\n\n\n\n\n```{r, fig.width=15,  fig.height=20}\n\n\n\n\n\n#C7_interesting <- c(\"chr1_-_93026831_93026855\", \"chr1_+_118512704_118512728\", \"chr11_-_106180954_106180983\", \"chr11_-_3352899_3352917\", \"chr11_+_54671654_54671678\", \"chr3_-_148827211_148827238\",\" chr4_-_76138555_76138573\", \"chr5_+_143703372_143703375\", \"chr5_+_48263640_48263667\", \"chr8_-_54645337_54645358\")\n\n\n#ggplot(ME_cov_filtered_tasic_primary_type[ ME %in% C7_interesting, ]  ) +\n#  geom_pointrange(aes(x=primary_type, y=PSI, colour= broad_type, group=broad_type, shape=broad_type, ymin=lower, ymax=upper))+\n#  theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5)) +\n#  facet_grid( gene_names[ME] ~ . )\n\n\ntarget_genes <- c(\"Kif1a\", \"Dctn1\", \"Kdm1a\", \"Kdm2a\",  \"Itsn1\", \"Dnm1\", \"Dnm3\", \"Trrap\", \"Dclk2\")\n\ntarget_genes <- c(\"Kif1a\", \"Dctn1\", \"Kdm1a\", \"Kdm2a\",  \"Itsn1\", \"Dnm1\", \"Dnm3\", \"Trrap\", \"Dclk2\")\n\n\n\nggplot(ME_cov_filtered_tasic_primary_type[ mgi_symbol %in% target_genes &  ME %in% Delta_HNMF_whippet_ME_age_diff_total$exon_ID , ]  ) +\n  geom_pointrange(aes(x=primary_type, y=PSI, colour= broad_type, group=broad_type, shape=broad_type, ymin=lower, ymax=upper))+\n  facet_grid( paste0( mgi_symbol, ME) ~ . ) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))\n\n\n\nggplot(ME_cov_filtered_tasic_primary_type[ mgi_symbol %in% target_genes, ]  ) +\n  geom_pointrange(aes(x=primary_type, y=PSI, colour= broad_type, group=broad_type, shape=broad_type, ymin=lower, ymax=upper))+\n  facet_grid( paste0( mgi_symbol, ME) ~ . ) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5))\n\n```\n\n\n\n######\n\n\n## Tasic\n\n```{r}\n#Tasic_unpooled_diff_exons <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/Whippet_Delta/Tasic/GABA-ergic_Neuron_vs_Glutamatergic_Neuron.diff.Potential_Exon.exon_ID.only_ME.diff\", \n#    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\n\n\n#Tasic_pooled_diff_exons <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/Whippet_Delta/Tasic/Pool/TOTAL.Pool.only_ME.diff\", \n#    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\n\nTasic_unpooled_diff_exons <- fread(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Single_Cell/Unpooled/GABA-ergic_Neuron_vs_Glutamatergic_Neuron.diff.microexons\")\n\nTasic_pooled_diff_exons <- data.table()\n\nfor ( i in seq(1:10)){\n  \n  path <- paste0(\"/Users/gp7/Google_Drive/Results/ME/Paper/Final_Report/Reps/Rep1/Single_Cell/GABA-ergic_Neuron_vs_Glutamatergic_Neuron_rep_\", i, \".diff.microexons\")\n  file <- fread(path)\n  file[, Rep:=i]\n  Tasic_pooled_diff_exons <- rbind(Tasic_pooled_diff_exons, file)\n  \n}\n\n\n```\n\n\n```{r}\nlibrary(ggplot2)\nlibrary(data.table)\n\nggplot(Tasic_unpooled_diff_exons) +\n  geom_histogram(aes(Entropy), binwidth=0.1)\n\n```\n\n\n```{r}\n\nTasic_unpooled_pooled <- merge(Tasic_unpooled_diff_exons[ , c(\"exon_ID\", \"Probability\", \"DeltaPsi\")], \nTasic_pooled_diff_exons[ , .( mean_Probability=mean(Probability), mean_DeltaPsi=mean(DeltaPsi)) , by=\"exon_ID\"  ],\nby=\"exon_ID\")\n\nTasic_unpooled_pooled[ , sig_unpool:=FALSE ]\nTasic_unpooled_pooled[ abs(DeltaPsi) >= 0.1 &  Probability>=0.9, sig_unpool:=TRUE ]\n\nTasic_unpooled_pooled[ , sig_pool:=FALSE ]\nTasic_unpooled_pooled[ abs(mean_DeltaPsi) >= 0.1 &  mean_Probability>=0.9, sig_pool:=TRUE ]\n\nTasic_pooled_diff_exons[, sd_probability:=sd(Probability) , by=\"Coord\"]\n\nggplot(Tasic_pooled_diff_exons) +\n  geom_histogram(aes(x=sd_probability))\n```\n\n\n```{r}\nnrow(Tasic_unpooled_pooled[sig_unpool==\"TRUE\"])\nnrow(Tasic_unpooled_pooled[sig_pool==\"TRUE\"])\n```\n\n\n```{r}\nggplot() +\n  \n  geom_point( data=Tasic_unpooled_pooled, aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability )) +\n  geom_point( data=Tasic_unpooled_pooled[sig_unpool==FALSE & sig_pool==TRUE]  , aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability ), color=\"red\" ) +\n  geom_point( data=Tasic_unpooled_pooled[sig_unpool==TRUE & sig_pool==TRUE]  , aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability ), color=\"green\" ) +\n  geom_point( data=Tasic_unpooled_pooled[sig_unpool==TRUE & sig_pool==FALSE]  , aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability ), color=\"blue\" ) +\n  theme_bw()\n\n```\n\n\n\n```{r}\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron_old <- Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron_old[ order(-abs(mean_DeltaPsi)), c(\"exon_ID\", \"mgi_symbol\", \"wikigene_description\", \"mean_DeltaPsi\", \"mean_Probability\")]\n```\n\n\n\n```{r}\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- Tasic_unpooled_pooled[abs(mean_DeltaPsi - DeltaPsi) <=0.25 &  sig_pool==TRUE, ]\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- merge( Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, unique(gene_table.TOTAL[, c(\"ME\", \"mgi_symbol\")]), by.x=\"exon_ID\", by.y=\"ME\")\n\n#Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- merge( Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron , unique(gene_info_total[ , c(\"mgi_symbol\", \"wikigene_description\")]), by= \"mgi_symbol\")\n\n\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ order(-abs(mean_DeltaPsi))]\n\nlength(unique(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[, mgi_symbol]))\n```\n\n\n\n\n\n```{r}\n\n#ref Slc4a10 https://www.frontiersin.org/articles/10.3389/fncel.2015.00223/full\n#ref Ank3 https://www.sciencedirect.com/science/article/pii/S0896627314009088\n#ref KCNMA1 https://www.sciencedirect.com/science/article/pii/S0896627313001852\n#ref Kif3a https://www.sciencedirect.com/science/article/pii/S089662730300062X\n# ref DLGAP https://molecularbrain.biomedcentral.com/articles/10.1186/s13041-017-0324-9\n\n\nPre_synaptic <- c( \"Ptprd\" , \"Ppfia2\", \"Dlgap1\", \"Gabrg2\", \"Kcnma1\", \"Kif3a\", \"Cadps\") \nPost_synaptic <- c( \"Nrxn3\" , \"Nrxn1\")\nPrePost_synaptic <- c(\"Ank3\",\"Slc4a10\")\n```\n\n\n\n\n\n```{r}\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[  !exon_ID %in% microexons_GENCODE &  !exon_ID %in% microexons_Vastdb , c(\"exon_ID\", \"mgi_symbol\", \"wikigene_description\", \"mean_DeltaPsi\", \"mean_Probability\")][order(-abs(mean_DeltaPsi))]\n\nmicroexons_GENCODE\nmicroexons_Vastdb\n```\n\n\n```{r}\nBrain_string_interactions_out[mgi_symbol==\"Akap13\",]\n```\n\n\n```{r}\nwrite.table(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, file = \"~/Desktop/Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron.txt\", append = FALSE, quote = F, sep = \"\\t\",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n```\n\n\n```{r}\n\n\nggplot()+\n  geom_point(data=Tasic_unpooled_pooled, aes(mean_DeltaPsi, mean_Probability)) +\n  geom_point(data=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, aes(mean_DeltaPsi, mean_Probability), color=\"red\")\n```\n\n\n\n```{r, fig.height=5, fig.width=6}\nlibrary(\"ggrepel\")\n\n\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Pre_synaptic, Location:=\"Presynaptic\"]\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Post_synaptic, Location:=\"Postsynaptic\"]\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% PrePost_synaptic, Location:=\"Both\"]\n\n\n\n#Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[!exon_ID %in% ME_blacklist$ME]\n\nggplot()+\n  geom_point(data=Tasic_unpooled_pooled, aes(mean_DeltaPsi, mean_Probability), color=\"grey\") +\n  geom_point(data=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, aes(mean_DeltaPsi, mean_Probability), color=\"black\") +\n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Pre_synaptic],\n                  colour=\"forestgreen\", aes(x=mean_DeltaPsi, y=mean_Probability), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Pre_synaptic , mgi_symbol] ) +\n  \n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Post_synaptic],\n                  colour=\"firebrick4\", aes(x=mean_DeltaPsi, y=mean_Probability), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Post_synaptic , mgi_symbol] ) +\n  \n  \n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% PrePost_synaptic],\n                  colour=\"darkgoldenrod\", aes(x=mean_DeltaPsi, y=mean_Probability), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% PrePost_synaptic , mgi_symbol] ) +\n    \n  \n  ylim(0.5, 1.15) +\n  theme_bw() +\n  xlab(\"\") +\n  xlab(\"Mean delta PSI\") +\n  ylab(\"Mean probability\")\n\n\n\n\n```\n\n\n\n```{r, fig.height=2, fig.width=3}\n\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Pre_synaptic, Location:=\"Presynaptic\"]\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Post_synaptic, Location:=\"Postsynaptic\"]\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% PrePost_synaptic, Location:=\"Both\"]\n\n\n\nggplot()+\n  geom_point(data=Tasic_unpooled_pooled, aes(mean_DeltaPsi, mean_Probability), color=\"grey\") +  # Final version\n  geom_point(data=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, aes(mean_DeltaPsi, mean_Probability), color=\"black\") +\n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[!is.na(Location)],\n                  aes(x=mean_DeltaPsi, y=mean_Probability, colour=Location), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[!is.na(Location), mgi_symbol]) +\n  \n  ylim(0.5, 1.15) +\n  theme_bw() +\n  xlab(\"\") +\n  xlab(\"Mean delta PSI\") +\n  ylab(\"Mean probability\") +\n  scale_color_manual(values=c( \"darkgoldenrod\",  \"firebrick4\", \"forestgreen\")) +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\") +\n  theme(legend.position = \"none\")\n``` \n\n\n```{r}\nunique(ME_cov_filtered_tasic_primary_type$broad_type)\n```\n\n\n\n```{r}\nprimary_type_levels <- c(unique(ME_cov_filtered_tasic_primary_type[broad_type==\"Endothelial Cell\", primary_type]),\nunique(ME_cov_filtered_tasic_primary_type[broad_type==\"Oligodendrocyte\", primary_type]),\nunique(ME_cov_filtered_tasic_primary_type[broad_type==\"Microglia\", primary_type]),\nunique(ME_cov_filtered_tasic_primary_type[broad_type==\"Oligodendrocyte Precursor Cell\", primary_type]),\nsort(unique(ME_cov_filtered_tasic_primary_type[broad_type==\"Astrocyte\", primary_type])),\nsort(unique(ME_cov_filtered_tasic_primary_type[broad_type==\"Glutamatergic Neuron\", primary_type])),\nunique(ME_cov_filtered_tasic_primary_type[broad_type==\"GABA-ergic Neuron\", primary_type]) )\n\nME_cov_filtered_tasic_primary_type$primary_type <- factor(ME_cov_filtered_tasic_primary_type$primary_type , levels = primary_type_levels)\n\n```\n\n\n\n```{r, fig.width=4.5,  fig.height=6}\n\ntarget_genes <- c(\"Gabrg2\", \"Nrxn1\", \"Nrxn3\", \"Ptprd\")\n\nME_cov_filtered_tasic_primary_type[(mgi_symbol %in% target_genes) & (ME %in% Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron$exon_ID)]\nME_cov_filtered_tasic_primary_type[is.na(PSI), `:=`(lower=NA, upper=NA) ]\n\n\nggplot(ME_cov_filtered_tasic_primary_type[ mgi_symbol %in% target_genes & ME %in% Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron$exon_ID, ]  ) +\n  geom_pointrange(aes(x=primary_type, y=PSI, colour= broad_type, group=broad_type, ymin=lower, ymax=upper))+\n  facet_grid( paste0( mgi_symbol, ME) ~ . ) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90), legend.position = \"top\", legend.direction = \"horizontal\")\n```\n\n\n\n```{r}\ncat( unique(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron$mgi_symbol), sep='\\n')\n```\n\n\n######\n\nNumbers \n```{r}\n\n###Abstract\n\n\nBulk_RNA_SEQ.Table <-  table(grepl(\"ENC\",  unique(ME_cov_filtered[, FILE_NAME])))\n\nTotal_Bulk_RNA_seq <- sum(Bulk_RNA_SEQ.Table)\nTotal_scRNA_seq <-nrow(tasic_metadata)\n\nTotal_microexon.number <- length(ME_final[ , unique(ME)])\n#HNMF_microexons.number <- length(Delta_HNMF_whippet_ME_age_diff_total_PPI[ , unique(exon_ID)])\n\n\n\ndiff_spliced.brain_dev <- length(unique(Delta_HNM_whippet_ME_age_diff_total$exon_ID , Delta_F_whippet_ME_age_diff_total$exon_ID))\n\n\ndiff_spliced.brain_dev.novel <-  length(unique(Delta_HNM_whippet_ME_age_diff_total[ ! exon_ID %in% c(microexons_Vastdb, microexons_GENCODE) ,  exon_ID  ], Delta_F_whippet_ME_age_diff_total[ ! exon_ID %in% c(microexons_Vastdb, microexons_GENCODE) ,  exon_ID  ]))\n\n\n### Introduction\n\nTotal_microexon.number.not_gencode <- length(ME_final[ !ME %in% microexons_GENCODE , unique(ME)])\nTotal_microexon.number.not_gencode.percentage <- (Total_microexon.number.not_gencode / Total_microexon.number)*100\n\n\ndiff_spliced.brain_dev.not_vastdb <-  length(unique(Delta_HNM_whippet_ME_age_diff_total[ ! exon_ID %in% c(microexons_Vastdb) ,  exon_ID  ], Delta_F_whippet_ME_age_diff_total[ ! exon_ID %in% c(microexons_Vastdb) ,  exon_ID  ]))\n\n\ndiff_spliced.brain_dev.not_vastdb.percentage <- (diff_spliced.brain_dev.not_vastdb/diff_spliced.brain_dev)*100\n\n\n\nconserved_zebra <-  length(unique(Mouse_Zebra.IDs[ , ME.zebra]))\n\n\nconserved_zebra.not_ensembl <- length(unique(Mouse_Zebra.IDs[ensemble_zebra==FALSE, ME.zebra]))\n\n\n\n\n#Results \n\n\nsym_percentage.neuronal_neuromuscular_muscular <- ME_cluster_names[ ME_cluster.type %in% c(\"Neuronal\", \"Neuro-Muscular\", \"Muscular\") , 100- (sum(asym)/sum(total))*100]\n\n\nDelta_HNM_whippet_ME_age_diff_total\nDelta_HNMF_whippet_ME_age_diff_total\n\nHNMF_microexons.not_vastdb.number <- nrow(Delta_HNMF_whippet_ME_age_diff_total_PPI[!exon_ID %in% microexons_Vastdb, ])\nHNMF_microexons.not_vastdb.percentage <- round((HNMF_microexons.not_vastdb.number/HNMF_microexons.number)*100, 2)\n\n\nNovel_gencode.number <- nrow(ME_final[ , .N, by=ME ][ !ME %in% microexons_GENCODE, ])\nNovel_gencode.percentage <- (Novel_gencode.number / Total_microexon.number) *100\n\n\nNovel_vastdb.number <- nrow(ME_final[ , .N, by=ME ][ !ME %in% microexons_Vastdb, ])\nNovel_vastdb.percentage <- (Novel_vastdb.number / Total_microexon.number) *100\n\n\nMHN_diff.whippet_ME <- length( unique(Delta_HNM_whippet[ abs(DeltaPsi)>=0.1 &  Probability >= 0.9 & exon_ID %in%  Delta_HNM_ME[ abs(DeltaPsi)>=0.1 &  Probability >= 0.9 ,  exon_ID ]   ,  exon_ID ]))\nF_diff.whippet_ME <- length( unique(Delta_F_whippet[ abs(DeltaPsi)>=0.1 &  Probability >= 0.9 & exon_ID %in%  Delta_F_ME[ abs(DeltaPsi)>=0.1 &  Probability >= 0.9 ,  exon_ID ]   ,  exon_ID ]))\n\n\ndiff_heart <- nrow(Delta_Heart_whippet_ME[diff_high==TRUE, ])\ndiff_SKM <- nrow(Delta_SKM_whippet_ME[diff_high==TRUE, ])\ndiff_AG <- nrow(Delta_AG_whippet_ME[diff_high==TRUE, ])\n\n\n\n\nDelta_HNMF_whippet_ME_age_diff_total[ , type:=\"Annotated\"  ]\nDelta_HNMF_whippet_ME_age_diff_total[!exon_ID %in% microexons_Vastdb, type:=\"Missing in VastDB\"   ]\nDelta_HNMF_whippet_ME_age_diff_total[!exon_ID %in% microexons_GENCODE, type:=\"Missing in GENCODE\"   ]\nDelta_HNMF_whippet_ME_age_diff_total[!exon_ID %in% microexons_GENCODE & !exon_ID %in% microexons_Vastdb , type:=\"Novel\"   ]\n\ntable(Delta_HNMF_whippet_ME_age_diff_total$type)\nME_sizes <- ME_final.rep1$len_micro_exon_seq_found\nnames(ME_sizes) <- ME_final.rep1$ME\n\n\nDelta_HNMF_whippet_ME_age_diff_total[ type==\"Novel\", .N , by=c(\"type\", \"ME_len\") ]\n\n\n\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ sig_unpool==TRUE ,  ]\n```\n\n\n```{r, fi}\nggplot(Delta_HNMF_whippet_ME_age_diff_total) +\n  geom_histogram(aes(x=ME_len, fill=type), binwidth=1) +\n  facet_grid(  type ~ .) +\n  scale_fill_discrete(name=\"Microexon type\") +\n  xlab(\"Microexon length\") +\n  theme(legend.position=\"top\") +\n  theme(strip.background = element_blank(), strip.text = element_blank())\n  \n```\n\n\n\n```{r}\n\n\n\n\n\nMicroexons.PPCA.number <- length(unique(hc_rows$labels))\n\nTissue_clusters.table <- Tissue_clusters[ , .N , by=cluster ]\nME_clusters.table <- ME_clusters.names[ , .N , by=ME_cluster.name ]\n\n\nsamples_control.diff.number <- Tissue_clusters.table[ cluster %in% c(1, 3, 8), sum(N)]\n\nsamples_sig.diff.table <- Tissue_clusters[ File.accession %in% metadata[ Biosample.term.name %in% c(\"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\", \"adrenal gland\", \"skeletal muscle tissue\", \"heart\"),  File.accession], .N, by=\"name\"  ]\nsamples_sig.diff.number <- samples_sig.diff.table[, sum(N)]\n\n\ntotal_sample.diff.number <- samples_sig.diff.number + samples_control.diff.number\n\nHNMF_microexons.GENCODE_VASTDB.table <- neuronal_ME_HNMF[, unique(exon_ID), by=\"type\"][ , .N, by=\"type\" ]\n\n\nNovel_diff.longer4.number <- length(unique(ME_final[ ME %in% neuronal_ME_HNMF[type==\"Novel\", exon_ID] & len_micro_exon_seq_found>4, ME]))\n\n\n\n\n\nZebra_samples <- length(total_zebra_cov[ , unique(FILE_NAME)])\n\n\nNovel_zebra <- length(unique(Mouse_Zebra.IDs[!ME.zebra %in% exons.zebra$V4, ME.zebra]))\n\n\n\nlength(unique(Mouse_Zebra.IDs[, ME.zebra]))\n\n\nTOTAL_MHN_exons.number <- length(unique(Delta_HNM_merge[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9, exon_ID]))\nTOTAL_F_exons.number <- length(unique(Delta_F_merge[abs(DeltaPsi.x)>=0.1 & Probability.x>0.9 & abs(DeltaPsi.y)>=0.1 & Probability.y>0.9, exon_ID]))\n\nTOTAL_MHN_exons.substained.number <- length(unique(Delta_HNM_whippet_ME_age_diff_total$exon_ID))\nTOTAL_F_exons.substained.number <- length(unique(Delta_F_whippet_ME_age_diff_total$exon_ID))\n\n\nDiff_exon.Heart.number <- length(unique(Delta_Heart_whippet_ME[!is.na(change_dir), exon_ID ]))\nDiff_exon.SKM.number <- length(unique(Delta_SKM_whippet_ME[!is.na(change_dir), exon_ID ]))\nDiff_exon.AG.number <- length(unique(Delta_AG_whippet_ME[!is.na(change_dir), exon_ID ]))\n\n\nround(ME_cluster_names[ME_cluster.type %in% c(\"Neuro-Muscular\", \"Neuronal\", \"Muscular\"), mean(mean_U2_score)], 1)\n```\n\n\n\n```{r}\n\n#rationale: https://www.gungorbudak.com/blog/2016/05/25/computing-significance-of-overlap/\n\nAG_brain.intersect.number <- length(intersect(Delta_AG_whippet_ME[diff_high==TRUE]$exon_ID, Delta_HNMF_whippet_ME_age_diff_total$exon_ID))\n\n\nAG.number <- length(unique(Delta_AG_whippet_ME[diff_high==TRUE, exon_ID]))\nbrain.number <- length(unique(Delta_HNMF_whippet_ME_age_diff_total$exon_ID))\n\nMicroexons.PPCA.number\n\nphyper( AG_brain.intersect.number , AG.number,  Microexons.PPCA.number-AG.number, brain.number, lower.tail = FALSE  )\n```\n\n\n\n\n\n##### Supplemental \n\n\n\n\n\n\n```{r, fig.height=10, fig.width=14}\n\n\n\n\nME_clusters_table <- data.frame(ME_clusters)\n\nME_clusters_table$ME <- row.names(ME_clusters_table)\nME_clusters_table <- data.table(ME_clusters_table)\n\n\nME_clusters_PSI <-  data.table(merge(Tissue_PSI_matrix_melt_ppca, ME_clusters_table , by=c(\"ME\")))\n\n\n#ME_clusters_PSI <- ME_clusters_PSI[, c(\"ME\", \"FILE_NAME\", \"ME_clusters\", \"PSI\")]\n\n\nME_Tissues_clusters_PSI<- merge(ME_clusters_PSI, PCA, by.x=\"FILE_NAME\", by.y=\"File.accession\")\n\nME_Tissues_clusters_PSI[, Tissue_clusters:=cluster]\n\nPCA_loadings_stats$ME_cluster <- factor(PCA_loadings_stats$ME_cluster)\nME_Tissues_clusters_PSI$ME_clusters <- factor(ME_Tissues_clusters_PSI$ME_clusters)\n\nME_Tissues_clusters_PSI <- merge(ME_Tissues_clusters_PSI, PCA_loadings_stats, by.x=\"ME_clusters\", by.y=\"ME_cluster\" )\n\nME_Tissues_clusters_PSI$Tissue_clusters <- factor(ME_Tissues_clusters_PSI$Tissue_clusters, levels=PCA[, mean(PC1), by=\"cluster\" ][order(V1)]$cluster) \n\n\n\nsub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI[abs(PC1_mean)>0, ]\nsub_ME_Tissues_clusters_PSI <- data.table(sub_ME_Tissues_clusters_PSI)\nsub_ME_Tissues_clusters_PSI$ME_clusters <- factor(sub_ME_Tissues_clusters_PSI$ME_clusters , levels=ME_cluster_loading_order )\n\n\nsub_ME_Tissues_clusters_PSI_aggregated <-  sub_ME_Tissues_clusters_PSI[, list(PSI=mean(PSI, na.rm = TRUE)), by=list(ME, ME_clusters,  Tissue_clusters) ]\nsub_ME_Tissues_clusters_PSI_aggregated_mean <-  sub_ME_Tissues_clusters_PSI_aggregated[, list(PSI= mean(PSI, na.rm=TRUE) ), by=list(ME_clusters,  Tissue_clusters) ]\n\n\nggplot( ) +\n        geom_line(data= sub_ME_Tissues_clusters_PSI_aggregated, aes(factor(Tissue_clusters), PSI, group=ME), colour=\"grey\") +\n        geom_line(data = sub_ME_Tissues_clusters_PSI_aggregated_mean, aes(factor(Tissue_clusters), PSI, group=ME_clusters),  colour=\"red\" ) +\n        facet_grid( ME_clusters ~ .) +\n        xlab(\"Sample clusters (sorted by PC1)\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black'))\n\n\ncol1 <- c(\"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"I1\", \"I2\", \"I3\", \"M1\", \"M2\", \"M3\")\ncol2 <- c(\"N1\", \"N2\", \"N3\", \"N4\", \"NM1\", \"NM2\", \"NM3\", \"NN1\", \"O1\", \"O2\", \"WN1\", \"WN2\")\n\n\nsub_ME_Tissues_clusters_PSI_aggregated$ME_cluster <- as.numeric(as.character(sub_ME_Tissues_clusters_PSI_aggregated$ME_clusters)) \nsub_ME_Tissues_clusters_PSI_aggregated_mean$ME_cluster <- as.numeric(as.character(sub_ME_Tissues_clusters_PSI_aggregated_mean$ME_clusters)) \n\nplot_grid(\nggplot( ) +\n        geom_line(data= merge(sub_ME_Tissues_clusters_PSI_aggregated, ME_cluster_names, by.x=\"ME_cluster\",  by.y=\"ME_cluster\")[ME_cluster.name %in% col1] , aes(factor(Tissue_clusters), PSI, group=ME), colour=\"grey\") +\n        geom_line(data = merge(sub_ME_Tissues_clusters_PSI_aggregated_mean, ME_cluster_names, by.x=\"ME_cluster\",  by.y=\"ME_cluster\")[ME_cluster.name %in% col1], aes(factor(Tissue_clusters), PSI, group=ME_clusters),  colour=\"red\" ) +\n        facet_grid( ME_cluster.name ~ .) +\n        xlab(\"Sample clusters (sorted by PC1)\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black')),\n\nggplot( ) +\n        geom_line(data= merge(sub_ME_Tissues_clusters_PSI_aggregated, ME_cluster_names, by.x=\"ME_cluster\",  by.y=\"ME_cluster\")[ME_cluster.name %in% col2] , aes(factor(Tissue_clusters), PSI, group=ME), colour=\"grey\") +\n        geom_line(data = merge(sub_ME_Tissues_clusters_PSI_aggregated_mean, ME_cluster_names, by.x=\"ME_cluster\",  by.y=\"ME_cluster\")[ME_cluster.name %in% col2], aes(factor(Tissue_clusters), PSI, group=ME_clusters),  colour=\"red\" ) +\n        facet_grid( ME_cluster.name ~ .) +\n        xlab(\"Sample clusters (sorted by PC1)\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black'))\n\n)\n\n\n\n\n```\n\n\n\n\n```{r, fig.height=10, fig.width=8}\n\n\nPCA_loadings$ME_clusters <- as.numeric(as.character(PCA_loadings$ME_cluster)) \n\n\nSup_loading.A <- ggplot(merge(PCA_loadings, ME_cluster_names, by.x=\"ME_clusters\",  by.y=\"ME_cluster\")) +\n  geom_boxplot(aes(ME_cluster.name , -PC1)) +\n  ylab(\"Loading factors in PC1\") +\n  xlab(\"Microexon cluster\") +\n  theme(axis.text.x = element_text(angle = 90))\n\n\n\nSup_loading.B <-  ggplot(merge(PCA_loadings, ME_cluster_names, by.x=\"ME_clusters\",  by.y=\"ME_cluster\")) +\n  geom_boxplot(aes(ME_cluster.name , PC2)) +\n  ylab(\"Loading factors in PC2\") +\n  xlab(\"Microexon cluster\") +\n  theme(axis.text.x = element_text(angle = 90))\n\n\n\nSup_loading.C <-  ggplot(merge(PCA_loadings, ME_cluster_names, by.x=\"ME_clusters\",  by.y=\"ME_cluster\")) +\n  geom_boxplot(aes(ME_cluster.name , PC3)) +\n  ylab(\"Loading factors in PC3\") +\n  xlab(\"Microexon cluster\") +\n  theme(axis.text.x = element_text(angle = 90))\n\n\nplot_grid(Sup_loading.A, Sup_loading.B, Sup_loading.C, labels = \"AUTO\", ncol=1)\n\n\nPPI_centrality_GO[GO==\"Axon_guidance\", .N, by=\"mapped_gene\" ]\n\n```\n\n\nTables\n\n\n```{r}\n\nTS2 <- unique(merge(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, gene_table.TOTAL, by.x=\"exon_ID\", by.y=\"ME\"  ))\n\n\ncolnames(TS2) <- c(\"Coordinates\", \"Probability\", \"DeltaPsi\", \"Mean Probability\", \"Mean DeltaPsi\", \"Significance unpool\", \"Significance Pool\", \"Ensembl transcript ID\",    \"Ensembl gene ID\", \"Gene name\")\n\nfwrite(TS2, file = \"../Final_Figures/Supplementary/Table_S2.csv\", append = FALSE, quote = \"auto\", sep = \",\",  row.names = FALSE, col.names = TRUE)\n\n\n```\n\n\n\n```{r}\n#R -e  'rmarkdown::render(\"src/final_filters2.Rmd\",params = list(ME_table=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Round2/TOTAL.ME_centric.txt\", ME_coverage=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Round2/TOTAL.filter1.ME_SJ_coverage\", ME_matches_file=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Round2/TOTAL.ME_centric.ME_matches.txt\", out_filtered_ME=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Report/test/out_filtered_ME.txt\", out_low_scored_ME=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Report/test/out_low_scored_ME.txt\", out_shorter_than_3_ME=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Report/test/out_shorter_than_3_ME.txt\", min_number_files_detected=3, out_filtered_ME_cov=\"/lustre/scratch117/cellgen/team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Report/test/out_filtered_ME.cov.txt\" ), output_format=\"pdf_document\", output_file=\"/lustre/scratch117/cellgen /team218/gp7/Micro-exons/Runs/Paper/MicroExonator/Report/report.pdf\")'\n```\n\n",
    "created" : 1589935657812.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3286532808",
    "id" : "76162383",
    "lastKnownWriteTime" : 1588275387,
    "last_content_update" : 1589935673295,
    "path" : "~/Google_Drive/Results/ME/Paper/Final_Report/Figures_Parada_et_al_clean.Rmd",
    "project_path" : null,
    "properties" : {
        "chunk_output_type" : "inline"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}